<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Frankenmuth, MI</title>
      <link href="/blog/essays/frankenmuth-mi-25/"/>
      <url>/blog/essays/frankenmuth-mi-25/</url>
      
        <content type="html"><![CDATA[<style>main.hide-aside {    max-width:1000px!important;}</style><div class="gallery">    <div class="fj-gallery  data" data-rowHeight="220" data-limit="10">    <span class="gallery-data">[{"url":"https://s2.loli.net/2025/08/13/eZvJd3SxO7Lpsf2.jpg","alt":"IMG_20250525_182542.jpeg"},{"url":"https://s2.loli.net/2025/08/13/TcFYkOPuvaSgiKb.jpg","alt":"IMG_20250525_164955.jpeg"},{"url":"https://s2.loli.net/2025/08/13/F18fZpmoxMteDza.jpg","alt":"IMG_20250525_163643.jpeg"},{"url":"https://s2.loli.net/2025/08/13/a3rj8RyQsM4G5AP.jpg","alt":"IMG_20250525_202432.jpeg"},{"url":"https://s2.loli.net/2025/08/13/wgXUWKLhbGM4DVk.jpg","alt":"IMG_20250525_202656.jpeg"},{"url":"https://s2.loli.net/2025/08/13/XSKnWqao4y5NEfc.jpg","alt":"IMG_20250525_104105.jpeg"},{"url":"https://s2.loli.net/2025/08/13/Gltvkrq7xUPF4eS.jpg","alt":"IMG_20250525_160311.jpeg"},{"url":"https://s2.loli.net/2025/08/13/GwBQLOzZ8Vra2Sk.jpg","alt":"IMG_20250525_095501.jpeg"},{"url":"https://s2.loli.net/2025/08/13/Ykty49p1ScoKOvJ.jpg","alt":"IMG_20250525_163151.jpeg"},{"url":"https://s2.loli.net/2025/08/13/c7XkzFKGVtnwxf4.jpg","alt":"IMG_20250525_170341.jpeg"},{"url":"https://s2.loli.net/2025/08/13/ZCbpIt7W6AJzPVn.jpg","alt":"IMG_20250525_212400.jpeg"},{"url":"https://s2.loli.net/2025/08/13/Lcz98VRXqrEOBhN.jpg","alt":"IMG_20250525_205939.jpeg"},{"url":"https://s2.loli.net/2025/08/13/JmqHt5h3PMyTGAS.jpg","alt":"IMG_20250525_211224.jpeg"},{"url":"https://s2.loli.net/2025/08/13/gcYTErL4BOj652R.jpg","alt":"IMG_20250525_210316.jpeg"},{"url":"https://s2.loli.net/2025/08/13/9fW4jMvP6m2Fhcu.jpg","alt":"IMG_20250525_204624.jpeg"},{"url":"https://s2.loli.net/2025/08/13/rUXtwiTxmdQl63Z.jpg","alt":"IMG_20250525_205707.jpeg"}]</span>    </div>    <button class="gallery-load-more"><span>Load More</span><i class="fa-solid fa-arrow-down"></i></button>    </div>]]></content>
      
      
      <categories>
          
          <category> Essay </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Michigan </tag>
            
            <tag> Gallery </tag>
            
            <tag> Frankenmuth </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Holland, MI</title>
      <link href="/blog/essays/holland-mi-25/"/>
      <url>/blog/essays/holland-mi-25/</url>
      
        <content type="html"><![CDATA[<style>main.hide-aside {    max-width:1000px!important;}</style><div class="gallery">    <div class="fj-gallery  data" data-rowHeight="220" data-limit="10">    <span class="gallery-data">[{"url":"https://s2.loli.net/2025/08/13/IJ2CxkAtypH38Ts.jpg","alt":"IMG_20250509_211621.jpeg"},{"url":"https://s2.loli.net/2025/08/13/IgM7T2BEs5Fqnia.jpg","alt":"IMG_20250509_205920.jpeg"},{"url":"https://s2.loli.net/2025/08/13/DvZJKCpsxjf1aeQ.jpg","alt":"IMG_20250509_211332.jpeg"},{"url":"https://s2.loli.net/2025/08/13/1PyDXJsYBa6lTcr.jpg","alt":"IMG_20250509_211840.jpeg"},{"url":"https://s2.loli.net/2025/08/13/iy3VM9AmKdOp1De.jpg","alt":"IMG_20250509_205915.jpeg"},{"url":"https://s2.loli.net/2025/08/13/zBMYxjCTpE5Slus.jpg","alt":"IMG_20250509_121748.jpeg"},{"url":"https://s2.loli.net/2025/08/13/bx6AFTS3vJhD4Hr.jpg","alt":"IMG_20250509_205439.jpeg"},{"url":"https://s2.loli.net/2025/08/13/cNa7hyXl2EVfsbB.jpg","alt":"IMG_20250509_210537.jpeg"},{"url":"https://s2.loli.net/2025/08/13/i5qMWnf8LwO4xm3.jpg","alt":"IMG_20250509_121401.jpeg"},{"url":"https://s2.loli.net/2025/08/13/NfzVp1oi2gID4lh.jpg","alt":"IMG_20250509_145149.jpeg"},{"url":"https://s2.loli.net/2025/08/13/yZ8HkxA9tJRhwDe.jpg","alt":"mmexport1746929022517.jpeg"},{"url":"https://s2.loli.net/2025/08/13/te9Q3vuS5fadAsW.jpg","alt":"mmexport1746931274560.jpeg"},{"url":"https://s2.loli.net/2025/08/13/gT2GX17ZEdACWDH.jpg","alt":"IMG_20250510_105704.jpeg"},{"url":"https://s2.loli.net/2025/08/13/UNjWp43HL7Q2XTC.jpg","alt":"IMG_20250510_102923.jpeg"},{"url":"https://s2.loli.net/2025/08/13/5Ea8WAJGehZ4BbH.jpg","alt":"IMG_20250509_212939.jpeg"}]</span>    </div>    <button class="gallery-load-more"><span>Load More</span><i class="fa-solid fa-arrow-down"></i></button>    </div>]]></content>
      
      
      <categories>
          
          <category> Essay </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Michigan </tag>
            
            <tag> Gallery </tag>
            
            <tag> Holland </tag>
            
            <tag> Tulip </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>San Antonio</title>
      <link href="/blog/essays/sanantonio-25/"/>
      <url>/blog/essays/sanantonio-25/</url>
      
        <content type="html"><![CDATA[<style>main.hide-aside {    max-width:1000px!important;}</style><div class="gallery">    <div class="fj-gallery  data" data-rowHeight="220" data-limit="10">    <span class="gallery-data">[{"url":"https://s2.loli.net/2025/05/01/wQcOKySmVhlZ68j.jpg","alt":"IMG_20250407_192922.jpg"},{"url":"https://s2.loli.net/2025/05/01/8f742hJFTCQBVza.jpg","alt":"IMG_20250407_121705.jpg"},{"url":"https://s2.loli.net/2025/05/01/n3v4pgD6GodqhLB.jpg","alt":"IMG_20250407_121004.jpg"},{"url":"https://s2.loli.net/2025/05/01/oEzAubKrVsecOxg.jpg","alt":"IMG_20250407_121924.jpg"},{"url":"https://s2.loli.net/2025/05/01/ETP8t4sJhmH6GUq.jpg","alt":"IMG_20250407_121009.jpg"},{"url":"https://s2.loli.net/2025/05/01/dNGlyx9zTYC4ve7.jpg","alt":"IMG_20250407_133812.jpg"},{"url":"https://s2.loli.net/2025/05/01/5EWdirkQftMbHCa.jpg","alt":"IMG_20250409_074824.jpg"},{"url":"https://s2.loli.net/2025/05/01/42MbNtEP3FovcG5.jpg","alt":"IMG_20250407_134121.jpg"},{"url":"https://s2.loli.net/2025/05/01/bBVRNQLjiF3OChs.jpg","alt":"IMG_20250407_121938.jpg"},{"url":"https://s2.loli.net/2025/05/01/NiKPgo5lk8HtL7D.jpg","alt":"IMG_20250410_200342.jpg"},{"url":"https://s2.loli.net/2025/05/01/A1EG8ZPSDIRJuai.jpg","alt":"IMG_20250410_201024.jpg"},{"url":"https://s2.loli.net/2025/05/01/RP8j9NHB3dIKwvV.jpg","alt":"IMG_20250410_195830.jpg"},{"url":"https://s2.loli.net/2025/05/01/5BwRhCL617sz8dl.jpg","alt":"IMG_20250410_201335.jpg"},{"url":"https://s2.loli.net/2025/05/01/vTqNsmcJIyB3wf6.jpg","alt":"IMG_20250410_194900.jpg"},{"url":"https://s2.loli.net/2025/05/01/O54f6lr2oYxy1sh.jpg","alt":"IMG_20250410_195537.jpg"},{"url":"https://s2.loli.net/2025/05/01/1RrAwm75IHUoYL6.jpg","alt":"mmexport1744483814541.jpg"},{"url":"https://s2.loli.net/2025/05/01/fVCyOXugY3edBzS.jpg","alt":"mmexport1744483801460.jpg"}]</span>    </div>    <button class="gallery-load-more"><span>Load More</span><i class="fa-solid fa-arrow-down"></i></button>    </div>]]></content>
      
      
      <categories>
          
          <category> Essay </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Gallery </tag>
            
            <tag> Texas </tag>
            
            <tag> Meeting </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Washington D.C.</title>
      <link href="/blog/essays/dc-agu24/"/>
      <url>/blog/essays/dc-agu24/</url>
      
        <content type="html"><![CDATA[<style>main.hide-aside {    max-width:1000px!important;}</style><div class="gallery">    <div class="fj-gallery  data" data-rowHeight="220" data-limit="10">    <span class="gallery-data">[{"url":"https://s2.loli.net/2025/02/09/H49tOE3J6wjf8dv.jpg","alt":"20250208140344.jpg"},{"url":"https://s2.loli.net/2025/02/09/3FxuJmIQq9eCPO5.jpg","alt":"20250208140336.jpg"},{"url":"https://s2.loli.net/2025/02/09/YINay6K2SAHfU4b.jpg","alt":"20250208140340.jpg"},{"url":"https://s2.loli.net/2025/02/09/Gy39Q5tYMZUf8j2.jpg","alt":"20250208140352.jpg"},{"url":"https://s2.loli.net/2025/02/09/Cz8dOT5FeQUHbis.jpg","alt":"20250208140359.jpg"},{"url":"https://s2.loli.net/2025/02/09/ZP6hXG15o3ju4iT.jpg","alt":"20250208140403.jpg"},{"url":"https://s2.loli.net/2025/02/09/Itbxde6KhavMD3u.jpg","alt":"20250208140348.jpg"},{"url":"https://s2.loli.net/2025/02/09/kSaI1PfYqJGpMRF.jpg","alt":"20250208140406.jpg"},{"url":"https://s2.loli.net/2025/02/09/iHr1FsjlaQwp6zO.jpg","alt":"20250208140356.jpg"},{"url":"https://s2.loli.net/2025/02/09/Vl54LNPTB6WZ2q8.jpg","alt":"20250208141938.jpg"},{"url":"https://s2.loli.net/2025/02/09/wu9JrspebcavHU6.jpg","alt":"20250208141904.jpg"},{"url":"https://s2.loli.net/2025/02/09/VcMZERLJg7Wnkm4.jpg","alt":"20250208141923.jpg"},{"url":"https://s2.loli.net/2025/02/09/sHlwWFDTt2JEuhZ.jpg","alt":"20250208141928.jpg"},{"url":"https://s2.loli.net/2025/02/09/Yblg4o3ezcTunPr.jpg","alt":"20250208141934.jpg"},{"url":"https://s2.loli.net/2025/02/09/DXqv8Pkgd9HwyzI.jpg","alt":"20250208141859.jpg"}]</span>    </div>    <button class="gallery-load-more"><span>Load More</span><i class="fa-solid fa-arrow-down"></i></button>    </div>]]></content>
      
      
      <categories>
          
          <category> Essay </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Gallery </tag>
            
            <tag> WashingtonDC </tag>
            
            <tag> AGU </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>WRFv4.0 em-ideal 安装记录</title>
      <link href="/blog/research/WRF_ideal_installation/"/>
      <url>/blog/research/WRF_ideal_installation/</url>
      
        <content type="html"><![CDATA[<p>当下需要使用WRF来进行既简单且理想情景的模拟，需要知道的是WRF在1, 2, 4, 8, 16, 32 core(s) 情形下的运算速度以及并行的线性性如何。</p><ul><li>环境： 32 Cores - Red Hat Enterprise Linux 8.10 (Ootpa), Kernel version: 4.18.0-553.22.1.el8_10.x86_64</li><li>我：WRF小白，女朋友WRF-Chem资深用户。</li><li>既然要拿来比较，那就选“最新”的版本，V4.0, 也讲武德。（我也想用稳定版本）</li><li>纲领：<a href="https://www2.mmm.ucar.edu/wrf/OnLineTutorial/compilation_tutorial.php">https://www2.mmm.ucar.edu/wrf/OnLineTutorial/compilation_tutorial.php</a></li></ul><h3 id="环境check"><a href="#环境check" class="headerlink" title="环境check"></a>环境check</h3><p>略，按照网站的步骤，下载脚本，运行。<br>这里说一下， 我的gcc –version ：gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-22)， 但是不影响安装。</p><h3 id="依赖"><a href="#依赖" class="headerlink" title="依赖"></a>依赖</h3><p>安装依赖前我的setenv.sh, 记得source一下：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">export</span> DIR=/data/jihenghu/WRFv4/Build_WRF/LIBRARIES</span><br><span class="line"><span class="built_in">export</span> CC=gcc</span><br><span class="line"><span class="built_in">export</span> CXX=g++</span><br><span class="line"><span class="built_in">export</span> FC=gfortran</span><br><span class="line"><span class="built_in">export</span> FCFLAGS=-m64</span><br><span class="line"><span class="built_in">export</span> F77=gfortran</span><br><span class="line"><span class="built_in">export</span> FFLAGS=-m64</span><br><span class="line"><span class="built_in">export</span> JASPERLIB=<span class="variable">$DIR</span>/grib2/lib</span><br><span class="line"><span class="built_in">export</span> JASPERINC=<span class="variable">$DIR</span>/grib2/include</span><br><span class="line"><span class="built_in">export</span> LDFLAGS=-L<span class="variable">$DIR</span>/grib2/lib</span><br><span class="line"><span class="built_in">export</span> CPPFLAGS=-I<span class="variable">$DIR</span>/grib2/include</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>按照网站的说明一步步安装，因为之前安装RTTOV13时已经安装了NETCDF，HDF5，PHDF5，有些直接跳过了，我重新安装了zlib2 和mpich, 并且：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">export</span> PATH=/data/jihenghu/WRFv4/Build_WRF/LIBRARIES/mpich/bin:<span class="variable">$PATH</span> ***</span><br><span class="line"><span class="built_in">export</span> HDF5=/home/jihenghu/hdf5  ***</span><br><span class="line"><span class="built_in">export</span> PHDF5=/home/jihenghu/hdf5-parallel-1.14.0/</span><br><span class="line"><span class="built_in">export</span> LD_LIBRARY_PATH=/home/jihenghu/netcdf/lib:/home/jihenghu/hdf5/lib:/home/jihenghu/zlib/lib:<span class="variable">$LD_LIBRARY_PATH</span></span><br><span class="line"><span class="built_in">export</span> RTTOV=/home/jihenghu/rttov13</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><code>***</code>表示必须设置</p><p>最后你的环境大概是这样的：</p><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">LD_LIBRARY_PATH=/home/jihenghu/netcdf/lib:/home/jihenghu/hdf5/lib:/home/jihenghu/zlib/lib</span><br><span class="line">RTTOV=/home/jihenghu/rttov13</span><br><span class="line">NETCDF=/home/jihenghu/netcdf</span><br><span class="line">CC=gcc</span><br><span class="line">JASPERINC=/data/jihenghu/WRFv4/Build_WRF/LIBRARIES/grib2/include</span><br><span class="line">DIR=/data/jihenghu/WRFv4/Build_WRF/LIBRARIES</span><br><span class="line">F77=gfortran</span><br><span class="line">FCFLAGS=-m64</span><br><span class="line">HDF5=/home/jihenghu/hdf5</span><br><span class="line">PHDF5=/home/jihenghu/hdf5-parallel-1.14.0/</span><br><span class="line">FC=gfortran</span><br><span class="line">JASPERLIB=/data/jihenghu/WRFv4/Build_WRF/LIBRARIES/grib2/lib</span><br><span class="line">CXX=g++</span><br><span class="line">FFLAGS=-m64</span><br><span class="line">CPPFLAGS=-I/data/jihenghu/WRFv4/Build_WRF/LIBRARIES/grib2/include</span><br><span class="line">LDFLAGS=-L/data/jihenghu/WRFv4/Build_WRF/LIBRARIES/grib2/lib</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="安装WRF"><a href="#安装WRF" class="headerlink" title="安装WRF"></a>安装WRF</h3><p>解压，进入WRF&#x2F;目录，<br>配置： </p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$./configure </span><br><span class="line">checking <span class="keyword">for</span> perl5... no</span><br><span class="line">checking <span class="keyword">for</span> perl... found /usr/bin/perl (perl)</span><br><span class="line">Will use NETCDF <span class="keyword">in</span> <span class="built_in">dir</span>: /home/jihenghu/netcdf</span><br><span class="line">Will use HDF5 <span class="keyword">in</span> <span class="built_in">dir</span>: /home/jihenghu/hdf5</span><br><span class="line">Will use PHDF5 <span class="keyword">in</span> <span class="built_in">dir</span>: /home/jihenghu/hdf5-parallel-1.14.0/</span><br><span class="line">Will use <span class="string">&#x27;time&#x27;</span> to report timing information</span><br><span class="line"></span><br><span class="line">....</span><br><span class="line">Enter selection [1-75] : 34</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>选择了 34. (dmpar)  GNU (gfortran&#x2F;gcc) 这个编译器。</p><p>接下来编译，我计划只跑理想情景，所以选择 em_tropical_cyclone (3d ideal case)</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">./compile em_tropical_cyclone &gt;&amp; log.compile </span><br></pre></td></tr></table></figure><p>一般来说，这个过程7分钟会跑完，你会在 WRF&#x2F;main&#x2F;下发现 wrf.exe 和 ideal.exe。</p><h3 id="极有可能遇到的坑"><a href="#极有可能遇到的坑" class="headerlink" title="极有可能遇到的坑"></a>极有可能遇到的坑</h3><p>但是可能是code版本问题，有些库的位置变了，我遇到了以下问题，</p><figure class="highlight bash"><figcaption><span>log.compile<Line 1948></span></figcaption><table><tr><td class="code"><pre><span class="line">mpicc -cc=gcc -DFSEEKO64_OK  -o landread.o -c -w -O3 -c  -DDM_PARALLEL -DMAX_HISTORY=25 -DNMM_CORE=0 landread.c</span><br><span class="line">landread.c:68:10: fatal error: rpc/types.h: No such file or directory</span><br><span class="line"> <span class="comment">#include &lt;rpc/types.h&gt;</span></span><br><span class="line">          ^~~~~~~~~~~~~</span><br><span class="line">compilation terminated.</span><br><span class="line">make[2]: [../configure.wrf:372: landread.o] Error 1 (ignored)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>这个问题直接google 到<a href="https://forum.mmm.ucar.edu/threads/resolved-problem-compiling-wrfv4-0-on-fedora-28-landread-error.61/">(RESOLVED) Problem Compiling WRFV4.0 on Fedora 28: landread error</a><br>主要原因是code版本问题，rpc&#x2F;types.h文件的位置变了，UCAR给出的解决方法是：</p><div class="note success no-icon flat"><p>Issue a ‘clean -a’ and then reconfigure. Then go into your configure.wrf file and look for the line:<br><code>CFLAGS = $(CFLAGS_LOCAL) -DDM_PARALLEL -DSTUBMPI \ -DMAX_HISTORY=$(MAX_HISTORY) -DNMM_CORE=$(WRF_NMM_CORE)</code></p><p>Onto the end of that, add -DLANDREAD_STUFF, so that it now looks like:<br><code>CFLAGS = $(CFLAGS_LOCAL) -DDM_PARALLEL -DSTUBMPI \ -DMAX_HISTORY=$(MAX_HISTORY) -DNMM_CORE=$(WRF_NMM_CORE) -DLANDREAD_STUB</code></p><p>Then save that configure file and recompile. This should get your past the problem. Please let us know if that works for you.</p></div><p>解决了这个问题，又出现下个问题：</p><figure class="highlight bash"><figcaption><span>log.compile</span></figcaption><table><tr><td class="code"><pre><span class="line">include    module_ra_rrtmg_swk.f90</span><br><span class="line">module_ra_rrtmg_swk.f90:3264:0:</span><br><span class="line"></span><br><span class="line">    use rrsw_kg20_k, only : absa, ka, absb, kb, forref, selfref,                  &amp;</span><br><span class="line"> </span><br><span class="line">internal compiler error: <span class="keyword">in</span> gfc_trans_use_stmts, at fortran/trans-decl.c:5206</span><br><span class="line">Please submit a full bug report,</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>这次google到：<a href="https://github.com/wrf-model/WRF/wiki/WRF-V4.1-Known-Problems">WRF-V4.1-Known-Problems</a></p><div class="note success no-icon flat"><p>Solution: Currently, the solution is to remove the offending code (RRTMG fast for longwave and shortwave). After the user constructs the configure.wrf file (after the configure step, and before the compile step), the configure.wrf file is edited.<br>Remove this line:<br><code>-DBUILD_RRTMG_FAST=1 \</code><br>Then the code may be built as usual. <strong>Note that in this condition, the WRF code may not be used to run either of the fast RRTMG schemes</strong>.</p></div><p>好吧，我能接受。。。</p><p>至此，编译问题就成功解决了，是不是很简单？</p>]]></content>
      
      
      <categories>
          
          <category> Research </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WRFV4 </tag>
            
            <tag> Model </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>WRFv4.0 Ideal Case - A Tropical Cyclone</title>
      <link href="/blog/research/WRF_ideal_tropical_cyclone/"/>
      <url>/blog/research/WRF_ideal_tropical_cyclone/</url>
      
        <content type="html"><![CDATA[<p>当下需要使用WRF来进行既简单且理想情景的模拟，需要知道的是WRF在1, 2, 4, 8, 16, 32 core(s) 情形下的运算速度以及并行的线性性如何。</p><ul><li>纲领：<a href="https://www2.mmm.ucar.edu/wrf/OnLineTutorial/compilation_tutorial.php">https://www2.mmm.ucar.edu/wrf/OnLineTutorial/compilation_tutorial.php</a></li></ul><h3 id="Run-the-case-A-tropical-cyclone"><a href="#Run-the-case-A-tropical-cyclone" class="headerlink" title="Run the case- A tropical cyclone"></a>Run the case- A tropical cyclone</h3><p>The case is WRF inbuilt ideal test, we are not required to use any real data, this greatly save our effect in preparing data using WPS.<br>According to the user guide in COMPILING WRF online tutorial, we change our present working directory to <code>WRF/test/em_tropical_cyclone/</code>.<br>The first thing we need to do is link the mandatory data to our PWD, literally by run the cshell script <code>./run_me_first.csh</code>.<br>Here, we can slightly modifly its content so as to link the source as absolute paths, this is worthy of doing if you want to copy this test to elsewhere and keep the links as it is.</p><figure class="highlight plaintext"><figcaption><span>run_me_first.csh</span></figcaption><table><tr><td class="code"><pre><span class="line">#!/bin/csh</span><br><span class="line">echo Setting up tropical_cyclone case by linking data files into this directory</span><br><span class="line"></span><br><span class="line">ln -sf /data/jihenghu/WRFv4/WRF/run/LANDUSE.TBL .</span><br><span class="line">ln -sf /data/jihenghu/WRFv4/WRF/run/RRTM_DATA .</span><br><span class="line">ln -sf /data/jihenghu/WRFv4/WRF/run/README.namelist .</span><br><span class="line">ln -sf /data/jihenghu/WRFv4/WRF/main/ideal.exe .</span><br><span class="line">ln -sf /data/jihenghu/WRFv4/WRF/main/wrf.exe .</span><br><span class="line"></span><br><span class="line">echo done</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>Then, we need to init the input files by run <code>./ideal.exe</code>, which reads the namelist.input file and generates few outfiles: <code>namelist.output</code>, <code>wrfinput_d01</code>.</p><p>Then, we run WRF model by <code>mpirun -np 8 wrf.exe</code>, you may change the core number as you want to run the test concurrently, the model will evenly split the domain into several subblocks as you specified and distribute them to different cores.<br>All cores solely do the time ingeration, and they communicates for each step.</p><p>Finally, you may reach a completed result by finding a SUCCESS in you logfile.</p><h3 id="The-case-itself"><a href="#The-case-itself" class="headerlink" title="The case itself"></a>The case itself</h3><p>The test is set to be ideal case, with a default spatial extent of 200$\times$200, 20 vertical layers. dx&#x3D;dy&#x3D;15km, and dz&#x3D;1.25km.<br>time duration is 6 days, the time step should assign to the 6$\times$dx &#x3D; 90s. The output time interval I set is 60min, which means we get an ouput at each hour interval.</p><p>The result field as I simulated is shown here；<br><img src="https://s2.loli.net/2024/11/26/3SJd6QXWaH9IMri.gif" alt="The 10m wind speed and a Transection of the Qvapor"></p><p>The case itself is modulated by the file: <code>WRF/dyn_em/module_initialize_tropical_cyclone.f90</code>, where inportant coefficients and inital conditions are defaultly specified, including:</p><ul><li>Initial State: The environment is horizontally homogeneous, with no initial wind (u &#x3D; v &#x3D; 0) and a static sea-surface temperature (SST) set at 28°C by default.</li><li>Vortex: A weak, broad, axisymmetric vortex is added, balanced hydrostatically and in gradient-wind. Parameters for the vortex (such as r0, rmax, vmax, and zdd) can be modified in module_initialize_tropical_cyclone.F located in the dyn_em directory.</li><li>Environment: An f-plane assumption holds, with the Coriolis parameter $f&#x3D; 5.0\times 10^{-5}$, representing 20°N latitude.</li><li>Boundary Conditions: Periodic lateral boundary conditions apply by default.</li></ul><h3 id="Computational-efficiency"><a href="#Computational-efficiency" class="headerlink" title="Computational efficiency"></a>Computational efficiency</h3><p>Simulations using different cores illuminate a computational efficiency curve:<br><img src="https://s2.loli.net/2024/11/26/KURgFGTYElk5MQC.png" alt="wrf_efficiency_concurrent"></p><ul><li>The mpirun speedup is significant, while is limited by the I&#x2F;O load, if all works submitted and run concurrently, the acceleration is remarkable.</li><li>If the I&#x2F;O is not busy, the speedup decays rapidly in this case. which means the acceleration is limited by the inter-blocks communications for such a small simulation.</li></ul>]]></content>
      
      
      <categories>
          
          <category> Research </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WRFV4 </tag>
            
            <tag> Model </tag>
            
            <tag> Cyclone </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mexico</title>
      <link href="/blog/essays/mexico_24/"/>
      <url>/blog/essays/mexico_24/</url>
      
        <content type="html"><![CDATA[<style>main.hide-aside {    max-width:1000px!important;}</style><div class="gallery">    <div class="fj-gallery  data" data-rowHeight="220" data-limit="10">    <span class="gallery-data">[{"url":"https://s2.loli.net/2025/02/09/KPtQ9zAgXwujiMp.jpg","alt":"20250208143456.jpg"},{"url":"https://s2.loli.net/2025/02/09/TIgMHqiQv9UrRVw.jpg","alt":"20250208143452.jpg"},{"url":"https://s2.loli.net/2025/02/09/H9mxONSIeY7RQjp.jpg","alt":"20250208143451.jpg"},{"url":"https://s2.loli.net/2025/02/09/xo94mVPBw8b3Ukp.jpg","alt":"20250208143156.jpg"},{"url":"https://s2.loli.net/2025/02/09/J3MCK6eoDaWsNrt.jpg","alt":"20250208143458.jpg"},{"url":"https://s2.loli.net/2025/02/09/w4XEOZ1cQDMNJaY.jpg","alt":"20250208143457.jpg"},{"url":"https://s2.loli.net/2025/02/09/ql4KhYjM7XSDoWf.jpg","alt":"20250208143454.jpg"},{"url":"https://s2.loli.net/2025/02/09/2TOjNY5qPpDtAdW.jpg","alt":"20250208143453.jpg"},{"url":"https://s2.loli.net/2025/02/09/lufD8SonH5JsiZ3.jpg","alt":"20250208143455.jpg"},{"url":"https://s2.loli.net/2025/02/09/CVKh9mkZD2EUcbQ.jpg","alt":"20250208143459.jpg"},{"url":"https://s2.loli.net/2025/02/09/ht9amDk4cVQdMqo.jpg","alt":"202502081434511.jpg"},{"url":"https://s2.loli.net/2025/02/09/L7C9SDiqt28khuB.jpg","alt":"202502081434521.jpg"},{"url":"https://s2.loli.net/2025/02/09/p8VU1PhN7zWwcxi.jpg","alt":"202502081434541.jpg"},{"url":"https://s2.loli.net/2025/02/09/Q5CxY8pV7gjdeab.jpg","alt":"202502081434551.jpg"},{"url":"https://s2.loli.net/2025/02/09/QvUny6YCK781qir.jpg","alt":"202502081434531.jpg"},{"url":"https://s2.loli.net/2025/02/09/ZMsn97woT4GbpHR.jpg","alt":"202502081434581.jpg"},{"url":"https://s2.loli.net/2025/02/09/6PydODNTeGw7k8o.jpg","alt":"202502081434571.jpg"},{"url":"https://s2.loli.net/2025/02/09/wYlogvc5ZDtz3rU.jpg","alt":"202502081434572.jpg"},{"url":"https://s2.loli.net/2025/02/09/Lg6DMdisWrV5PUx.jpg","alt":"202502081434561.jpg"}]</span>    </div>    <button class="gallery-load-more"><span>Load More</span><i class="fa-solid fa-arrow-down"></i></button>    </div>]]></content>
      
      
      <categories>
          
          <category> Essay </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Gallery </tag>
            
            <tag> Mexico </tag>
            
            <tag> Cancun </tag>
            
            <tag> Tulum </tag>
            
            <tag> ChichenItza </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>South Korea</title>
      <link href="/blog/essays/skorea-aogs24/"/>
      <url>/blog/essays/skorea-aogs24/</url>
      
        <content type="html"><![CDATA[<style>main.hide-aside {    max-width:1000px!important;}</style><div class="gallery">    <div class="fj-gallery  data" data-rowHeight="220" data-limit="10">    <span class="gallery-data">[{"url":"https://s2.loli.net/2025/02/09/JgON8PtXkYHFDMw.jpg","alt":"20250208134909.jpg"},{"url":"https://s2.loli.net/2025/02/09/ftgCrFSqum2I5Ww.jpg","alt":"20250208134905.jpg"},{"url":"https://s2.loli.net/2025/02/09/1zvT9bFpR4fuPdi.jpg","alt":"20250208134856.jpg"},{"url":"https://s2.loli.net/2025/02/09/94aWR5UIZHqKjwF.jpg","alt":"20250208134900.jpg"},{"url":"https://s2.loli.net/2025/02/09/faLvTCQ6UZhPkeS.jpg","alt":"20250208134851.jpg"},{"url":"https://s2.loli.net/2025/02/09/t6T3KUqg4noyWSe.jpg","alt":"20250208134822.jpg"}]</span>    </div>    <button class="gallery-load-more"><span>Load More</span><i class="fa-solid fa-arrow-down"></i></button>    </div>]]></content>
      
      
      <categories>
          
          <category> Essay </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Gallery </tag>
            
            <tag> AGU </tag>
            
            <tag> Korea </tag>
            
            <tag> AOGS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Bon Appetite!!</title>
      <link href="/blog/essays/bon-Appetite/"/>
      <url>/blog/essays/bon-Appetite/</url>
      
        <content type="html"><![CDATA[<style>main.hide-aside {    max-width:1300px!important;}</style><div class="gallery">    <div class="fj-gallery  data" data-rowHeight="220" data-limit="10">    <span class="gallery-data">[{"url":"https://s2.loli.net/2024/03/01/pC9SibZKOH87De1.jpg","alt":"216a3e54322f2e534108d9e9a7e062b.jpg"},{"url":"https://s2.loli.net/2024/03/01/BfiCNEeOXGwq7Yo.jpg","alt":"f7d2387434c167997f9088295797474.jpg"},{"url":"https://s2.loli.net/2024/03/01/gOvuGweEfdySNh1.jpg","alt":"0f8c7c0a8f027ac9e8ed6194d7babe7.jpg"},{"url":"https://s2.loli.net/2024/03/01/xX7WCK4IPSliwVH.jpg","alt":"6a4d7c47790b007cf89aa2e16614d6c.jpg"},{"url":"https://s2.loli.net/2024/03/01/DYR62vhiNOyHm9U.jpg","alt":"65f4799b4bdd355252bad70c38278f9.jpg"},{"url":"https://s2.loli.net/2024/03/01/JXRDtNEIryBLi3Q.jpg","alt":"2de67a4d6fc7c548faa43702a4d4360.jpg"},{"url":"https://s2.loli.net/2024/03/01/InRz1vVDSlYbpcf.jpg","alt":"52ad646bc8173d316d566f684d411a6.jpg"},{"url":"https://s2.loli.net/2024/03/01/JPRtCpqjTKxe5l9.jpg","alt":"7507ab56c9933adc009889dc1623cf5.jpg"},{"url":"https://s2.loli.net/2024/03/01/z2q7ZMOjlTupS8E.jpg","alt":"72247ccf4e594bbf7963a04f5c56da4.jpg"}]</span>    </div>    <button class="gallery-load-more"><span>Load More</span><i class="fa-solid fa-arrow-down"></i></button>    </div>]]></content>
      
      
      <categories>
          
          <category> Essay </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Gallery </tag>
            
            <tag> Umich </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ED2-Hydro模式安装</title>
      <link href="/blog/research/ed2/ed2-hydro-install/"/>
      <url>/blog/research/ed2/ed2-hydro-install/</url>
      
        <content type="html"><![CDATA[<h2 id="安装HDF5-Parallel"><a href="#安装HDF5-Parallel" class="headerlink" title="安装HDF5-Parallel"></a>安装HDF5-Parallel</h2><ul><li><p>下载<br>由于使用的是mpif90进行源码编译，所以必须要安装HDF5支持parallel的编译选项：<br>处于版本管理的考虑，这里直接选择源码安装，这样安装文件比较可控<br>下载地址：<a href="https://support.hdfgroup.org/ftp/HDF5/releases/%EF%BC%8C%E4%B8%8B%E8%BD%BD%E6%94%BE%E7%BD%AE%E4%BA%8E%60/home/jihenghu/%60%E4%B8%8B%E3%80%82">https://support.hdfgroup.org/ftp/HDF5/releases/，下载放置于`/home/jihenghu/`下。</a><br>Prof.XU安装的版本应该是1.10.6，我这里直接使用最新的1.14.0，并且发现是行得通的。</p></li><li><p>安装</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">cd</span></span><br><span class="line">jihenghu@canopy:~ $ <span class="built_in">mkdir</span> hdf5-parallel-1.14.0</span><br><span class="line">jihenghu@canopy:~ $ tar -zvxf hdf5-1.14.0.tar.gz</span><br><span class="line">jihenghu@canopy:~ $ <span class="built_in">cd</span> hdf5-1.14.0</span><br><span class="line"></span><br><span class="line"><span class="comment">## 提供zlib库的位置。参考RTTOV安装的文章，这里是否必要我不是很清楚，反正我用了</span></span><br><span class="line">jihenghu@canopy:hdf5-1.14.0 $ <span class="built_in">export</span> LD_LIBRARY_PATH=/home/hjh/zlib/lib:<span class="variable">$LD_LIBRARY_PATH</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## HDF5 编译选项</span></span><br><span class="line">jihenghu@canopy:hdf5-1.14.0 $ ./configure --with-zlib=/home/jihenghu/zlib \</span><br><span class="line"> --prefix=/home/jihenghu/hdf5-parallel-1.14.0 \</span><br><span class="line"> FC=mpif90 CC=mpicc \</span><br><span class="line"> --disable-static \</span><br><span class="line"> --enable-parallel\</span><br><span class="line"> --enable-fortran</span><br><span class="line"></span><br><span class="line">jihenghu@canopy:hdf5-1.14.0 $ make</span><br><span class="line">jihenghu@canopy:hdf5-1.14.0 $ make check <span class="comment">## 会发现一些错误，但是不影响</span></span><br><span class="line">jihenghu@canopy:hdf5-1.14.0 $ make install </span><br></pre></td></tr></table></figure></li><li><p>在<code>~/.bashrc</code>中注册HDF5-parallel</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">jihenghu@canopy:~ $ vim ~/.bashrc</span><br><span class="line">## 追加一下内容：</span><br><span class="line">## hdf5-1.14.0 parallel</span><br><span class="line">export PATH=/home/jihenghu/hdf5-parallel-1.14.0/bin:$PATHy</span><br><span class="line">export LD_LIBRARY_PATH=/home/jihenghu/hdf5-parallel-1.14.0/lib:$LD_LIBRARY_PATH</span><br></pre></td></tr></table></figure><p>参考：<a href="https://www.pism.io/docs/installation/parallel-io-libraries.html">https://www.pism.io/docs/installation/parallel-io-libraries.html</a></p></li></ul><h2 id="安装ED2-hydro"><a href="#安装ED2-hydro" class="headerlink" title="安装ED2-hydro"></a>安装ED2-hydro</h2><ul><li><p>下载ED2-hydro，我是从Xu的仓库拉取的,你也可以使用ED2的官方仓库：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">jihenghu@canopy:data00 $ git <span class="built_in">clone</span> https://github.com/xiangtaoxu/ED2</span><br></pre></td></tr></table></figure></li><li><p>编译配置<br>进入<code>ED/ED/build/make</code>文件下：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">jihenghu@canopy:make $ <span class="built_in">cp</span> include.mk.gfortran include.mk.canopy</span><br><span class="line"></span><br><span class="line">jihenghu@canopy:make $ vim include.mk.canopy</span><br><span class="line"><span class="comment"># 按照HDF5的安装设置修改一下内容</span></span><br><span class="line"><span class="comment"># HDF 5  Libraries</span></span><br><span class="line">HDF5_HOME=/home/jihenghu/hdf5-parallel-1.14.0</span><br><span class="line">HDF5_INCS=-I/home/jihenghu/hdf5-parallel-1.14.0/include</span><br><span class="line">HDF5C_INCS=-I/home/jihenghu/hdf5-parallel-1.14.0/include</span><br><span class="line">HDF5_LIBS=-lhdf5 -lhdf5_fortran -lhdf5_hl -lz</span><br></pre></td></tr></table></figure></li><li><p>安装</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">jihenghu@canopy:make $ ./install.sh -k E -p canopy -g</span><br></pre></td></tr></table></figure><p>具体编译选项可以去看：<a href="https://github.com/EDmodel/ED2/wiki/Quick-start#user-content-Compiling_ED2">https://github.com/EDmodel/ED2/wiki/Quick-start#user-content-Compiling_ED2</a><br>如果编译错了，可以使用<code>-c</code> 选项来清除对应的编译安装遗留。<br>安装完成了可以看到提示：’Finished building &#x3D;&#x3D;&#x3D; ..&#x2F;..&#x2F;build&#x2F;&#x2F;ed_2.2-opt’，这就是可执行文件的位置。</p></li></ul><h2 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h2><p>Running ED-2 (以下内容来自于<a href="https://github.com/EDmodel/ED2/wiki/Quick-start#running-ed-2">ED2 WIKI</a>)</p><ul><li>串行方式<br>单个polygon（包含多个sites）的模拟<strong>必须</strong>使用串行方式。To run this, simply copy or link the executable (for example, ed_2.2-opt to the same directory where the ED2IN file you modified is located, then type:<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&gt; ./ed_2.2-opt</span><br></pre></td></tr></table></figure>In case your namelist is called anything other than ED2IN, you must provide the correct name using the -f option<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&gt; ./ed_2.2-opt -f my-ED2IN</span><br></pre></td></tr></table></figure></li><li>并行方式<br>Regional模拟（包含多个grids和polygon的情形），可以是用并行加速，所以你需要用到mpirun命令:<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&gt; mpirun -np [n] ./ed_2.2-opt -f my-ED2IN</span><br></pre></td></tr></table></figure>where [n] is the number of processors to use. The -f option also works in parallel simulations.</li></ul>]]></content>
      
      
      <categories>
          
          <category> Research </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ED2 </tag>
            
            <tag> Hydro </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Plant Hydraulics Schemes</title>
      <link href="/blog/research/ed2/ed2-hydro-plant-hydraulics/"/>
      <url>/blog/research/ed2/ed2-hydro-plant-hydraulics/</url>
      
        <content type="html"><![CDATA[<h2 id="Plant-Hydraulics-Schemes"><a href="#Plant-Hydraulics-Schemes" class="headerlink" title="Plant Hydraulics Schemes"></a>Plant Hydraulics Schemes</h2><p>Ecosystem Demography Model (ED) V2.2，看到这里并且感兴趣的朋友应该不需要我再做介绍了，可以阅读一下模式的特性文章<a href="https://doi.org/10.5194/gmd-12-4309-2019">GMD-ED2</a>。</p><p>Prof. Xu 对ED2进行了基于plant hydraulics理论的模块扩展，简称ED2-hydro，相关文章可以参见：<a href="https://doi.org/10.1111/nph.14009">Diversity in plant hydraulic traits…</a>和<a href="https://doi.org/10.1111/nph.17254">Variation in tropical forest canopy water content…</a>。<br><img src="https://nph.onlinelibrary.wiley.com/cms/asset/679c1807-c596-4e23-905a-86511a2ae309/nph14009-fig-0001-m.jpg" alt="Schematic representation of the plant hydraulic module in the model (Xu. et al. 2016)."></p><p>关于Plant Hydraulics[PHS]的模式理论，可以参见<a href="https://doi.org/10.1029/2020MS002214">Noah-mp-PHS(capacitance)</a>: Overview of Plant Hydraulics Model。</p><p>基于R语言的<a href="https://doi.org/10.5194/gmd-15-5593-2022">SurEau-Ecos v2.0-GMD</a> | <a href="https://doi.org/10.1111/nph.18614">SurEau-Ecos-FMC: simulate LFMC from psi and RWC (p-v curve)</a></p><p>VIP-PHS(capacitance): <a href="https://doi.org/10.1029/2022WR033402">Plant Hydraulics Improves Predictions of ET and GPP Responses to Drought</a><br>T&amp;C-PHS(capacitance): <a href="https://doi.org/10.1111/gcb.17022">When do plant hydraulics matter in terrestrial biosphere modelling?</a><br><a href="https://doi.org/10.1111/nph.14273">The effect of plant water storage on water fluxes within the coupled soil–plant system</a><br><a href="https://doi.org/10.1007/s11104-017-3341-7">The role of plant water storage and hydraulic strategies in relation to soil moisture availability</a></p><p>CLM-PHS(no capacitance): <a href="https://doi.org/10.1029/2018MS001500">Implementing Plant Hydraulics in the Community Land Model, Version 5</a><br><a href="https://doi.org/10.5194/hess-25-4259-2021">Plant hydraulic transport controls transpiration sensitivity to soil water stress (no capacitance)</a><br><a href="https://doi.org/10.1002/2017WR020467">only one capacitance : A vegetation-focused soil-plant-atmospheric continuum modelto study hydrodynamic soil-plant water relations</a></p><table><thead><tr>      <td rowspan="3" ></td>      <th colspan="4" >Plant hydraulics model type</th>   </tr><tr>      <th rowspan="2"  style="top: 40.5px;">Pipe model</th>      <th colspan="2"  style="top: 40.5px;">Electric analogy model</th>      <th rowspan="2"  style="top: 40.5px;">Porous media model</th>   </tr><tr>   <th  style="top: 80.5px;">Resistor model</th>    <th  style="top: 80.5px;">Resistor–capacitance model</th>   </tr></thead><tbody><tr>      <td >Vascular architecture assumption</td>      <td >Series of pipes</td>      <td >Electric circuit with resistance</td>      <td >Electric circuit with resistance and capacitance</td>      <td >Continuous porous media</td>   </tr><tr>      <td >Storage inclusion</td>      <td >Yes/No</td>      <td >No</td>      <td >Yes</td>      <td >Yes</td>   </tr><tr>      <td rowspan="2" >Governing law or equation</td>     <td >Hagen–Poiseuille law,</td>   <td rowspan="2" colspan="2" >Darcy's law</td>      <td rowspan="2" >Richards equation</td>   </tr><tr>      <td >allometric scaling laws</td>   </tr><tr>     <td >Typical model scale</td>      <td >Tissue level, tree level, ecosystem level</td>      <td colspan="2" >Tree level, cohort level, stand level, ecosystem level</td>      <td >Tree level, cohort level</td>   </tr><tr>      <td >Computational demand</td>      <td >Moderate to high</td>      <td colspan="2" >Low to moderate</td>      <td >High</td>   </tr><tr>      <td >Example of evaluation data</td>      <td >Tree-level measurements</td>      <td colspan="2" >Sap flux, flux tower data, ecosystem-scale data</td>     <td >Sap flux</td>   </tr><tr>     <td rowspan="6" >Examples</td>      <td >1. Pipe Model (Shinozaki et&nbsp;al.,&nbsp;<span><a href="#jame21318-bib-0123" id="#jame21318-bib-0123_R_d25409792e4005" >1964a</a></span> &amp; b)</td>      <td >1. SiB (Sellers et&nbsp;al.,&nbsp;<span><a href="#jame21318-bib-0121" id="#jame21318-bib-0121_R_d25409792e4011" >1986</a></span>)</td>      <td >1. SPA (Williams et&nbsp;al.,&nbsp;<span><a href="#jame21318-bib-0149" id="#jame21318-bib-0149_R_d25409792e4017" >1996</a></span>)</td>   <td >1. PM (Chuang et&nbsp;al.,&nbsp;<span><a href="#jame21318-bib-0025" id="#jame21318-bib-0025_R_d25409792e4023" >2006</a></span>)</td>   </tr><tr>   <td >2. WBE (West et&nbsp;al.,&nbsp;<span><a href="#jame21318-bib-0148" id="#jame21318-bib-0148_R_d25409792e4032" >1999</a></span>)</td>   <td >2. SPA (Sperry et&nbsp;al.,&nbsp;<span><a href="#jame21318-bib-0130" id="#jame21318-bib-0130_R_d25409792e4038" >1998</a></span>)</td>   <td >2. Dynamic Flow and Storage Model (Steppe et&nbsp;al.,&nbsp;<span><a href="#jame21318-bib-0134" id="#jame21318-bib-0134_R_d25409792e4044" >2006</a></span>)</td>   <td >2. FETCH (Bohrer et&nbsp;al.,&nbsp;<span><a href="#jame21318-bib-0010" id="#jame21318-bib-0010_R_d25409792e4050" >2005</a></span>)</td>   </tr><tr>     <td >3. Stem Hydraulic Model (Roderick and Berry,&nbsp;<span><a href="#jame21318-bib-0111" id="#jame21318-bib-0111_R_d25409792e4059" >2001</a></span>)</td>      <td >3. TREES (Mackay et&nbsp;al., 2011)</td>      <td >3. VIC+ (Luo et&nbsp;al.,&nbsp;<span><a href="#jame21318-bib-0076" id="#jame21318-bib-0076_R_d25409792e4068" >2013</a></span>)</td>      <td >3. TFS v.1-Hydro (Christoffersen et&nbsp;al.,&nbsp;<span><a href="#jame21318-bib-0024" id="#jame21318-bib-0024_R_d25409792e4074" >2016</a></span>)</td>   </tr><tr>     <td >4. Botanical Network Model (Savage et&nbsp;al.,&nbsp;<span><a href="#jame21318-bib-0114" id="#jame21318-bib-0114_R_d25409792e4083" >2010</a></span>)</td>      <td >4. SOX (Eller et&nbsp;al.,&nbsp;<span><a href="#jame21318-bib-0036" id="#jame21318-bib-0036_R_d25409792e4089" >2018</a></span>)</td>      <td >4. ED2-Hydro (Xu et&nbsp;al.,&nbsp;<span><a href="#jame21318-bib-0154" id="#jame21318-bib-0154_R_d25409792e4095" >2016</a></span>)</td>      <td >4. XWF (Janott et&nbsp;al.,&nbsp;<span><a href="#jame21318-bib-0056" id="#jame21318-bib-0056_R_d25409792e4101" >2011</a></span>)</td>   </tr><tr>     <td >5. Network Model (Mrad et&nbsp;al.,&nbsp;<span><a href="#jame21318-bib-0098" id="#jame21318-bib-0098_R_d25409792e4111" >2018</a></span>)</td>     <td >5. PHS in CLM5 (Kennedy et&nbsp;al.,&nbsp;<span><a href="#jame21318-bib-0061" id="#jame21318-bib-0061_R_d25409792e4117" >2019</a></span>)</td>     <td >5. RCL Model (Zhuang et&nbsp;al.,&nbsp;<span><a href="#jame21318-bib-0164" id="#jame21318-bib-0164_R_d25409792e4123" >2014</a></span>)</td>     <td class="center-aligned"></td>   </tr><tr>      <td >6. Pipe Model in HOTTER (Trugman et&nbsp;al.,&nbsp;<span><a href="#jame21318-bib-0136" id="#jame21318-bib-0136_R_d25409792e4134" >2019b</a></span>)</td>      <td class="center-aligned"></td>      <td class="center-aligned"></td>     <td class="center-aligned"></td>   </tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> Research </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHS </tag>
            
            <tag> LSM </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>专栏：ED2-Hydro模式学习笔记</title>
      <link href="/blog/research/ed2/ed2-hydro-column/"/>
      <url>/blog/research/ed2/ed2-hydro-column/</url>
      
        <content type="html"><![CDATA[<p>&copy; 2023-2030, Jiheng Hu. 本专栏内容禁止转载, 个人见解有限，谨慎阅读。</p><div class="gallery-group-main">  <figure class="gallery-group">  <img class="gallery-group-img no-lightbox" src='https://s2.loli.net/2024/03/30/GQ1LmWeo7OwcRxM.jpg' alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">(一) Plant Hydraulics Schemes</div>  <p>Plant Hydraulics Schemes</p>  <a href='/blog/research/ed2/ed2-hydro-plant-hydraulics/'></a>  </figcaption>  </figure>    <figure class="gallery-group">  <img class="gallery-group-img no-lightbox" src='https://s2.loli.net/2024/03/30/9jc3yOvsWdT6Qfu.png' alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">(二) ED2 install</div>  <p>ED2 install</p>  <a href='/blog/research/ed2/ed2-hydro-install/'></a>  </figcaption>  </figure>    <figure class="gallery-group">  <img class="gallery-group-img no-lightbox" src='https://s2.loli.net/2024/03/30/9jc3yOvsWdT6Qfu.png' alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">(三) Simulation levels and Variables</div>  <p>Simulation levels and Variables</p>  <a href='/blog/research/ed2/ed2-spatial-hierarchy/'></a>  </figcaption>  </figure>  </div>]]></content>
      
      
      <categories>
          
          <category> Research </category>
          
      </categories>
      
      
        <tags>
            
            <tag> LSM </tag>
            
            <tag> ED2 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>安娜堡的冬天</title>
      <link href="/blog/essays/winter-in-ann-arbor/"/>
      <url>/blog/essays/winter-in-ann-arbor/</url>
      
        <content type="html"><![CDATA[<style>main.hide-aside {    # max-width:1300px!important;}</style><div class="gallery">    <div class="fj-gallery  data" data-rowHeight="220" data-limit="10">    <span class="gallery-data">[{"url":"https://s2.loli.net/2024/01/14/1FZhSmtWb7rinGI.jpg","alt":"微信图片_20240113221204.jpg"},{"url":"https://s2.loli.net/2024/01/14/xWYCT4rntPMi7lN.jpg","alt":"微信图片_20240113221113.jpg"},{"url":"https://s2.loli.net/2024/01/14/t5uZejLm1sA3ayB.jpg","alt":"微信图片_20240113221241.jpg"},{"url":"https://s2.loli.net/2024/01/14/1F2V3PfAq7Otk5C.jpg","alt":"微信图片_20240113221253.jpg"},{"url":"https://s2.loli.net/2024/01/14/kFUy2ErmTAe4QWG.jpg","alt":"微信图片_20240113221221.jpg"},{"url":"https://s2.loli.net/2024/01/14/YU854x1KEZQtJyP.jpg","alt":"微信图片_20240113221215.jpg"},{"url":"https://s2.loli.net/2024/01/14/rnQwsNRz41V3cPt.jpg","alt":"微信图片_20240113221158.jpg"},{"url":"https://s2.loli.net/2024/01/14/aifnX1RIUgxWAkh.jpg","alt":"微信图片_20240113221210.jpg"},{"url":"https://s2.loli.net/2024/01/14/YLpMzk3OWiTqCnG.jpg","alt":"微信图片_20240113221234.jpg"},{"url":"https://s2.loli.net/2024/01/14/7rmNbpfUsovztZu.jpg","alt":"微信图片_20240113221152.jpg"},{"url":"https://s2.loli.net/2024/01/14/Sz49VRQW5Cfa1F7.jpg","alt":"微信图片_20240113221247.jpg"}]</span>    </div>    <button class="gallery-load-more"><span>Load More</span><i class="fa-solid fa-arrow-down"></i></button>    </div>]]></content>
      
      
      <categories>
          
          <category> Essay </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Michigan </tag>
            
            <tag> Gallery </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Name or service not known问题解决</title>
      <link href="/blog/devops/resolve-ip-address/"/>
      <url>/blog/devops/resolve-ip-address/</url>
      
        <content type="html"><![CDATA[<h2 id="Name-or-service-not-known"><a href="#Name-or-service-not-known" class="headerlink" title="Name or service not known"></a>Name or service not known</h2><p><strong>问题描述</strong><br>目前使用一台ubuntu服务器作为跳转节点，IP设置为静态，netplan设置如下：</p><figure class="highlight yaml"><figcaption><span>/etc/netplan/00-network-manager-all.yaml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="comment"># Let NetworkManager manage all devices on this system</span></span><br><span class="line"><span class="attr">network:</span></span><br><span class="line">  <span class="attr">ethernets:</span></span><br><span class="line">    <span class="attr">eno1:</span></span><br><span class="line">      <span class="attr">dhcp4:</span> <span class="literal">false</span></span><br><span class="line">      <span class="attr">addresses:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="number">1</span><span class="string">??.2??.2??.??5/24</span></span><br><span class="line">      <span class="attr">nameservers:</span></span><br><span class="line">              <span class="attr">addresses:</span> [<span class="number">202.38</span><span class="number">.64</span><span class="number">.56</span>,<span class="number">202.38</span><span class="number">.64</span><span class="number">.17</span>]</span><br><span class="line">    <span class="attr">eno2:</span></span><br><span class="line">      <span class="attr">dhcp4:</span> <span class="literal">false</span></span><br><span class="line">      <span class="attr">addresses:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="number">192.168</span><span class="number">.1</span><span class="number">.200</span><span class="string">/24</span></span><br><span class="line">  <span class="attr">version:</span> <span class="number">2</span></span><br><span class="line">  <span class="attr">renderer:</span> <span class="string">NetworkManager</span></span><br></pre></td></tr></table></figure><p>在尝试访问外站时发现无法解析域名，报错情形如下:</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&gt; ping www.baidu.com</span><br><span class="line">ping: www.baidu.com: Name or service not known</span><br></pre></td></tr></table></figure><p><strong>解决方案</strong><br>这里我设置了namesevers作为域名服务器，但是好像没有起作用。<br>网上查阅一下发现以下的解决方案有效：<br>编辑&#x2F;etc&#x2F;resov.conf, 添加几条DNS服务器：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&gt; sudo vim /etc/resov.cof</span><br><span class="line"><span class="comment">## 添加以下三条DNS</span></span><br><span class="line">nameserver 8.8.8.8</span><br><span class="line">nameserver 202.38.64.56</span><br><span class="line">nameserver 202.38.64.17</span><br><span class="line"></span><br><span class="line">nameserver 127.0.0.53</span><br><span class="line">options edns0</span><br></pre></td></tr></table></figure><p>wq保存退出就可以了，测试连接有效：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&gt; ping www.baidu.com</span><br><span class="line">PING www.wshifen.com (103.235.46.40) 56(84) bytes of data.</span><br><span class="line">64 bytes from 103.235.46.40 (103.235.46.40): icmp_seq=1 ttl=42 time=323 ms</span><br><span class="line">64 bytes from 103.235.46.40 (103.235.46.40): icmp_seq=2 ttl=42 time=324 ms</span><br><span class="line">^C</span><br><span class="line">--- www.wshifen.com ping statistics ---</span><br><span class="line">3 packets transmitted, 2 received, 33% packet loss, time 2001ms</span><br><span class="line">rtt min/avg/max/mdev = 323.633/324.260/324.888/0.847 ms</span><br></pre></td></tr></table></figure><h2 id="再次出现Name-or-service-not-known"><a href="#再次出现Name-or-service-not-known" class="headerlink" title="再次出现Name or service not known"></a>再次出现Name or service not known</h2><p>快乐上网若干个小时以后，发现下载数据的脚本停了，检查发下再次无法解析域名。<br>打开&#x2F;etc&#x2F;resov.conf 发现先前的修改被覆盖<br>解决方案：</p><ol><li>再次添加DNS</li><li>为了放置NetworkManager覆盖设置，打开 &#x2F;etc&#x2F;NetworkManager&#x2F;NetworkManager.conf 文件，在 [main] 部分中添加一行<code>dns=none</code>：<figure class="highlight bash"><figcaption><span>/etc/NetworkManager/NetworkManager.conf</span></figcaption><table><tr><td class="code"><pre><span class="line">[main]</span><br><span class="line">plugins=ifupdown,keyfile</span><br><span class="line">dns=none</span><br><span class="line">[ifupdown]</span><br><span class="line">managed=<span class="literal">false</span></span><br><span class="line">......</span><br></pre></td></tr></table></figure>保存退出，重启NetworkManager服务：<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&gt; sudo systemctl restart NetworkManager</span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      <categories>
          
          <category> Dev&amp;Ops </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Server </tag>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>San Francisco</title>
      <link href="/blog/essays/san-francisco-agu23/"/>
      <url>/blog/essays/san-francisco-agu23/</url>
      
        <content type="html"><![CDATA[<style>main.hide-aside {    max-width:1000px!important;}</style><div class="gallery">    <div class="fj-gallery  data" data-rowHeight="220" data-limit="10">    <span class="gallery-data">[{"url":"https://s2.loli.net/2023/12/17/Vnr59w8Z2CgNDQ7.jpg","alt":"IMG_20231216_203111.jpg"},{"url":"https://s2.loli.net/2023/12/17/V2PbfUq43A1IKyQ.jpg","alt":"wx_camera_1702669481374.jpg"},{"url":"https://s2.loli.net/2023/12/17/7VDM82nOU95f4ke.jpg","alt":"IMG_20231212_093443.jpg"},{"url":"https://s2.loli.net/2023/12/17/TOVlDXACGL5UNzw.jpg","alt":"IMG_20231212_211701.jpg"},{"url":"https://s2.loli.net/2023/12/17/D2LHVMg3lvNtUm6.jpg","alt":"IMG_20231212_192307.jpg"},{"url":"https://s2.loli.net/2023/12/17/5xf2niZ819UpXtW.jpg","alt":"IMG_20231212_092155.jpg"},{"url":"https://s2.loli.net/2023/12/17/UR9mavl1yYZNS3V.jpg","alt":"IMG_20231211_130208.jpg"},{"url":"https://s2.loli.net/2023/12/17/Dns4eLKF2EXAxoi.jpg","alt":"IMG_20231214_165657.jpg"}]</span>    </div>    <button class="gallery-load-more"><span>Load More</span><i class="fa-solid fa-arrow-down"></i></button>    </div>]]></content>
      
      
      <categories>
          
          <category> Essay </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Gallery </tag>
            
            <tag> AGU </tag>
            
            <tag> SanFrancisco </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Himawari-8 AHI产品数据集下载</title>
      <link href="/blog/data-n-method/Himawari8-download-guide/"/>
      <url>/blog/data-n-method/Himawari8-download-guide/</url>
      
        <content type="html"><![CDATA[<h2 id="Himawari-8简介"><a href="#Himawari-8简介" class="headerlink" title="Himawari-8简介"></a>Himawari-8简介</h2><p><strong>Himawari-8</strong>：Himawari-8 (ひまわり8号)是第8颗Himawari对地静止卫星，由三菱电机在波音的协助下建造，由日本气象厅(JMA)运营。Himawari-8于2015年7月7日开始业务化运行，是MTSAT-2 (Himawari-7，于2006年发射）的后继者。(wikipedia.org)<br><strong>AHI</strong>：Himawari-8上的主要仪器是高级Himawari成像仪 (AHI)，它是一个16通道多光谱成像仪，用于捕获可见光和红外光亚太地区的图像。 AHI可以生成分辨率低至 500m的图像，每10分钟提供一次全盘观测，每2.5分钟提供一次日本图像。(wikipedia.org)<br><strong>地址</strong>：<br>即时云图预览：<a href="https://himawari8.nict.go.jp/">https://himawari8.nict.go.jp/</a><br>用户注册地址：<a href="https://www.eorc.jaxa.jp/ptree/registration_top.html">https://www.eorc.jaxa.jp/ptree/registration_top.html</a><br>Himawari-8产品说明页面：<a href="https://www.eorc.jaxa.jp/ptree/userguide.html">https://www.eorc.jaxa.jp/ptree/userguide.html</a><br>ftp服务器地址：<a href="ftp://ftp.ptree.jaxa.jp/">ftp://ftp.ptree.jaxa.jp/</a></p><h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><p>有如下两种方式：</p><ol><li><p>使用用户名和密码登录ftp服务器，进入<code>/pub/himawari/</code>路径下可以访问L2和L3级产品，包括海温、野火、云等产品。<br><img src="https://s2.loli.net/2023/12/17/FW6GHLDRObaxv9d.png" alt="登录ftp服务器获取"></p></li><li><p>使用wget，perl等工具从ftp数据服务器下载。</p></li></ol><ul><li><p>命令行直接下载指定文件：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget -q -c -r -nH -nd -np ftp://hjh18305_gmail.com:youownpassword@ftp.ptree.jaxa.jp/pub/himawari/L2/CLP/010/201507/04/00/NC_H08_20150704_0000_L2CLP010_FLDK.02401_02401.nc</span><br></pre></td></tr></table></figure></li><li><p>使用bash、python、fortran脚本自定义下载，这里展示了一个下载云产品的F90例程：</p><figure class="highlight fortran"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CALL</span> download_AHI_L2CLP(<span class="string">&#x27;20180101&#x27;</span>,<span class="string">&#x27;10&#x27;</span>,<span class="string">&#x27;NC_H08_20150704_1000_L2CLP010_FLDK.02401_02401.nc&#x27;</span>,<span class="string">&#x27;./&#x27;</span>,<span class="keyword">status</span>)</span><br></pre></td></tr></table></figure><figure class="highlight fortran"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">subroutine</span></span> download_AHI_L2CLP(yyyymmdd,hh,ahi_name,ahi_L2clp_dir,<span class="keyword">status</span>)</span><br><span class="line">    <span class="keyword">CHARACTER</span>(<span class="number">8</span>), <span class="keyword">INTENT</span>(<span class="keyword">IN</span>) :: yyyymmdd</span><br><span class="line">    <span class="keyword">INTEGER</span>, <span class="keyword">INTENT</span>(<span class="keyword">OUT</span>) :: <span class="keyword">status</span></span><br><span class="line">    <span class="keyword">CHARACTER</span>(<span class="number">2</span>), <span class="keyword">INTENT</span>(<span class="keyword">IN</span>) :: hh</span><br><span class="line">    <span class="keyword">CHARACTER</span>(*), <span class="keyword">INTENT</span>(<span class="keyword">IN</span>) :: ahi_name,ahi_L2clp_dir</span><br><span class="line">    <span class="keyword">CHARACTER</span>(<span class="number">255</span>) :: command</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">! Specify the wget command</span></span><br><span class="line">    command=<span class="string">&#x27;wget -q -c -r -nH -nd -np -P &#x27;</span>//<span class="built_in">trim</span>(ahi_L2clp_dir)//yyyymmdd//<span class="string">&#x27;/&#x27;</span>//hh// &amp;</span><br><span class="line"> <span class="string">&#x27; -A nc ftp://hjh18305_gmail.com:youownpassword@ftp.ptree.jaxa.jp/pub/himawari/L2/CLP/010/&#x27;</span> &amp;</span><br><span class="line"> //yyyymmdd(<span class="number">1</span>:<span class="number">6</span>)//<span class="string">&#x27;/&#x27;</span>//yyyymmdd(<span class="number">7</span>:<span class="number">8</span>)//<span class="string">&#x27;/&#x27;</span>//hh//<span class="string">&#x27;/&#x27;</span>//<span class="built_in">trim</span>(ahi_name)</span><br><span class="line">   </span><br><span class="line"><span class="comment">! print*,command</span></span><br><span class="line"><span class="comment">! stop</span></span><br><span class="line">    <span class="comment">! Execute the wget command</span></span><br><span class="line">    <span class="keyword">CALL</span> SYSTEM(command, <span class="keyword">status</span>)</span><br><span class="line">  </span><br><span class="line">    <span class="comment">! Check the exit status</span></span><br><span class="line">    <span class="comment">! IF (status /= 0) THEN</span></span><br><span class="line">      <span class="comment">! WRITE(*,*) &#x27;Error: Himawari-8 NETCDF Download with status&#x27;, status</span></span><br><span class="line">    <span class="comment">! ELSE</span></span><br><span class="line">      <span class="comment">! WRITE(*,*) &#x27;Himawari-8 NETCDF Download successful&#x27;</span></span><br><span class="line">    <span class="comment">! END IF</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">end</span> <span class="function"><span class="keyword">subroutine</span></span> download_AHI_L2CLP</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> Data N&#39; Method </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Himawari-8 </tag>
            
            <tag> Cloud </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MSG SERV CLM数据集下载</title>
      <link href="/blog/data-n-method/MSG-SERV-download-guide/"/>
      <url>/blog/data-n-method/MSG-SERV-download-guide/</url>
      
        <content type="html"><![CDATA[<p>&copy; 2023-2024, Jiheng Hu. 原创内容，禁止转载。</p><h2 id="Meteosat-Second-Generation"><a href="#Meteosat-Second-Generation" class="headerlink" title="Meteosat Second Generation"></a>Meteosat Second Generation</h2><p>EUMETSAT第二代静止卫星系列包含两个卫星点位，分别是位于欧洲-非洲上方的0-degree点位，由在运行的METSAT-10和11业务覆盖；位于印度洋上空的Indian Ocean点位，先后由METSAT-8(41.5°E)和METSAT-9(45.5°E)业务覆盖。<br>这两点位的卫星视角如下图：<br><img src="https://s2.loli.net/2023/12/14/hWznoxeqcZ7lybu.jpg" alt="MSG视角: 0-Degree(左)，Indian Ocean(右)"></p><p>MSG的Cloud Mask产品主要有两个：<a href="https://data.eumetsat.int/product/EO:EUM:DAT:MSG:CLM">Cloud Mask - MSG - 0 degree</a>和<a href="https://data.eumetsat.int/product/EO:EUM:DAT:MSG:CLM-IODC">Cloud Mask - MSG - Indian Ocean</a>.其时间范围分别为 2004年01月至今和2017年1月至今。<br>该数据集是MSG搭载的SEVI中分辨率成像仪的全盘扫描结果，时间间隔为15分钟。</p><p>考虑到个人需求，本次要下载的是Cloud Mask - MSG - Indian Ocean产品。该数据集的主要参数如下：</p><div class="note danger no-icon flat"><p>Cloud Mask - MSG - Indian Ocean</p><ul><li>Status: Operational</li><li>Temporal extent : 31&#x2F;01&#x2F;2017 to now</li><li>Processing level : Level 2 Data</li><li>Region:<ul><li>Latitude : -67.5 to 67.5 degrees</li><li>Longitude : -22 to 113 degrees</li><li>Resolution: 0100*0100</li><li>Interval: 15 min</li></ul></li></ul></div><h2 id="Cloud-Mask下载"><a href="#Cloud-Mask下载" class="headerlink" title="Cloud Mask下载"></a>Cloud Mask下载</h2><p>数据集的<a href="https://data.eumetsat.int/product/EO:EUM:DAT:MSG:CLM-IODC">详情页</a>提供了下载地址：<a href="https://data.eumetsat.int/data/map/EO:EUM:DAT:MSG:CLM">https://data.eumetsat.int/data/map/EO:EUM:DAT:MSG:CLM</a><br>我们可以输入时间范围进行文件筛选，订单下载或者下载单个文件。<br><img src="https://s2.loli.net/2023/12/14/u1pe2UKFikLhHCj.png" alt="EUMSAT DATA SERVICE"><br>这里文件的详情可以看出，该数据集的单次扫描的文件为如下的zip格式打包文件，内部包含所需要的观测文件，格式是<code>grib2</code>：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">+ MSG3-SEVI-MSGCLMK-0100-0100-20231214060000.000000000Z-NA.zip</span><br><span class="line"> - MSG3-SEVI-MSGCLMK-0100-0100-20231214060000.000000000Z-NA.grb</span><br><span class="line"> - metadata.xml</span><br><span class="line"> - manifest.xml</span><br></pre></td></tr></table></figure><h2 id="调用API下载"><a href="#调用API下载" class="headerlink" title="调用API下载"></a>调用API下载</h2><p>考虑到该数据的文件名较为规律，可以通过调用API的方式直接从数据仓库中下载需要的数据。<br>点击右下角的API block可以发现有数据中心提供了好几个用于后台调用下载的API服务。</p><ol><li><p>注册网站，获取API Key。<br>点击右上角的<a href="https://eoportal.eumetsat.int/cas/login">login</a>, 如果没有账号就注册并登录。<br>按照下图或者去<a href="https://api.eumetsat.int/api-key/">api-key</a> 页面复制你的API Key和secret,这两者包含了你的账户信息和验证信息。<br><img src="https://s2.loli.net/2023/12/14/buAjXIZiOJta1Tr.png" alt="GET YOUR API KEY"><br>页面下方的TOKEN不需要复制，系统会生成一小时时效的TOKEN,只要实时获取就可以了，后面的代码会实现验证功能。</p></li><li><p>安装emudac库<br>参考<a href="https://eumetsatspace.atlassian.net/wiki/spaces/EUMDAC/pages/1760591873/Get+EUMDAC">Get EUMDAC</a>，这里可以直接使用bash安装或者python安装<br>考虑到计划使用python脚本进行下载，这里使用pip安装方式，注意pip版本必须&gt;3.7才能安装。</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&gt; pip install eumdac</span><br></pre></td></tr></table></figure></li><li><p>编写代码<br>这里可以参考<a href="https://eumetsatspace.atlassian.net/wiki/spaces/DSDS/pages/328531972/Jupyter+Notebook+Using+the+Download+API">Jupyter+Notebook+Using+the+Download+API</a>进行脚本的编写，也可以改写成python脚本。</p></li></ol><ul><li><p>首先引入必要的库，粘贴你刚才复制的API Key和Secret到对应的字符串。系统会自动验证身份并返回TOKEN,一般一个小时内有效。通过这种方式可以总是获取有效的TOKEN。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">import eumdac     ## pip3 istall eumdac</span><br><span class="line">import datetime</span><br><span class="line">import shutil</span><br><span class="line">import requests</span><br><span class="line">import time</span><br><span class="line"></span><br><span class="line"># Insert your personal key and secret into the single quotes</span><br><span class="line"></span><br><span class="line">consumer_key = &#x27;xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxa&#x27;</span><br><span class="line">consumer_secret = &#x27;xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxa&#x27;</span><br><span class="line"></span><br><span class="line">credentials = (consumer_key, consumer_secret)</span><br><span class="line"></span><br><span class="line">token = eumdac.AccessToken(credentials)</span><br><span class="line"></span><br><span class="line">try:</span><br><span class="line">    print(f&quot;This token &#x27;&#123;token&#125;&#x27; expires &#123;token.expiration&#125;&quot;)</span><br><span class="line">except requests.exceptions.HTTPError as error:</span><br><span class="line">    print(f&quot;Unexpected error: &#123;error&#125;&quot;)</span><br></pre></td></tr></table></figure><p>[OUT] This token ‘f88198d1-d2e5-33ae-b61e-4f7176e12941’ expires 2023-12-02 12:31:46.611048</p></li><li><p>按照产品编号<code>EO:EUM:DAT:MSG:CLM-IODC</code>来查询数据集，<br>Let’s start to select a collection we want to browse through. For more information on determining which collections are available, see the previous tutorial, Discovering collections</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">datastore = eumdac.DataStore(token)</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span>:    </span><br><span class="line">    <span class="comment"># https://data.eumetsat.int/product/EO:EUM:DAT:MSG:CLM-IODC </span></span><br><span class="line"></span><br><span class="line">    selected_collection = datastore.get_collection(<span class="string">&#x27;EO:EUM:DAT:MSG:CLM-IODC&#x27;</span>) </span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;<span class="subst">&#123;selected_collection&#125;</span> - <span class="subst">&#123;selected_collection.title&#125;</span>&quot;</span>)</span><br><span class="line"><span class="keyword">except</span> eumdac.datastore.DataStoreError <span class="keyword">as</span> error:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;Error related to the data store: &#x27;<span class="subst">&#123;error.msg&#125;</span>&#x27;&quot;</span>)</span><br><span class="line"><span class="keyword">except</span> eumdac.collection.CollectionError <span class="keyword">as</span> error:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;Error related to the collection: &#x27;<span class="subst">&#123;error.msg&#125;</span>&#x27;&quot;</span>)</span><br><span class="line"><span class="keyword">except</span> requests.exceptions.ConnectionError <span class="keyword">as</span> error:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;Error related to the connection: &#x27;<span class="subst">&#123;error.msg&#125;</span>&#x27;&quot;</span>)</span><br><span class="line"><span class="keyword">except</span> requests.exceptions.RequestException <span class="keyword">as</span> error:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;Unexpected error: <span class="subst">&#123;error&#125;</span>&quot;</span>)</span><br></pre></td></tr></table></figure></li><li><p>设置起始结束时间来查询</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Set sensing start and end time</span></span><br><span class="line">start = datetime.datetime(<span class="number">2021</span>, <span class="number">11</span>, <span class="number">10</span>, <span class="number">8</span>, <span class="number">0</span>)</span><br><span class="line">end = datetime.datetime(<span class="number">2021</span>, <span class="number">11</span>, <span class="number">10</span>, <span class="number">9</span>, <span class="number">0</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Retrieve datasets that match our filter</span></span><br><span class="line">products = selected_collection.search(</span><br><span class="line">    dtstart=start,</span><br><span class="line">    dtend=end)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> product <span class="keyword">in</span> products:</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="built_in">print</span>(product)</span><br><span class="line">    <span class="keyword">except</span> eumdac.collection.CollectionError <span class="keyword">as</span> error:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;Error related to the collection: &#x27;<span class="subst">&#123;error.msg&#125;</span>&#x27;&quot;</span>)</span><br><span class="line">    <span class="keyword">except</span> requests.exceptions.ConnectionError <span class="keyword">as</span> error:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;Error related to the connection: &#x27;<span class="subst">&#123;error.msg&#125;</span>&#x27;&quot;</span>)</span><br><span class="line">    <span class="keyword">except</span> requests.exceptions.RequestException <span class="keyword">as</span> error:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;Unexpected error: <span class="subst">&#123;error&#125;</span>&quot;</span>)</span><br></pre></td></tr></table></figure></li><li><p>直接下载查询到的所有文件</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">###  Download all products from search</span></span><br><span class="line"><span class="keyword">for</span> product <span class="keyword">in</span> products:</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">with</span> product.<span class="built_in">open</span>() <span class="keyword">as</span> fsrc, \</span><br><span class="line">                <span class="built_in">open</span>(fsrc.name, mode=<span class="string">&#x27;wb&#x27;</span>) <span class="keyword">as</span> fdst:</span><br><span class="line">            shutil.copyfileobj(fsrc, fdst)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&#x27;Download of product <span class="subst">&#123;product&#125;</span> finished.&#x27;</span>)</span><br><span class="line">    <span class="keyword">except</span> eumdac.product.ProductError <span class="keyword">as</span> error:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;Error related to the product &#x27;<span class="subst">&#123;product&#125;</span>&#x27; while trying to download it: &#x27;<span class="subst">&#123;error.msg&#125;</span>&#x27;&quot;</span>)</span><br><span class="line">    <span class="keyword">except</span> requests.exceptions.ConnectionError <span class="keyword">as</span> error:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;Error related to the connection: &#x27;<span class="subst">&#123;error.msg&#125;</span>&#x27;&quot;</span>)</span><br><span class="line">    <span class="keyword">except</span> requests.exceptions.RequestException <span class="keyword">as</span> error:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;Unexpected error: <span class="subst">&#123;error&#125;</span>&quot;</span>)</span><br><span class="line">    </span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;All downloads are finished.&#x27;</span>)</span><br></pre></td></tr></table></figure></li><li><p>或者指定文件名下载单个文件</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">## Download a single product</span></span><br><span class="line"></span><br><span class="line">selected_product = datastore.get_product(</span><br><span class="line">    product_id=<span class="string">&#x27;MSG2-SEVI-MSGCLMK-0100-0100-20231104141500.000000000Z-NA&#x27;</span>,</span><br><span class="line">    collection_id=<span class="string">&#x27;EO:EUM:DAT:MSG:CLM-IODC&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    <span class="built_in">print</span>(selected_product) </span><br><span class="line"><span class="keyword">except</span> eumdac.product.ProductError <span class="keyword">as</span> error:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;Error related to the product: &#x27;<span class="subst">&#123;error.msg&#125;</span>&#x27;&quot;</span>)</span><br><span class="line"><span class="keyword">except</span> requests.exceptions.ConnectionError <span class="keyword">as</span> error:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;Error related to the connection: &#x27;<span class="subst">&#123;error.msg&#125;</span>&#x27;&quot;</span>)</span><br><span class="line"><span class="keyword">except</span> requests.exceptions.RequestException <span class="keyword">as</span> error:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;Unexpected error: <span class="subst">&#123;error&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    <span class="keyword">with</span> selected_product.<span class="built_in">open</span>() <span class="keyword">as</span> fsrc, \</span><br><span class="line">            <span class="built_in">open</span>(fsrc.name, mode=<span class="string">&#x27;wb&#x27;</span>) <span class="keyword">as</span> fdst:</span><br><span class="line">        shutil.copyfileobj(fsrc, fdst)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&#x27;Download of product <span class="subst">&#123;selected_product&#125;</span> finished.&#x27;</span>)</span><br><span class="line"><span class="keyword">except</span> eumdac.product.ProductError <span class="keyword">as</span> error:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;Error related to the product &#x27;<span class="subst">&#123;selected_product&#125;</span>&#x27; while trying to download it: &#x27;<span class="subst">&#123;error.msg&#125;</span>&#x27;&quot;</span>)</span><br><span class="line"><span class="keyword">except</span> requests.exceptions.ConnectionError <span class="keyword">as</span> error:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;Error related to the connection: &#x27;<span class="subst">&#123;error.msg&#125;</span>&#x27;&quot;</span>)</span><br><span class="line"><span class="keyword">except</span> requests.exceptions.RequestException <span class="keyword">as</span> error:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;Unexpected error: <span class="subst">&#123;error&#125;</span>&quot;</span>)</span><br></pre></td></tr></table></figure></li><li><p>从单个zip文件中下载需要的文件，如<code>manifest.xml</code></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">## Download a single file from product</span><br><span class="line">for entry in selected_product.entries:</span><br><span class="line">    try:</span><br><span class="line">        print(entry)</span><br><span class="line">    except eumdac.product.ProductError as error:</span><br><span class="line">        print(f&quot;Error related to the product: &#x27;&#123;error.msg&#125;&#x27;&quot;)</span><br><span class="line">    except requests.exceptions.ConnectionError as error:</span><br><span class="line">        print(f&quot;Error related to the connection: &#x27;&#123;error.msg&#125;&#x27;&quot;)</span><br><span class="line">    except requests.exceptions.RequestException as error:</span><br><span class="line">        print(f&quot;Unexpected error: &#123;error&#125;&quot;)</span><br><span class="line"></span><br><span class="line">### Files within the product may be downloaded by providing the file&#x27;s name, as demonstrated in the cell below.</span><br><span class="line">try:</span><br><span class="line">    with selected_product.open(entry=&#x27;manifest.xml&#x27;) as fsrc, \</span><br><span class="line">            open(fsrc.name, mode=&#x27;wb&#x27;) as fdst:</span><br><span class="line">        shutil.copyfileobj(fsrc, fdst)</span><br><span class="line">        print(f&#x27;Download of file &#123;fsrc.name&#125; finished.&#x27;)</span><br><span class="line">except eumdac.product.ProductError as error:</span><br><span class="line">    print(f&quot;Error related to the product &#x27;&#123;selected_product&#125;&#x27; while trying to download it: &#x27;&#123;error.msg&#125;&#x27;&quot;)</span><br><span class="line">except requests.exceptions.ConnectionError as error:</span><br><span class="line">    print(f&quot;Error related to the connection: &#x27;&#123;error.msg&#125;&#x27;&quot;)</span><br><span class="line">except requests.exceptions.RequestException as error:</span><br><span class="line">    print(f&quot;Unexpected error: &#123;error&#125;&quot;)</span><br></pre></td></tr></table></figure></li></ul><h2 id="python-脚本"><a href="#python-脚本" class="headerlink" title="python 脚本"></a>python 脚本</h2><p>这里提供了一种可能的python脚本的示例。该脚本接受三个参数，八位日期，四位时间和存放路径，下载对应的grib2文件到指定路径。<br>Example to call in Fortan90</p><figure class="highlight fortran"><table><tr><td class="code"><pre><span class="line">yyyymmdd=<span class="string">&quot;20221104&quot;</span></span><br><span class="line">HHMM=<span class="string">&quot;1445&quot;</span></span><br><span class="line">MSG_CLM_DIR=<span class="string">&#x27;/data/jihenghu/data/MSG_CLM_IODC/&#x27;</span></span><br><span class="line"><span class="keyword">CALL</span> SYSTEM(<span class="string">&quot;python3.9 sub_download_msg_clm.py &quot;</span>//yyyymmdd//<span class="string">&quot; &quot;</span>//HHMM//<span class="string">&quot; &quot;</span>//<span class="built_in">trim</span>(MSG_CLM_DIR))</span><br></pre></td></tr></table></figure><p><code>sub_download_msg_clm.py</code>脚本内容如下：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> eumdac     <span class="comment">## pip3 istall eumdac</span></span><br><span class="line"><span class="keyword">import</span> datetime</span><br><span class="line"><span class="keyword">import</span> shutil</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> os,sys</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(sys.argv) &lt; <span class="number">3</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;ERROR! Non-adequate arguments for MSG Cloud Download Script !&quot;</span>)</span><br><span class="line">    exit()</span><br><span class="line"></span><br><span class="line">yyyymmdd= sys.argv[<span class="number">1</span>]</span><br><span class="line">HHMM= sys.argv[<span class="number">2</span>]</span><br><span class="line">dirc= sys.argv[<span class="number">3</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment">## Download a single product</span></span><br><span class="line"></span><br><span class="line">year=<span class="built_in">int</span>(yyyymmdd[<span class="number">0</span>:<span class="number">4</span>])</span><br><span class="line">month=<span class="built_in">int</span>(yyyymmdd[<span class="number">4</span>:<span class="number">6</span>])</span><br><span class="line">day=<span class="built_in">int</span>(yyyymmdd[<span class="number">6</span>:<span class="number">8</span>])</span><br><span class="line">hh=<span class="built_in">int</span>(HHMM[<span class="number">0</span>:<span class="number">2</span>])</span><br><span class="line">mm=<span class="built_in">int</span>(HHMM[<span class="number">2</span>:<span class="number">4</span>])</span><br><span class="line"></span><br><span class="line">dir_msg=dirc+<span class="string">&#x27;/&#x27;</span>+yyyymmdd+<span class="string">&#x27;/&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(dir_msg):</span><br><span class="line">    os.mkdir(dir_msg)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Insert your personal key and secret into the single quotes</span></span><br><span class="line">consumer_key = <span class="string">&#x27;#########################Qa&#x27;</span></span><br><span class="line">consumer_secret = <span class="string">&#x27;#####################a&#x27;</span></span><br><span class="line"></span><br><span class="line">credentials = (consumer_key, consumer_secret)</span><br><span class="line"></span><br><span class="line">token = eumdac.AccessToken(credentials)</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    <span class="keyword">pass</span><span class="comment"># print(f&quot;This token &#x27;&#123;token&#125;&#x27; expires &#123;token.expiration&#125;&quot;)</span></span><br><span class="line"><span class="keyword">except</span> requests.exceptions.HTTPError <span class="keyword">as</span> error:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;Unexpected error: <span class="subst">&#123;error&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line">datastore = eumdac.DataStore(token)</span><br><span class="line"></span><br><span class="line"><span class="comment"># get collection</span></span><br><span class="line"><span class="keyword">try</span>:    </span><br><span class="line">    <span class="comment"># https://data.eumetsat.int/product/EO:EUM:DAT:MSG:CLM-IODC </span></span><br><span class="line">    selected_collection = datastore.get_collection(<span class="string">&#x27;EO:EUM:DAT:MSG:CLM-IODC&#x27;</span>) </span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;<span class="subst">&#123;selected_collection&#125;</span> - <span class="subst">&#123;selected_collection.title&#125;</span>&quot;</span>)</span><br><span class="line"><span class="keyword">except</span> eumdac.datastore.DataStoreError <span class="keyword">as</span> error:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;Error related to the data store: &#x27;<span class="subst">&#123;error.msg&#125;</span>&#x27;&quot;</span>)</span><br><span class="line"><span class="keyword">except</span> eumdac.collection.CollectionError <span class="keyword">as</span> error:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;Error related to the collection: &#x27;<span class="subst">&#123;error.msg&#125;</span>&#x27;&quot;</span>)</span><br><span class="line"><span class="keyword">except</span> requests.exceptions.ConnectionError <span class="keyword">as</span> error:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;Error related to the connection: &#x27;<span class="subst">&#123;error.msg&#125;</span>&#x27;&quot;</span>)</span><br><span class="line"><span class="keyword">except</span> requests.exceptions.RequestException <span class="keyword">as</span> error:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;Unexpected error: <span class="subst">&#123;error&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Set sensing start and end time</span></span><br><span class="line">start = datetime.datetime(year, month, day, hh, mm)</span><br><span class="line">end = datetime.datetime(year, month, day, hh, mm)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Retrieve datasets that match our filter</span></span><br><span class="line">products = selected_collection.search(dtstart=start, dtend=end)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> product <span class="keyword">in</span> products:</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">with</span> product.<span class="built_in">open</span>(entry=<span class="built_in">str</span>(product)+<span class="string">&#x27;.grb&#x27;</span>) <span class="keyword">as</span> fsrc, \</span><br><span class="line">                <span class="built_in">open</span>(dir_msg+fsrc.name, mode=<span class="string">&#x27;wb&#x27;</span>) <span class="keyword">as</span> fdst:</span><br><span class="line">            shutil.copyfileobj(fsrc, fdst)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&#x27;Download of file <span class="subst">&#123;fsrc.name&#125;</span> finished.&#x27;</span>)</span><br><span class="line">    <span class="keyword">except</span> eumdac.product.ProductError <span class="keyword">as</span> error:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;Error related to the product &#x27;<span class="subst">&#123;product&#125;</span>&#x27; while trying to download it: &#x27;<span class="subst">&#123;error.msg&#125;</span>&#x27;&quot;</span>)</span><br><span class="line">    <span class="keyword">except</span> requests.exceptions.ConnectionError <span class="keyword">as</span> error:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;Error related to the connection: &#x27;<span class="subst">&#123;error.msg&#125;</span>&#x27;&quot;</span>)</span><br><span class="line">    <span class="keyword">except</span> requests.exceptions.RequestException <span class="keyword">as</span> error:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;Unexpected error: <span class="subst">&#123;error&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul><li><a href="https://eumetsatspace.atlassian.net/wiki/spaces/DSDS/pages/328531972/Jupyter+Notebook+Using+the+Download+API">https://eumetsatspace.atlassian.net/wiki/spaces/DSDS/pages/328531972/Jupyter+Notebook+Using+the+Download+API</a></li><li><a href="https://gitlab.eumetsat.int/eumetlab/data-services/eumetsat_python_for_data_services">https://gitlab.eumetsat.int/eumetlab/data-services/eumetsat_python_for_data_services</a></li><li><a href="https://api.eumetsat.int/api-key/">https://api.eumetsat.int/api-key/</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Data N&#39; Method </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Cloud </tag>
            
            <tag> MSG </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GOES16 ABI AWS Bucket数据集下载</title>
      <link href="/blog/data-n-method/GOES-R-AWS-download-guide/"/>
      <url>/blog/data-n-method/GOES-R-AWS-download-guide/</url>
      
        <content type="html"><![CDATA[<p>&copy; 2023-2024 Jiheng HU, <span style="color:purple"> 原创内容，禁止转载。</span></p><p>要获取GOES系列静止卫星的L2+级云参数产品的FullDisk圆盘数据，需要清楚相关卫星的工作方式。</p><h2 id="NOAA-第五代GOES静止卫星星座"><a href="#NOAA-第五代GOES静止卫星星座" class="headerlink" title="NOAA 第五代GOES静止卫星星座"></a>NOAA 第五代GOES静止卫星星座</h2><p>GOES-R系列静止卫星是目前NOAA在运行的第三代静止卫星任务，其编号分别为GOES-R&#x2F;S&#x2F;T三颗卫星。其后继的第五代静止卫星为U系列，预计于2024年以后发射。关于具体的GOES任务表，详见<a href="https://en.wikipedia.org/wiki/List_of_GOES_satellites">WIKIPEDIA.GOES Schedule</a><br>GOES静止卫星星座一般由两颗位于east和west点位上的业务卫星构成，赤经分别为75.2° W 和 137.2°W。<br>目前GOES-R系列已经发射了三颗业务卫星，分别是GOES16、GOES17和GOES18，其发射前的名称分别为GOES-R&#x2F;GOES-S&#x2F;GOES-T。</p><ul><li>GOES-16卫星是R系列的第一颗卫星，其与2017年12月18日机动到EAST点，取代原先的GOES-13星并开始业务化运行。自此，GOES-16一直是GOES-R系列唯一一颗EAST卫星。</li><li>GOES-17卫星于2019年2月成为GOES-WEST,但是由于其冷却系统的问题，2021年6月，NOAA宣布会尽快使用GOES18号卫星替代west点的业务任务。</li><li>GOES-18卫星于2022年3月1日升空，2023年1月4日称为GOES-West，原先的GOES17转移到16和18中间的位置，作为备份使用。</li></ul><h2 id="GOES16-ABI"><a href="#GOES16-ABI" class="headerlink" title="GOES16&#x2F;ABI"></a>GOES16&#x2F;ABI</h2><p>本文要下载的数据是GOES16卫星的部分云产品参数。<br>GOES16 搭载的先进基线成像仪（ABI）提供了中分辨率的地表和大气的成像能力。ABI的扫描模式可以参考官网的介绍<a href="https://www.goes-r.gov/users/abiScanModeInfo.html">ABI SCAN MODE</a><br>这里介绍主要的一点：ABI的FULLDISK扫描在2019年4月2日由原先的15min一次的M3 Mode切换到了目前10min一次的M6 Mode。</p><h2 id="获取方式"><a href="#获取方式" class="headerlink" title="获取方式"></a>获取方式</h2><p>以COD参数为例，根据<a href="https://www.ncei.noaa.gov/access/metadata/landing-page/bin/iso?id=gov.noaa.ncdc:C01508">产品页</a>中的获取方式，主要有以下两种：<br>主要有两种方式:</p><ol><li><p>去CLASS数据分发系统申请下载，数据较全。缺点：有单次10000个文件的限制；需要后台处理等待超过一天，而且会拆分单个订单；无法正则下载。<br>地址：<a href="https://www.avl.class.noaa.gov/saa/products/search?datatype_family=GRABIPRD">https://www.avl.class.noaa.gov/saa/products/search?datatype_family=GRABIPRD</a></p></li><li><p>2020年以后的数据已经托管到了亚马逊和Google的云存储中，可以无权限访问下载，而且数据非常块。缺点：只有2020年以后的数据。<br>地址：<a href="https://noaa-goes16.s3.amazonaws.com/index.html">https://noaa-goes16.s3.amazonaws.com/index.html</a></p></li></ol><p>本次使用了Amazon AWS下载的方式。</p><h2 id="AWS-Cloud-Download"><a href="#AWS-Cloud-Download" class="headerlink" title="AWS Cloud Download"></a>AWS Cloud Download</h2><p>一开始尝试使用wget进行下载，发现仓库地址并不是数据库的地址，并且数据库地址无法使用正则和递归下载，那么你就只能直接指定文件名。<br>麻烦的地方来了，GOES的数据命名如下<br>OR_ABI-L2-ACMF-M6_G16_s20200011130<code>218_e20200011139525_c20200011140341</code>.nc<br>不仅开始时间后面会多出三位数字，后面还会跟一串完全随机的结束时间和创建时间，没有规律可循。那就无法根据需求生成文件名。</p><p>这种情况下，亚马逊提供了AWS CLI命令行工具来实现对S3数据的操作，包括复制，下载，移动，重名。<br>可以实现简单的正则和递归，那么就行得通了。</p><h3 id="安装AWS-CLI"><a href="#安装AWS-CLI" class="headerlink" title="安装AWS CLI"></a>安装AWS CLI</h3><p>访问<a href="https://docs.aws.amazon.com/zh_cn/cli/latest/userguide/getting-started-install.html">安装或更新 AWS CLI 的最新版本</a><br>按照指南依此执行：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&gt; curl <span class="string">&quot;https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip&quot;</span> -o <span class="string">&quot;awscliv2.zip&quot;</span></span><br><span class="line">&gt; unzip awscliv2.zip</span><br><span class="line">&gt; sudo ./aws/install</span><br></pre></td></tr></table></figure><p>默认会安装到&#x2F;usr&#x2F;local&#x2F;bin&#x2F;aws-cli,可以根据需求使用-i选项来指定安装地址。</p><h3 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h3><p>安装aws cli以后，你就可以使用命令行来完成特定需求的文件下载：<br>如，下载20200101日 11:30分的ACMF文件，并放置到指定目录下：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&gt; aws s3 <span class="built_in">cp</span> --recursive --no-sign-request --exclude <span class="string">&#x27;*&#x27;</span> --include <span class="string">&#x27;*s20200011130???_e*_c*.nc&#x27;</span> s3://noaa-goes16/ABI-L2-ACMF/2020/001/11/  ./20200101/</span><br><span class="line"></span><br><span class="line">download: s3://noaa-goes16/ABI-L2-ACMF/2020/001/11/OR_ABI-L2-ACMF-M6_G16_s20200011130218_e20200011139525_c20200011140341.nc to 20200101/OR_ABI-L2-ACMF-M6_G16_s20200011130218_e20200011139525_c20200011140341.nc</span><br></pre></td></tr></table></figure><h3 id="Fortran-Runtime-Download-Desired-GOES-file"><a href="#Fortran-Runtime-Download-Desired-GOES-file" class="headerlink" title="Fortran Runtime Download Desired GOES file"></a>Fortran Runtime Download Desired GOES file</h3><p>可以在Fortran代码中根据日期和时间进行下载:</p><figure class="highlight fortran"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CALL</span> download_GOESR_AWS(yyyymmdd,HH,MM,GEOS_L2_DIR)</span><br><span class="line"><span class="keyword">CALL</span> download_GOESR_AWS(<span class="string">&#x27;20200101&#x27;</span>,<span class="string">&#x27;11&#x27;</span>,<span class="string">&#x27;30&#x27;</span>,<span class="string">&#x27;./data/GOES_L2/20200101/&#x27;</span>)</span><br></pre></td></tr></table></figure><p>Subroutine <code>download_GOESR_AWS</code>, be like </p><figure class="highlight fortran"><table><tr><td class="code"><pre><span class="line"><span class="comment">!! sub to download GOES-R Cloud from AWS S3 data bucket </span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">SUBROUTINE</span></span> download_GOESR_AWS(yyyymmdd,HH,MM,GEOS_L2_DIR)</span><br><span class="line"></span><br><span class="line"><span class="keyword">CHARACTER</span>(*), <span class="keyword">INTENT</span>(<span class="keyword">IN</span>) :: GEOS_L2_DIR</span><br><span class="line"><span class="keyword">CHARACTER</span>(<span class="number">8</span>), <span class="keyword">INTENT</span>(<span class="keyword">IN</span>) :: yyyymmdd</span><br><span class="line"><span class="keyword">CHARACTER</span>(<span class="number">2</span>), <span class="keyword">INTENT</span>(<span class="keyword">IN</span>) :: HH,MM</span><br><span class="line">  </span><br><span class="line">    <span class="comment">! Internal variables</span></span><br><span class="line">    <span class="keyword">INTEGER</span> ::  <span class="keyword">status</span>,file_unit</span><br><span class="line">    <span class="keyword">CHARACTER</span>(<span class="number">3</span>) :: DOY</span><br><span class="line">    <span class="keyword">CHARACTER</span>(<span class="number">256</span>) :: command</span><br><span class="line">  </span><br><span class="line">    <span class="comment">! Parse the date string to extract year, month, and day</span></span><br><span class="line">    <span class="keyword">CALL</span> ParseDate(yyyymmdd,DOY)</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">IF</span>(yyyymmdd.LT.<span class="string">&#x27;20200101&#x27;</span>) <span class="keyword">THEN</span></span><br><span class="line"><span class="built_in">PRINT</span>*,<span class="string">&#x27;ERROR! Date before 20200101 not exist in AWS cloud bucket!&#x27;</span></span><br><span class="line"><span class="keyword">STOP</span></span><br><span class="line"><span class="keyword">END</span><span class="keyword">IF</span></span><br><span class="line">  </span><br><span class="line"><span class="comment">!! ACM Clearsky MASK </span></span><br><span class="line">    command = <span class="string">&quot;aws s3 cp --recursive --no-sign-request --exclude &#x27;*&#x27; &amp;</span></span><br><span class="line"><span class="string">         --include &#x27;*s&quot;</span>//yyyymmdd(<span class="number">1</span>:<span class="number">4</span>)//DOY//HH//MM//<span class="string">&quot;???_e*_c*.nc&#x27; &amp;</span></span><br><span class="line"><span class="string"> s3://noaa-goes16/ABI-L2-ACMF/&quot;</span>//yyyymmdd(<span class="number">1</span>:<span class="number">4</span>)//<span class="string">&quot;/&quot;</span>//DOY//<span class="string">&quot;/&quot;</span>//HH//<span class="string">&quot;/ &quot;</span>&amp;</span><br><span class="line"> //<span class="built_in">trim</span>(GEOS_L2_DIR)//<span class="string">&quot;/&quot;</span>//yyyymmdd//<span class="string">&quot;/&quot;</span></span><br><span class="line">    <span class="keyword">CALL</span> SYSTEM(command, <span class="keyword">status</span>)</span><br><span class="line">  </span><br><span class="line"><span class="comment">!! COD Cloud Optical Depeth</span></span><br><span class="line"></span><br><span class="line">    command = <span class="string">&quot;aws s3 cp --recursive --no-sign-request --exclude &#x27;*&#x27; &amp;</span></span><br><span class="line"><span class="string">         --include &#x27;*s&quot;</span>//yyyymmdd(<span class="number">1</span>:<span class="number">4</span>)//DOY//HH//MM//<span class="string">&quot;???_e*_c*.nc&#x27; &amp;</span></span><br><span class="line"><span class="string"> s3://noaa-goes16/ABI-L2-CODF/&quot;</span>//yyyymmdd(<span class="number">1</span>:<span class="number">4</span>)//<span class="string">&quot;/&quot;</span>//DOY//<span class="string">&quot;/&quot;</span>//HH//<span class="string">&quot;/ &amp;</span></span><br><span class="line"><span class="string"> &quot;</span>//<span class="built_in">trim</span>(GEOS_L2_DIR)//<span class="string">&quot;/&quot;</span>//yyyymmdd//<span class="string">&quot;/&quot;</span></span><br><span class="line">    <span class="keyword">CALL</span> SYSTEM(command, <span class="keyword">status</span>) </span><br><span class="line"></span><br><span class="line"><span class="comment">!! CPS cloud partical size</span></span><br><span class="line"></span><br><span class="line">    command = <span class="string">&quot;aws s3 cp --recursive --no-sign-request --exclude &#x27;*&#x27; &amp;</span></span><br><span class="line"><span class="string">         --include &#x27;*s&quot;</span>//yyyymmdd(<span class="number">1</span>:<span class="number">4</span>)//DOY//HH//MM//<span class="string">&quot;???_e*_c*.nc&#x27; &amp;</span></span><br><span class="line"><span class="string"> s3://noaa-goes16/ABI-L2-CPSF/&quot;</span>//yyyymmdd(<span class="number">1</span>:<span class="number">4</span>)//<span class="string">&quot;/&quot;</span>//DOY//<span class="string">&quot;/&quot;</span>//HH//<span class="string">&quot;/ &amp;</span></span><br><span class="line"><span class="string"> &quot;</span>//<span class="built_in">trim</span>(GEOS_L2_DIR)//<span class="string">&quot;/&quot;</span>//yyyymmdd//<span class="string">&quot;/&quot;</span></span><br><span class="line">    <span class="keyword">CALL</span> SYSTEM(command, <span class="keyword">status</span>) </span><br><span class="line"></span><br><span class="line"><span class="comment">!!  ACHA cloud top height</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    command = <span class="string">&quot;aws s3 cp --recursive --no-sign-request --exclude &#x27;*&#x27; &amp;</span></span><br><span class="line"><span class="string">         --include &#x27;*s&quot;</span>//yyyymmdd(<span class="number">1</span>:<span class="number">4</span>)//DOY//HH//MM//<span class="string">&quot;???_e*_c*.nc&#x27; &amp;</span></span><br><span class="line"><span class="string"> s3://noaa-goes16/ABI-L2-ACHAF/&quot;</span>//yyyymmdd(<span class="number">1</span>:<span class="number">4</span>)//<span class="string">&quot;/&quot;</span>//DOY//<span class="string">&quot;/&quot;</span>//HH//<span class="string">&quot;/ &amp;</span></span><br><span class="line"><span class="string"> &quot;</span>//<span class="built_in">trim</span>(GEOS_L2_DIR)//<span class="string">&quot;/&quot;</span>//yyyymmdd//<span class="string">&quot;/&quot;</span></span><br><span class="line">    <span class="keyword">CALL</span> SYSTEM(command, <span class="keyword">status</span>) </span><br><span class="line">  </span><br><span class="line"><span class="comment">!! ABI-L2-ACTPF  Cloud top phase</span></span><br><span class="line">  </span><br><span class="line">     command = <span class="string">&quot;aws s3 cp --recursive --no-sign-request --exclude &#x27;*&#x27; &amp;</span></span><br><span class="line"><span class="string">         --include &#x27;*s&quot;</span>//yyyymmdd(<span class="number">1</span>:<span class="number">4</span>)//DOY//HH//MM//<span class="string">&quot;???_e*_c*.nc&#x27; &amp;</span></span><br><span class="line"><span class="string"> s3://noaa-goes16/ABI-L2-ACTPF/&quot;</span>//yyyymmdd(<span class="number">1</span>:<span class="number">4</span>)//<span class="string">&quot;/&quot;</span>//DOY//<span class="string">&quot;/&quot;</span>//HH//<span class="string">&quot;/ &amp;</span></span><br><span class="line"><span class="string"> &quot;</span>//<span class="built_in">trim</span>(GEOS_L2_DIR)//<span class="string">&quot;/&quot;</span>//yyyymmdd//<span class="string">&quot;/&quot;</span></span><br><span class="line">    <span class="keyword">CALL</span> SYSTEM(command, <span class="keyword">status</span>)  </span><br><span class="line"></span><br><span class="line"><span class="comment">! Check the exit status</span></span><br><span class="line">    <span class="keyword">IF</span> (<span class="keyword">status</span> /= <span class="number">0</span>) <span class="keyword">THEN</span></span><br><span class="line">      <span class="built_in">WRITE</span>(*,*) <span class="string">&#x27;Error: wget command failed with status&#x27;</span>, <span class="keyword">status</span></span><br><span class="line">  <span class="keyword">STOP</span></span><br><span class="line">    <span class="keyword">ELSE</span></span><br><span class="line">      <span class="built_in">WRITE</span>(*,*) <span class="string">&#x27;GOES-R NetCDF file Download successful&#x27;</span></span><br><span class="line">    <span class="keyword">END</span> <span class="keyword">IF</span>  </span><br><span class="line"></span><br><span class="line"><span class="comment">!=================================================</span></span><br><span class="line"><span class="comment">! &lt;-------  POST-PROCESSING CODE HERE  --------&gt; !</span></span><br><span class="line"><span class="comment">!=================================================</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">END</span> <span class="function"><span class="keyword">SUBROUTINE</span></span> download_GOESR_AWS</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>这样的数据下载下来依然很难用，忍不住写代码的时候吐槽了好几遍，决定采用以下的两种方法：<br>将以下内容放到上述程序的<code>POST-PROCESSING CODE HERE</code>处：</p><figure class="highlight fortran"><table><tr><td class="code"><pre><span class="line"><span class="comment">!! P.S. YOU CAN NOT IMAGINE HOW HARD IT IS TO DOWNLOAD AND USE GOES DATA UNTIL U DO IT,</span></span><br><span class="line"><span class="comment">!! THE MOST HARSH THING TODO IS TO OPERATE SUCH FILES WITH TOTALLY ARBITARY NAMES......</span></span><br><span class="line"><span class="comment">!! YOU CAN NOT USE WGET TO DOWNLOAD IT DIRECTLY, </span></span><br><span class="line"><span class="comment">!! NOR CAN YOU EASILY GET THESE NAMES UNLESS YOU STRUGGLE TO </span></span><br><span class="line"><span class="comment">!! CALL SYSTEM COMMAND TO GET THEIR SIGNATURES WHICH THEY ARE DIFFERENT FROM EACH OTHER</span></span><br><span class="line"><span class="comment">!! AND THEN RETRIEVE THE FILENAMES, YOU GANNA GOT A LONG SHIT CODE IN THIS BLOCK.</span></span><br><span class="line"></span><br><span class="line"><span class="comment">! CALL system(&quot;cd &quot;//trim(GEOS_L2_DIR)//&quot;/&quot;//yyyymmdd//&amp;</span></span><br><span class="line"><span class="comment">! &quot; ; ls OR_ABI-L2-ACMF-M6_G16_s&quot;//yyyymmdd(1:4)//DOY//HH//MM//&quot;???_e*_c*.nc &amp;</span></span><br><span class="line"><span class="comment">! &gt;&quot;//trim(PWD)//&quot;/filelists/Name_ACMF_G16_s&quot;//yyyymmdd//HH//MM//&quot;.txt&quot;)</span></span><br><span class="line"><span class="comment">! OPEN(NEWUNIT=file_unit, FILE=trim(PWD)//&quot;/filelists/Name_ACMF_G16_s&quot;//yyyymmdd//HH//MM//&quot;.txt&quot;)</span></span><br><span class="line"><span class="comment">! read(file_unit,&#x27;(A)&#x27;) GOES_Sufix</span></span><br><span class="line"><span class="comment">! close(file_unit)</span></span><br><span class="line"><span class="comment">! print*,GOES_Sufix</span></span><br><span class="line"><span class="comment">! GOES_Sufix=GOES_Sufix(23:72)  !! and length differs from variables </span></span><br><span class="line"><span class="comment">! print*,GOES_Sufix  </span></span><br><span class="line"></span><br><span class="line"><span class="comment">!! INSTEAD, I Rename THEM ALL.</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">CALL</span> system(<span class="string">&quot;cd &quot;</span>//<span class="built_in">trim</span>(GEOS_L2_DIR)//<span class="string">&quot;/&quot;</span>//yyyymmdd//&amp;</span><br><span class="line"><span class="string">&quot; ; mv -v OR_ABI-L2-ACMF-M6_G16_s&quot;</span>//yyyymmdd(<span class="number">1</span>:<span class="number">4</span>)//DOY//HH//MM//<span class="string">&quot;???_e*_c*.nc &amp;</span></span><br><span class="line"><span class="string">OR_ABI-L2-ACMF-M6_G16_&quot;</span>//yyyymmdd//<span class="string">&quot;_&quot;</span>//HH//MM//<span class="string">&quot;.NC&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">CALL</span> system(<span class="string">&quot;cd &quot;</span>//<span class="built_in">trim</span>(GEOS_L2_DIR)//<span class="string">&quot;/&quot;</span>//yyyymmdd//&amp;</span><br><span class="line"><span class="string">&quot; ; mv -v OR_ABI-L2-CODF-M6_G16_s&quot;</span>//yyyymmdd(<span class="number">1</span>:<span class="number">4</span>)//DOY//HH//MM//<span class="string">&quot;???_e*_c*.nc &amp;</span></span><br><span class="line"><span class="string">OR_ABI-L2-CODF-M6_G16_&quot;</span>//yyyymmdd//<span class="string">&quot;_&quot;</span>//HH//MM//<span class="string">&quot;.NC&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">CALL</span> system(<span class="string">&quot;cd &quot;</span>//<span class="built_in">trim</span>(GEOS_L2_DIR)//<span class="string">&quot;/&quot;</span>//yyyymmdd//&amp;</span><br><span class="line"><span class="string">&quot; ; mv -v OR_ABI-L2-CPSF-M6_G16_s&quot;</span>//yyyymmdd(<span class="number">1</span>:<span class="number">4</span>)//DOY//HH//MM//<span class="string">&quot;???_e*_c*.nc &amp;</span></span><br><span class="line"><span class="string">OR_ABI-L2-CPSF-M6_G16_&quot;</span>//yyyymmdd//<span class="string">&quot;_&quot;</span>//HH//MM//<span class="string">&quot;.NC&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">CALL</span> system(<span class="string">&quot;cd &quot;</span>//<span class="built_in">trim</span>(GEOS_L2_DIR)//<span class="string">&quot;/&quot;</span>//yyyymmdd//&amp;</span><br><span class="line"><span class="string">&quot; ; mv -v OR_ABI-L2-ACHAF-M6_G16_s&quot;</span>//yyyymmdd(<span class="number">1</span>:<span class="number">4</span>)//DOY//HH//MM//<span class="string">&quot;???_e*_c*.nc &amp;</span></span><br><span class="line"><span class="string">OR_ABI-L2-ACHAF-M6_G16_&quot;</span>//yyyymmdd//<span class="string">&quot;_&quot;</span>//HH//MM//<span class="string">&quot;.NC&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">CALL</span> system(<span class="string">&quot;cd &quot;</span>//<span class="built_in">trim</span>(GEOS_L2_DIR)//<span class="string">&quot;/&quot;</span>//yyyymmdd//&amp;</span><br><span class="line"><span class="string">&quot; ; mv -v OR_ABI-L2-ACTPF-M6_G16_s&quot;</span>//yyyymmdd(<span class="number">1</span>:<span class="number">4</span>)//DOY//HH//MM//<span class="string">&quot;???_e*_c*.nc &amp;</span></span><br><span class="line"><span class="string">OR_ABI-L2-ACTPF-M6_G16_&quot;</span>//yyyymmdd//<span class="string">&quot;_&quot;</span>//HH//MM//<span class="string">&quot;.NC&quot;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>&copy; 2023-2024 Jiheng HU, 原创内容，禁止转载。</p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><ul><li><a href="https://en.wikipedia.org/wiki/List_of_GOES_satellites">https://en.wikipedia.org/wiki/List_of_GOES_satellites</a></li><li><a href="https://www.ncei.noaa.gov/access/metadata/landing-page/bin/iso?id=gov.noaa.ncdc:C01508">https://www.ncei.noaa.gov/access/metadata/landing-page/bin/iso?id=gov.noaa.ncdc:C01508</a></li><li><a href="https://noaa-goes16.s3.amazonaws.com/index.html">https://noaa-goes16.s3.amazonaws.com/index.html</a></li><li><a href="https://www.avl.class.noaa.gov/saa/products/search?datatype_family=GRABIPRD">https://www.avl.class.noaa.gov/saa/products/search?datatype_family=GRABIPRD</a></li><li><a href="https://registry.opendata.aws/noaa-goes/">https://registry.opendata.aws/noaa-goes/</a></li><li><a href="https://docs.aws.amazon.com/zh_cn/cli/latest/userguide/getting-started-install.html">https://docs.aws.amazon.com/zh_cn/cli/latest/userguide/getting-started-install.html</a></li><li><a href="https://stackoverflow.com/questions/41764836/amazon-s3-console-download-multiple-files-at-once">https://stackoverflow.com/questions/41764836/amazon-s3-console-download-multiple-files-at-once</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Data N&#39; Method </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Cloud </tag>
            
            <tag> GOES-R </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Canoe Source：Canoe的诊断量输出</title>
      <link href="/blog/research/canoe-athena/canoe-source-output/"/>
      <url>/blog/research/canoe-athena/canoe-source-output/</url>
      
        <content type="html"><![CDATA[<h2 id="Canoe的输出解析"><a href="#Canoe的输出解析" class="headerlink" title="Canoe的输出解析"></a>Canoe的输出解析</h2><p>在Juno-MWR-EQ的模拟中，我们设定的输出诊断量如下：</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment">## /juno.inp</span></span><br><span class="line"><span class="string">&lt;output2&gt;</span></span><br><span class="line"><span class="string">file_type</span>   <span class="string">=</span> <span class="string">netcdf</span>      <span class="comment"># NetCDF data dump</span></span><br><span class="line"><span class="string">variable</span>    <span class="string">=</span> <span class="string">prim</span>        <span class="comment"># variables to be output</span></span><br><span class="line"><span class="string">dt</span>          <span class="string">=</span> <span class="number">1.E-9</span>       <span class="comment"># time increment between outputs</span></span><br><span class="line"></span><br><span class="line"><span class="string">&lt;output3&gt;</span></span><br><span class="line"><span class="string">file_type</span>   <span class="string">=</span> <span class="string">netcdf</span></span><br><span class="line"><span class="string">variable</span>    <span class="string">=</span> <span class="string">uov</span></span><br><span class="line"><span class="string">dt</span>          <span class="string">=</span> <span class="number">1.E-9</span></span><br><span class="line"></span><br><span class="line"><span class="string">&lt;output4&gt;</span></span><br><span class="line"><span class="string">file_type</span>   <span class="string">=</span> <span class="string">netcdf</span></span><br><span class="line"><span class="string">variable</span>    <span class="string">=</span> <span class="string">radtoa</span></span><br><span class="line"><span class="string">dt</span>          <span class="string">=</span> <span class="number">1.E-9</span></span><br><span class="line"></span><br><span class="line"><span class="string">&lt;output5&gt;</span></span><br><span class="line"><span class="string">file_type</span>   <span class="string">=</span> <span class="string">netcdf</span></span><br><span class="line"><span class="string">variable</span>    <span class="string">=</span> <span class="string">radtau</span></span><br><span class="line"><span class="string">dt</span>          <span class="string">=</span> <span class="number">1.E-9</span></span><br></pre></td></tr></table></figure><p><code>dt</code>是输出步长，<code>prim</code>为primitive量，类似的还有<code>cons</code>,见下文。<br>那么，这些输出设定是如何被模式解析的呢，解析以后通过什么方式被输出的呢？<br>在粗略研读了源码之后，个人理解：Canoe有三套输出解析系统，分别是：基于Athena++的输出解析模块，Canoe扩展输出模块，以及UOV用户自定义输出模块。</p><h2 id="Athena-Output解析"><a href="#Athena-Output解析" class="headerlink" title="Athena++ Output解析"></a>Athena++ Output解析</h2><p>在athena++模式中，inp文件会被<a href="https://github.com/PrincetonUniversity/athena/blob/master/src/outputs/outputs.cpp">athena&#x2F;src&#x2F;outputs&#x2F;outputs.cpp</a>模块解析。<br>athena++会按照上述文件的设定的关键字，对输出量进行读取，并扩展到输出对象中：</p><div class="note primary no-icon flat"><p> Required parameters that must be specified in an <code>&lt;output[n]&gt;</code> block are:</p><ul><li>variable     &#x3D; cons,prim,D,d,E,e,m,m1,m2,m3,v,v1&#x3D;vx,v2&#x3D;vy,v3&#x3D;vz,p,<br>           bcc,bcc1,bcc2,bcc3,b,b1,b2,b3,phi,uov</li><li>file_type    &#x3D; rst,tab,vtk,hst,hdf5</li><li>dt           &#x3D; problem time between outputs<br>EXAMPLE of an <code>&lt;output[n]&gt;</code> block for a VTK dump: <figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">&lt;output3&gt;</span></span><br><span class="line"> <span class="string">file_type</span>   <span class="string">=</span> <span class="string">tab</span>       <span class="comment"># Tabular data dump</span></span><br><span class="line"> <span class="string">variable</span>    <span class="string">=</span> <span class="string">prim</span>      <span class="comment"># variables to be output</span></span><br><span class="line"> <span class="string">data_format</span> <span class="string">=</span> <span class="string">%12.5e</span>    <span class="comment"># Optional data format string</span></span><br><span class="line"> <span class="string">dt</span>          <span class="string">=</span> <span class="number">0.01</span>      <span class="comment"># time increment between outputs</span></span><br><span class="line"> <span class="string">x2_slice</span>    <span class="string">=</span> <span class="number">0.0</span>       <span class="comment"># slice in x2</span></span><br><span class="line"> <span class="string">x3_slice</span>    <span class="string">=</span> <span class="number">0.0</span>       <span class="comment"># slice in x3</span></span><br></pre></td></tr></table></figure> Each<code> &lt;output[n]&gt;</code> block will result in a new node being created in a linked list of OutputType stored in the <code>Outputs</code> class.  During a simulation, outputs are made when the simulation time satisfies the criteria implemented in the <code>MakeOutputs()</code> function.</li></ul></div><p>在这里，prim关键字会被以下逻辑进行解析，<code> ContainVariable(output_params.variable, &quot;prim&quot;)</code>和或逻辑的使用使得，只要<output>字块中有：</p><ul><li><code>prim</code>关键字的存在，就会扩展以下primitive量到Outputs类中并最终输出：<code>rho</code>,<code>press</code>,<code>vel</code>,<code>phi</code>；</li><li><code>cons</code>关键字的存在，就会扩展以下conserved量到Outputs类中并最终输出：<code>dens</code>,<code>Etot</code>,<code>mom</code>,<code>phi</code>。</li></ul><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">OutputType::LoadOutputData</span><span class="params">(MeshBlock *pmb)</span> </span>&#123;</span><br><span class="line">   <span class="comment">/* ...省略.... */</span></span><br><span class="line">  <span class="comment">// NEW_OUTPUT_TYPES:</span></span><br><span class="line">  <span class="comment">// (lab-frame) density</span></span><br><span class="line">  <span class="keyword">if</span> (<span class="built_in">ContainVariable</span>(output_params.variable, <span class="string">&quot;D&quot;</span>) ||</span><br><span class="line">      <span class="built_in">ContainVariable</span>(output_params.variable, <span class="string">&quot;cons&quot;</span>)) &#123;</span><br><span class="line">    pod = <span class="keyword">new</span> OutputData;</span><br><span class="line">    pod-&gt;type = <span class="string">&quot;SCALARS&quot;</span>;</span><br><span class="line">    pod-&gt;name = <span class="string">&quot;dens&quot;</span>;</span><br><span class="line">    pod-&gt;data.<span class="built_in">InitWithShallowSlice</span>(phyd-&gt;u, <span class="number">4</span>, IDN, <span class="number">1</span>);</span><br><span class="line">    <span class="built_in">AppendOutputDataNode</span>(pod);</span><br><span class="line">    num_vars_++;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// (rest-frame) density</span></span><br><span class="line">  <span class="keyword">if</span> (<span class="built_in">ContainVariable</span>(output_params.variable, <span class="string">&quot;d&quot;</span>) ||</span><br><span class="line">      <span class="built_in">ContainVariable</span>(output_params.variable, <span class="string">&quot;prim&quot;</span>)) &#123;</span><br><span class="line">    pod = <span class="keyword">new</span> OutputData;</span><br><span class="line">    pod-&gt;type = <span class="string">&quot;SCALARS&quot;</span>;</span><br><span class="line">    pod-&gt;name = <span class="string">&quot;rho&quot;</span>;</span><br><span class="line">    pod-&gt;data.<span class="built_in">InitWithShallowSlice</span>(phyd-&gt;w, <span class="number">4</span>, IDN, <span class="number">1</span>);</span><br><span class="line">    <span class="built_in">AppendOutputDataNode</span>(pod);</span><br><span class="line">    num_vars_++;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// total energy</span></span><br><span class="line">  <span class="keyword">if</span> (NON_BAROTROPIC_EOS) &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">ContainVariable</span>(output_params.variable, <span class="string">&quot;E&quot;</span>) ||</span><br><span class="line">        <span class="built_in">ContainVariable</span>(output_params.variable, <span class="string">&quot;cons&quot;</span>)) &#123;</span><br><span class="line">      pod = <span class="keyword">new</span> OutputData;</span><br><span class="line">      pod-&gt;type = <span class="string">&quot;SCALARS&quot;</span>;</span><br><span class="line">      pod-&gt;name = <span class="string">&quot;Etot&quot;</span>;</span><br><span class="line">      <span class="keyword">if</span> (porb-&gt;orbital_advection_defined</span><br><span class="line">          &amp;&amp; !output_params.orbital_system_output) &#123;</span><br><span class="line">        porb-&gt;<span class="built_in">ConvertOrbitalSystem</span>(phyd-&gt;w, phyd-&gt;u, OrbitalTransform::cons);</span><br><span class="line">        pod-&gt;data.<span class="built_in">InitWithShallowSlice</span>(porb-&gt;u_orb, <span class="number">4</span>, IEN, <span class="number">1</span>);</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        pod-&gt;data.<span class="built_in">InitWithShallowSlice</span>(phyd-&gt;u, <span class="number">4</span>, IEN, <span class="number">1</span>);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="built_in">AppendOutputDataNode</span>(pod);</span><br><span class="line">      num_vars_++;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// pressure</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">ContainVariable</span>(output_params.variable, <span class="string">&quot;p&quot;</span>) ||</span><br><span class="line">        <span class="built_in">ContainVariable</span>(output_params.variable, <span class="string">&quot;prim&quot;</span>)) &#123;</span><br><span class="line">      pod = <span class="keyword">new</span> OutputData;</span><br><span class="line">      pod-&gt;type = <span class="string">&quot;SCALARS&quot;</span>;</span><br><span class="line">      pod-&gt;name = <span class="string">&quot;press&quot;</span>;</span><br><span class="line">      pod-&gt;data.<span class="built_in">InitWithShallowSlice</span>(phyd-&gt;w, <span class="number">4</span>, IPR, <span class="number">1</span>);</span><br><span class="line">      <span class="built_in">AppendOutputDataNode</span>(pod);</span><br><span class="line">      num_vars_++;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// momentum vector</span></span><br><span class="line">  <span class="keyword">if</span> (<span class="built_in">ContainVariable</span>(output_params.variable, <span class="string">&quot;m&quot;</span>) ||</span><br><span class="line">      <span class="built_in">ContainVariable</span>(output_params.variable, <span class="string">&quot;cons&quot;</span>)) &#123;</span><br><span class="line">    pod = <span class="keyword">new</span> OutputData;</span><br><span class="line">    pod-&gt;type = <span class="string">&quot;VECTORS&quot;</span>;</span><br><span class="line">    pod-&gt;name = <span class="string">&quot;mom&quot;</span>;</span><br><span class="line">    <span class="keyword">if</span> (porb-&gt;orbital_advection_defined</span><br><span class="line">        &amp;&amp; !output_params.orbital_system_output) &#123;</span><br><span class="line">      porb-&gt;<span class="built_in">ConvertOrbitalSystem</span>(phyd-&gt;w, phyd-&gt;u, OrbitalTransform::cons);</span><br><span class="line">      pod-&gt;data.<span class="built_in">InitWithShallowSlice</span>(porb-&gt;u_orb, <span class="number">4</span>, IM1, <span class="number">3</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      pod-&gt;data.<span class="built_in">InitWithShallowSlice</span>(phyd-&gt;u, <span class="number">4</span>, IM1, <span class="number">3</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">AppendOutputDataNode</span>(pod);</span><br><span class="line">    num_vars_ += <span class="number">3</span>;</span><br><span class="line">    <span class="keyword">if</span> (output_params.cartesian_vector) &#123;</span><br><span class="line">      AthenaArray&lt;Real&gt; src;</span><br><span class="line">      <span class="keyword">if</span> (porb-&gt;orbital_advection_defined</span><br><span class="line">          &amp;&amp; !output_params.orbital_system_output) &#123;</span><br><span class="line">        src.<span class="built_in">InitWithShallowSlice</span>(porb-&gt;u_orb, <span class="number">4</span>, IM1, <span class="number">3</span>);</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        src.<span class="built_in">InitWithShallowSlice</span>(phyd-&gt;u, <span class="number">4</span>, IM1, <span class="number">3</span>);</span><br><span class="line">      &#125;</span><br><span class="line">      pod = <span class="keyword">new</span> OutputData;</span><br><span class="line">      pod-&gt;type = <span class="string">&quot;VECTORS&quot;</span>;</span><br><span class="line">      pod-&gt;name = <span class="string">&quot;mom_xyz&quot;</span>;</span><br><span class="line">      pod-&gt;data.<span class="built_in">NewAthenaArray</span>(<span class="number">3</span>, phyd-&gt;u.<span class="built_in">GetDim3</span>(), phyd-&gt;u.<span class="built_in">GetDim2</span>(),</span><br><span class="line">                               phyd-&gt;u.<span class="built_in">GetDim1</span>());</span><br><span class="line">      <span class="built_in">CalculateCartesianVector</span>(src,  pod-&gt;data,  pmb-&gt;pcoord);</span><br><span class="line">      <span class="built_in">AppendOutputDataNode</span>(pod);</span><br><span class="line">      num_vars_ += <span class="number">3</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// each component of momentum</span></span><br><span class="line">  <span class="keyword">if</span> (<span class="built_in">ContainVariable</span>(output_params.variable, <span class="string">&quot;m1&quot;</span>)) &#123;</span><br><span class="line">    pod = <span class="keyword">new</span> OutputData;</span><br><span class="line">    pod-&gt;type = <span class="string">&quot;SCALARS&quot;</span>;</span><br><span class="line">    pod-&gt;name = <span class="string">&quot;mom1&quot;</span>;</span><br><span class="line">    pod-&gt;data.<span class="built_in">InitWithShallowSlice</span>(phyd-&gt;u, <span class="number">4</span>, IM1, <span class="number">1</span>);</span><br><span class="line">    <span class="built_in">AppendOutputDataNode</span>(pod);</span><br><span class="line">    num_vars_++;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (<span class="built_in">ContainVariable</span>(output_params.variable, <span class="string">&quot;m2&quot;</span>)) &#123;</span><br><span class="line">    pod = <span class="keyword">new</span> OutputData;</span><br><span class="line">    pod-&gt;type = <span class="string">&quot;SCALARS&quot;</span>;</span><br><span class="line">    pod-&gt;name = <span class="string">&quot;mom2&quot;</span>;</span><br><span class="line">    <span class="keyword">if</span> (porb-&gt;orbital_advection_defined</span><br><span class="line">        &amp;&amp; !output_params.orbital_system_output</span><br><span class="line">        &amp;&amp; porb-&gt;orbital_direction == <span class="number">1</span>) &#123;</span><br><span class="line">      porb-&gt;<span class="built_in">ConvertOrbitalSystem</span>(phyd-&gt;w, phyd-&gt;u, OrbitalTransform::cons);</span><br><span class="line">      pod-&gt;data.<span class="built_in">InitWithShallowSlice</span>(porb-&gt;u_orb, <span class="number">4</span>, IM2, <span class="number">1</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      pod-&gt;data.<span class="built_in">InitWithShallowSlice</span>(phyd-&gt;u, <span class="number">4</span>, IM2, <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">AppendOutputDataNode</span>(pod);</span><br><span class="line">    num_vars_++;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (<span class="built_in">ContainVariable</span>(output_params.variable, <span class="string">&quot;m3&quot;</span>)) &#123;</span><br><span class="line">    pod = <span class="keyword">new</span> OutputData;</span><br><span class="line">    pod-&gt;type = <span class="string">&quot;SCALARS&quot;</span>;</span><br><span class="line">    pod-&gt;name = <span class="string">&quot;mom3&quot;</span>;</span><br><span class="line">    <span class="keyword">if</span> (porb-&gt;orbital_advection_defined</span><br><span class="line">        &amp;&amp; !output_params.orbital_system_output</span><br><span class="line">        &amp;&amp; porb-&gt;orbital_direction == <span class="number">2</span>) &#123;</span><br><span class="line">      porb-&gt;<span class="built_in">ConvertOrbitalSystem</span>(phyd-&gt;w, phyd-&gt;u, OrbitalTransform::cons);</span><br><span class="line">      pod-&gt;data.<span class="built_in">InitWithShallowSlice</span>(porb-&gt;u_orb, <span class="number">4</span>, IM3, <span class="number">1</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      pod-&gt;data.<span class="built_in">InitWithShallowSlice</span>(phyd-&gt;u, <span class="number">4</span>, IM3, <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">AppendOutputDataNode</span>(pod);</span><br><span class="line">    num_vars_++;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// velocity vector</span></span><br><span class="line">  <span class="keyword">if</span> (<span class="built_in">ContainVariable</span>(output_params.variable, <span class="string">&quot;v&quot;</span>) ||</span><br><span class="line">      <span class="built_in">ContainVariable</span>(output_params.variable, <span class="string">&quot;prim&quot;</span>)) &#123;</span><br><span class="line">    pod = <span class="keyword">new</span> OutputData;</span><br><span class="line">    pod-&gt;type = <span class="string">&quot;VECTORS&quot;</span>;</span><br><span class="line">    pod-&gt;name = <span class="string">&quot;vel&quot;</span>;</span><br><span class="line">    <span class="keyword">if</span> (porb-&gt;orbital_advection_defined</span><br><span class="line">        &amp;&amp; !output_params.orbital_system_output) &#123;</span><br><span class="line">      porb-&gt;<span class="built_in">ConvertOrbitalSystem</span>(phyd-&gt;w, phyd-&gt;u, OrbitalTransform::prim);</span><br><span class="line">      pod-&gt;data.<span class="built_in">InitWithShallowSlice</span>(porb-&gt;w_orb, <span class="number">4</span>, IVX, <span class="number">3</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      pod-&gt;data.<span class="built_in">InitWithShallowSlice</span>(phyd-&gt;w, <span class="number">4</span>, IVX, <span class="number">3</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">AppendOutputDataNode</span>(pod);</span><br><span class="line">    num_vars_ += <span class="number">3</span>;</span><br><span class="line">    <span class="keyword">if</span> (output_params.cartesian_vector) &#123;</span><br><span class="line">      AthenaArray&lt;Real&gt; src;</span><br><span class="line">      <span class="keyword">if</span> (porb-&gt;orbital_advection_defined</span><br><span class="line">          &amp;&amp; !output_params.orbital_system_output) &#123;</span><br><span class="line">        src.<span class="built_in">InitWithShallowSlice</span>(porb-&gt;w_orb, <span class="number">4</span>, IVX, <span class="number">3</span>);</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        src.<span class="built_in">InitWithShallowSlice</span>(phyd-&gt;w, <span class="number">4</span>, IVX, <span class="number">3</span>);</span><br><span class="line">      &#125;</span><br><span class="line">      pod = <span class="keyword">new</span> OutputData;</span><br><span class="line">      pod-&gt;type = <span class="string">&quot;VECTORS&quot;</span>;</span><br><span class="line">      pod-&gt;name = <span class="string">&quot;vel_xyz&quot;</span>;</span><br><span class="line">      pod-&gt;data.<span class="built_in">NewAthenaArray</span>(<span class="number">3</span>, phyd-&gt;w.<span class="built_in">GetDim3</span>(), phyd-&gt;w.<span class="built_in">GetDim2</span>(),</span><br><span class="line">                               phyd-&gt;w.<span class="built_in">GetDim1</span>());</span><br><span class="line">      <span class="built_in">CalculateCartesianVector</span>(src,  pod-&gt;data,  pmb-&gt;pcoord);</span><br><span class="line">      <span class="built_in">AppendOutputDataNode</span>(pod);</span><br><span class="line">      num_vars_ += <span class="number">3</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// each component of velocity</span></span><br><span class="line">  <span class="keyword">if</span> (<span class="built_in">ContainVariable</span>(output_params.variable, <span class="string">&quot;vx&quot;</span>) ||</span><br><span class="line">      <span class="built_in">ContainVariable</span>(output_params.variable, <span class="string">&quot;v1&quot;</span>)) &#123;</span><br><span class="line">    pod = <span class="keyword">new</span> OutputData;</span><br><span class="line">    pod-&gt;type = <span class="string">&quot;SCALARS&quot;</span>;</span><br><span class="line">    pod-&gt;name = <span class="string">&quot;vel1&quot;</span>;</span><br><span class="line">    pod-&gt;data.<span class="built_in">InitWithShallowSlice</span>(phyd-&gt;w, <span class="number">4</span>, IVX, <span class="number">1</span>);</span><br><span class="line">    <span class="built_in">AppendOutputDataNode</span>(pod);</span><br><span class="line">    num_vars_++;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (<span class="built_in">ContainVariable</span>(output_params.variable, <span class="string">&quot;vy&quot;</span>) ||</span><br><span class="line">      <span class="built_in">ContainVariable</span>(output_params.variable, <span class="string">&quot;v2&quot;</span>)) &#123;</span><br><span class="line">    pod = <span class="keyword">new</span> OutputData;</span><br><span class="line">    pod-&gt;type = <span class="string">&quot;SCALARS&quot;</span>;</span><br><span class="line">    pod-&gt;name = <span class="string">&quot;vel2&quot;</span>;</span><br><span class="line">    <span class="keyword">if</span> (porb-&gt;orbital_advection_defined</span><br><span class="line">        &amp;&amp; !output_params.orbital_system_output</span><br><span class="line">        &amp;&amp; porb-&gt;orbital_direction == <span class="number">1</span>) &#123;</span><br><span class="line">      porb-&gt;<span class="built_in">ConvertOrbitalSystem</span>(phyd-&gt;w, phyd-&gt;u, OrbitalTransform::prim);</span><br><span class="line">      pod-&gt;data.<span class="built_in">InitWithShallowSlice</span>(porb-&gt;w_orb, <span class="number">4</span>, IVY, <span class="number">1</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      pod-&gt;data.<span class="built_in">InitWithShallowSlice</span>(phyd-&gt;w, <span class="number">4</span>, IVY, <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">AppendOutputDataNode</span>(pod);</span><br><span class="line">    num_vars_++;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (<span class="built_in">ContainVariable</span>(output_params.variable, <span class="string">&quot;vz&quot;</span>) ||</span><br><span class="line">      <span class="built_in">ContainVariable</span>(output_params.variable, <span class="string">&quot;v3&quot;</span>)) &#123;</span><br><span class="line">    pod = <span class="keyword">new</span> OutputData;</span><br><span class="line">    pod-&gt;type = <span class="string">&quot;SCALARS&quot;</span>;</span><br><span class="line">    pod-&gt;name = <span class="string">&quot;vel3&quot;</span>;</span><br><span class="line">    <span class="keyword">if</span> (porb-&gt;orbital_advection_defined</span><br><span class="line">        &amp;&amp; !output_params.orbital_system_output</span><br><span class="line">        &amp;&amp; porb-&gt;orbital_direction == <span class="number">2</span>) &#123;</span><br><span class="line">      porb-&gt;<span class="built_in">ConvertOrbitalSystem</span>(phyd-&gt;w, phyd-&gt;u, OrbitalTransform::prim);</span><br><span class="line">      pod-&gt;data.<span class="built_in">InitWithShallowSlice</span>(porb-&gt;w_orb, <span class="number">4</span>, IVZ, <span class="number">1</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      pod-&gt;data.<span class="built_in">InitWithShallowSlice</span>(phyd-&gt;w, <span class="number">4</span>, IVZ, <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">AppendOutputDataNode</span>(pod);</span><br><span class="line">    num_vars_++;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (SELF_GRAVITY_ENABLED) &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">ContainVariable</span>(output_params.variable, <span class="string">&quot;phi&quot;</span>) ||</span><br><span class="line">        <span class="built_in">ContainVariable</span>(output_params.variable, <span class="string">&quot;prim&quot;</span>) ||</span><br><span class="line">        <span class="built_in">ContainVariable</span>(output_params.variable, <span class="string">&quot;cons&quot;</span>)) &#123;</span><br><span class="line">      pod = <span class="keyword">new</span> OutputData;</span><br><span class="line">      pod-&gt;type = <span class="string">&quot;SCALARS&quot;</span>;</span><br><span class="line">      pod-&gt;name = <span class="string">&quot;phi&quot;</span>;</span><br><span class="line">      pod-&gt;data.<span class="built_in">InitWithShallowSlice</span>(pgrav-&gt;phi, <span class="number">4</span>, <span class="number">0</span>, <span class="number">1</span>);</span><br><span class="line">      <span class="built_in">AppendOutputDataNode</span>(pod);</span><br><span class="line">      num_vars_++;</span><br><span class="line">      <span class="keyword">if</span> (pgrav-&gt;output_defect) &#123;</span><br><span class="line">        pod = <span class="keyword">new</span> OutputData;</span><br><span class="line">        pod-&gt;type = <span class="string">&quot;SCALARS&quot;</span>;</span><br><span class="line">        pod-&gt;name = <span class="string">&quot;defect-phi&quot;</span>;</span><br><span class="line">        pod-&gt;data.<span class="built_in">InitWithShallowSlice</span>(pgrav-&gt;def, <span class="number">4</span>, <span class="number">0</span>, <span class="number">1</span>);</span><br><span class="line">        <span class="built_in">AppendOutputDataNode</span>(pod);</span><br><span class="line">        num_vars_++;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125; <span class="comment">// endif (SELF_GRAVITY_ENABLED)</span></span><br></pre></td></tr></table></figure><p>那么，上述<output2>模块的输出示例：</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">netcdf</span> <span class="string">juno_mwr.out2.00000</span> &#123;</span><br><span class="line"><span class="attr">dimensions:</span></span><br><span class="line"><span class="string">time</span> <span class="string">=</span> <span class="string">UNLIMITED</span> <span class="string">;</span> <span class="string">//</span> <span class="string">(1</span> <span class="string">currently)</span></span><br><span class="line"><span class="string">x1</span> <span class="string">=</span> <span class="number">1600</span> <span class="string">;</span></span><br><span class="line"><span class="string">x1f</span> <span class="string">=</span> <span class="number">1601</span> <span class="string">;</span></span><br><span class="line"><span class="string">x2</span> <span class="string">=</span> <span class="number">5</span> <span class="string">;</span></span><br><span class="line"><span class="string">x2f</span> <span class="string">=</span> <span class="number">6</span> <span class="string">;</span></span><br><span class="line"><span class="string">x3</span> <span class="string">=</span> <span class="number">1</span> <span class="string">;</span></span><br><span class="line"><span class="string">ray</span> <span class="string">=</span> <span class="number">24</span> <span class="string">;</span></span><br><span class="line"><span class="attr">variables:</span></span><br><span class="line"><span class="string">float</span> <span class="string">time(time)</span> <span class="string">;</span></span><br><span class="line"><span class="string">time:axis</span> <span class="string">=</span> <span class="string">&quot;T&quot;</span> <span class="string">;</span></span><br><span class="line"><span class="string">time:units</span> <span class="string">=</span> <span class="string">&quot;s&quot;</span> <span class="string">;</span></span><br><span class="line"><span class="string">time:long_name</span> <span class="string">=</span> <span class="string">&quot;time&quot;</span> <span class="string">;</span></span><br><span class="line"><span class="string">float</span> <span class="string">x1(x1)</span> <span class="string">;</span></span><br><span class="line"><span class="string">x1:axis</span> <span class="string">=</span> <span class="string">&quot;Z&quot;</span> <span class="string">;</span></span><br><span class="line"><span class="string">x1:units</span> <span class="string">=</span> <span class="string">&quot;m&quot;</span> <span class="string">;</span></span><br><span class="line"><span class="string">x1:long_name</span> <span class="string">=</span> <span class="string">&quot;Z-coordinate at cell center&quot;</span> <span class="string">;</span></span><br><span class="line"><span class="string">float</span> <span class="string">x1f(x1f)</span> <span class="string">;</span></span><br><span class="line"><span class="string">x1f:units</span> <span class="string">=</span> <span class="string">&quot;m&quot;</span> <span class="string">;</span></span><br><span class="line"><span class="string">x1f:long_name</span> <span class="string">=</span> <span class="string">&quot;Z-coordinate at cell face&quot;</span> <span class="string">;</span></span><br><span class="line"><span class="string">float</span> <span class="string">x2(x2)</span> <span class="string">;</span></span><br><span class="line"><span class="string">x2:axis</span> <span class="string">=</span> <span class="string">&quot;Y&quot;</span> <span class="string">;</span></span><br><span class="line"><span class="string">x2:units</span> <span class="string">=</span> <span class="string">&quot;m&quot;</span> <span class="string">;</span></span><br><span class="line"><span class="string">x2:long_name</span> <span class="string">=</span> <span class="string">&quot;Y-coordinate at cell center&quot;</span> <span class="string">;</span></span><br><span class="line"><span class="string">float</span> <span class="string">x2f(x2f)</span> <span class="string">;</span></span><br><span class="line"><span class="string">x2f:units</span> <span class="string">=</span> <span class="string">&quot;m&quot;</span> <span class="string">;</span></span><br><span class="line"><span class="string">x2f:long_name</span> <span class="string">=</span> <span class="string">&quot;Y-coordinate at cell face&quot;</span> <span class="string">;</span></span><br><span class="line"><span class="string">float</span> <span class="string">x3(x3)</span> <span class="string">;</span></span><br><span class="line"><span class="string">x3:axis</span> <span class="string">=</span> <span class="string">&quot;X&quot;</span> <span class="string">;</span></span><br><span class="line"><span class="string">x3:units</span> <span class="string">=</span> <span class="string">&quot;m&quot;</span> <span class="string">;</span></span><br><span class="line"><span class="string">x3:long_name</span> <span class="string">=</span> <span class="string">&quot;X-coordinate at cell center&quot;</span> <span class="string">;</span></span><br><span class="line"><span class="string">float</span> <span class="string">mu_out(ray)</span> <span class="string">;</span></span><br><span class="line"><span class="string">mu_out:units</span> <span class="string">=</span> <span class="string">&quot;1&quot;</span> <span class="string">;</span></span><br><span class="line"><span class="string">mu_out:long_name</span> <span class="string">=</span> <span class="string">&quot;cosine polar angle&quot;</span> <span class="string">;</span></span><br><span class="line"><span class="string">float</span> <span class="string">phi_out(ray)</span> <span class="string">;</span></span><br><span class="line"><span class="string">phi_out:units</span> <span class="string">=</span> <span class="string">&quot;rad&quot;</span> <span class="string">;</span></span><br><span class="line"><span class="string">phi_out:long_name</span> <span class="string">=</span> <span class="string">&quot;azimuthal angle&quot;</span> <span class="string">;</span></span><br><span class="line"><span class="string">float</span> <span class="string">rho(time</span>, <span class="string">x1</span>, <span class="string">x2</span>, <span class="string">x3)</span> <span class="string">;</span></span><br><span class="line"><span class="string">rho:units</span> <span class="string">=</span> <span class="string">&quot;kg/m^3&quot;</span> <span class="string">;</span></span><br><span class="line"><span class="string">rho:long_name</span> <span class="string">=</span> <span class="string">&quot;density&quot;</span> <span class="string">;</span></span><br><span class="line"><span class="string">float</span> <span class="string">press(time</span>, <span class="string">x1</span>, <span class="string">x2</span>, <span class="string">x3)</span> <span class="string">;</span></span><br><span class="line"><span class="string">press:units</span> <span class="string">=</span> <span class="string">&quot;pa&quot;</span> <span class="string">;</span></span><br><span class="line"><span class="string">press:long_name</span> <span class="string">=</span> <span class="string">&quot;pressure&quot;</span> <span class="string">;</span></span><br><span class="line"><span class="string">float</span> <span class="string">vel1(time</span>, <span class="string">x1</span>, <span class="string">x2</span>, <span class="string">x3)</span> <span class="string">;</span></span><br><span class="line"><span class="string">vel1:units</span> <span class="string">=</span> <span class="string">&quot;m/s&quot;</span> <span class="string">;</span></span><br><span class="line"><span class="string">vel1:long_name</span> <span class="string">=</span> <span class="string">&quot;velocity&quot;</span> <span class="string">;</span></span><br><span class="line"><span class="string">float</span> <span class="string">vel2(time</span>, <span class="string">x1</span>, <span class="string">x2</span>, <span class="string">x3)</span> <span class="string">;</span></span><br><span class="line"><span class="string">vel2:units</span> <span class="string">=</span> <span class="string">&quot;m/s&quot;</span> <span class="string">;</span></span><br><span class="line"><span class="string">vel2:long_name</span> <span class="string">=</span> <span class="string">&quot;velocity&quot;</span> <span class="string">;</span></span><br><span class="line"><span class="string">float</span> <span class="string">vel3(time</span>, <span class="string">x1</span>, <span class="string">x2</span>, <span class="string">x3)</span> <span class="string">;</span></span><br><span class="line"><span class="string">vel3:units</span> <span class="string">=</span> <span class="string">&quot;m/s&quot;</span> <span class="string">;</span></span><br><span class="line"><span class="string">vel3:long_name</span> <span class="string">=</span> <span class="string">&quot;velocity&quot;</span> <span class="string">;</span></span><br><span class="line"><span class="string">float</span> <span class="string">r0(time</span>, <span class="string">x1</span>, <span class="string">x2</span>, <span class="string">x3)</span> <span class="string">;</span></span><br><span class="line"><span class="string">float</span> <span class="string">r1(time</span>, <span class="string">x1</span>, <span class="string">x2</span>, <span class="string">x3)</span> <span class="string">;</span></span><br><span class="line"><span class="string">float</span> <span class="string">r2(time</span>, <span class="string">x1</span>, <span class="string">x2</span>, <span class="string">x3)</span> <span class="string">;</span></span><br><span class="line"><span class="string">float</span> <span class="string">r3(time</span>, <span class="string">x1</span>, <span class="string">x2</span>, <span class="string">x3)</span> <span class="string">;</span></span><br><span class="line"><span class="string">float</span> <span class="string">r4(time</span>, <span class="string">x1</span>, <span class="string">x2</span>, <span class="string">x3)</span> <span class="string">;</span></span><br><span class="line"><span class="string">float</span> <span class="string">r5(time</span>, <span class="string">x1</span>, <span class="string">x2</span>, <span class="string">x3)</span> <span class="string">;</span></span><br><span class="line"><span class="string">float</span> <span class="string">vapor1(time</span>, <span class="string">x1</span>, <span class="string">x2</span>, <span class="string">x3)</span> <span class="string">;</span></span><br><span class="line"><span class="string">vapor1:units</span> <span class="string">=</span> <span class="string">&quot;kg/kg&quot;</span> <span class="string">;</span></span><br><span class="line"><span class="string">vapor1:long_name</span> <span class="string">=</span> <span class="string">&quot;mass mixing ratio of vapor&quot;</span> <span class="string">;</span></span><br><span class="line"><span class="string">float</span> <span class="string">vapor2(time</span>, <span class="string">x1</span>, <span class="string">x2</span>, <span class="string">x3)</span> <span class="string">;</span></span><br><span class="line"><span class="string">vapor2:units</span> <span class="string">=</span> <span class="string">&quot;kg/kg&quot;</span> <span class="string">;</span></span><br><span class="line"><span class="string">vapor2:long_name</span> <span class="string">=</span> <span class="string">&quot;mass mixing ratio of vapor&quot;</span> <span class="string">;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Canoe-output扩展"><a href="#Canoe-output扩展" class="headerlink" title="Canoe output扩展"></a>Canoe output扩展</h2><p>Canoe由于添加了热力学和辐射传输模块，对Athena++的输出模块进行了扩展，这些实现在<a href="https://github.com/chengcli/canoe/blob/main/src/outputs/load_user_output_data.cpp">canoe&#x2F;src&#x2F;outputs&#x2F;load_user_output_data.cpp</a>源码中。</p><p>包含了对<code>vapor</code>,<code>rad</code>,<code>radtau</code>,<code>radflux</code>,<code>radtoa</code>等关键字的支持。</p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">OutputType::loadUserOutputData</span><span class="params">(MeshBlock *pmb)</span> </span>&#123;</span><br><span class="line">  OutputData *pod;</span><br><span class="line">  <span class="keyword">auto</span> phyd = pmb-&gt;phydro;</span><br><span class="line">  <span class="keyword">auto</span> prad = pmb-&gt;pimpl-&gt;prad;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// vapor</span></span><br><span class="line">  <span class="keyword">if</span> (NVAPOR &gt; <span class="number">0</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (output_params.variable.<span class="built_in">compare</span>(<span class="string">&quot;prim&quot;</span>) == <span class="number">0</span> ||</span><br><span class="line">        output_params.variable.<span class="built_in">compare</span>(<span class="string">&quot;vapor&quot;</span>) == <span class="number">0</span>) &#123;</span><br><span class="line">      pod = <span class="keyword">new</span> OutputData;</span><br><span class="line">      pod-&gt;type = <span class="string">&quot;VECTORS&quot;</span>;</span><br><span class="line">      pod-&gt;name = <span class="string">&quot;vapor&quot;</span>;</span><br><span class="line">      pod-&gt;data.<span class="built_in">InitWithShallowSlice</span>(phyd-&gt;w, <span class="number">4</span>, <span class="number">1</span>, NVAPOR);</span><br><span class="line">      <span class="built_in">AppendOutputDataNode</span>(pod);</span><br><span class="line">      num_vars_ += NVAPOR;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (output_params.variable.<span class="built_in">compare</span>(<span class="string">&quot;cons&quot;</span>) == <span class="number">0</span>) &#123;</span><br><span class="line">      pod = <span class="keyword">new</span> OutputData;</span><br><span class="line">      pod-&gt;type = <span class="string">&quot;VECTORS&quot;</span>;</span><br><span class="line">      pod-&gt;name = <span class="string">&quot;vapor&quot;</span>;</span><br><span class="line">      pod-&gt;data.<span class="built_in">InitWithShallowSlice</span>(phyd-&gt;u, <span class="number">4</span>, <span class="number">1</span>, NVAPOR);</span><br><span class="line">      <span class="built_in">AppendOutputDataNode</span>(pod);</span><br><span class="line">      num_vars_ += NVAPOR;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// radiation</span></span><br><span class="line">  <span class="keyword">if</span> (output_params.variable.<span class="built_in">compare</span>(<span class="string">&quot;rad&quot;</span>) == <span class="number">0</span> ||</span><br><span class="line">      output_params.variable.<span class="built_in">compare</span>(<span class="string">&quot;radtau&quot;</span>) == <span class="number">0</span>) &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> b = <span class="number">0</span>; b &lt; prad-&gt;<span class="built_in">GetNumBands</span>(); ++b) &#123;</span><br><span class="line">      <span class="keyword">auto</span> pband = prad-&gt;<span class="built_in">GetBand</span>(b);</span><br><span class="line">      <span class="comment">// tau</span></span><br><span class="line">      pod = <span class="keyword">new</span> OutputData;</span><br><span class="line">      pod-&gt;type = <span class="string">&quot;SCALARS&quot;</span>;</span><br><span class="line">      pod-&gt;name = pband-&gt;<span class="built_in">GetName</span>() + <span class="string">&quot;-tau&quot;</span>;</span><br><span class="line">      pod-&gt;data.<span class="built_in">InitWithShallowSlice</span>(pband-&gt;btau, <span class="number">4</span>, <span class="number">0</span>, <span class="number">1</span>);</span><br><span class="line">      <span class="built_in">AppendOutputDataNode</span>(pod);</span><br><span class="line">      num_vars_ += <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (output_params.variable.<span class="built_in">compare</span>(<span class="string">&quot;rad&quot;</span>) == <span class="number">0</span> ||</span><br><span class="line">      output_params.variable.<span class="built_in">compare</span>(<span class="string">&quot;radflux&quot;</span>) == <span class="number">0</span>) &#123;</span><br><span class="line">    <span class="comment">// flux up and down</span></span><br><span class="line">    pod = <span class="keyword">new</span> OutputData;</span><br><span class="line">    pod-&gt;type = <span class="string">&quot;SCALARS&quot;</span>;</span><br><span class="line">    pod-&gt;name = <span class="string">&quot;flxup&quot;</span>;</span><br><span class="line">    pod-&gt;data.<span class="built_in">InitWithShallowSlice</span>(prad-&gt;flxup, <span class="number">4</span>, <span class="number">0</span>, <span class="number">1</span>);</span><br><span class="line">    <span class="built_in">AppendOutputDataNode</span>(pod);</span><br><span class="line">    num_vars_ += <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    pod = <span class="keyword">new</span> OutputData;</span><br><span class="line">    pod-&gt;type = <span class="string">&quot;SCALARS&quot;</span>;</span><br><span class="line">    pod-&gt;name = <span class="string">&quot;flxdn&quot;</span>;</span><br><span class="line">    pod-&gt;data.<span class="built_in">InitWithShallowSlice</span>(prad-&gt;flxdn, <span class="number">4</span>, <span class="number">0</span>, <span class="number">1</span>);</span><br><span class="line">    <span class="built_in">AppendOutputDataNode</span>(pod);</span><br><span class="line">    num_vars_ += <span class="number">1</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (output_params.variable.<span class="built_in">compare</span>(<span class="string">&quot;rad&quot;</span>) == <span class="number">0</span> ||</span><br><span class="line">      output_params.variable.<span class="built_in">compare</span>(<span class="string">&quot;radtoa&quot;</span>) == <span class="number">0</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (prad-&gt;radiance.<span class="built_in">GetDim3</span>() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">      pod = <span class="keyword">new</span> OutputData;</span><br><span class="line">      pod-&gt;type = <span class="string">&quot;SCALARS&quot;</span>;</span><br><span class="line">      pod-&gt;name = <span class="string">&quot;radiance&quot;</span>;</span><br><span class="line">      pod-&gt;data.<span class="built_in">InitWithShallowSlice</span>(prad-&gt;radiance, <span class="number">4</span>, <span class="number">0</span>, <span class="number">1</span>);</span><br><span class="line">      <span class="built_in">AppendOutputDataNode</span>(pod);</span><br><span class="line">      num_vars_ += <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">      <span class="comment">// for (auto p : prad-&gt;bands) p-&gt;writeBinRadiance(&amp;output_params);</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">/* ..省略.. */</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>按照<output4>和<output5>中的设定，输出示例如下：</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">netcdf</span> <span class="string">juno_mwr.out4.00000</span> &#123;</span><br><span class="line"><span class="attr">dimensions:</span></span><br><span class="line"><span class="string">time</span> <span class="string">=</span> <span class="string">UNLIMITED</span> <span class="string">;</span> <span class="string">//</span> <span class="string">(1</span> <span class="string">currently)</span></span><br><span class="line"><span class="string">x1</span> <span class="string">=</span> <span class="number">1600</span> <span class="string">;</span></span><br><span class="line"><span class="string">x1f</span> <span class="string">=</span> <span class="number">1601</span> <span class="string">;</span></span><br><span class="line"><span class="string">x2</span> <span class="string">=</span> <span class="number">5</span> <span class="string">;</span></span><br><span class="line"><span class="string">x2f</span> <span class="string">=</span> <span class="number">6</span> <span class="string">;</span></span><br><span class="line"><span class="string">x3</span> <span class="string">=</span> <span class="number">1</span> <span class="string">;</span></span><br><span class="line"><span class="string">ray</span> <span class="string">=</span> <span class="number">24</span> <span class="string">;</span></span><br><span class="line"><span class="attr">variables:</span></span><br><span class="line"><span class="string">float</span> <span class="string">time(time)</span> <span class="string">;</span></span><br><span class="line"><span class="string">time:axis</span> <span class="string">=</span> <span class="string">&quot;T&quot;</span> <span class="string">;</span></span><br><span class="line"><span class="string">time:units</span> <span class="string">=</span> <span class="string">&quot;s&quot;</span> <span class="string">;</span></span><br><span class="line"><span class="string">time:long_name</span> <span class="string">=</span> <span class="string">&quot;time&quot;</span> <span class="string">;</span></span><br><span class="line"><span class="string">float</span> <span class="string">x1(x1)</span> <span class="string">;</span></span><br><span class="line"><span class="string">x1:axis</span> <span class="string">=</span> <span class="string">&quot;Z&quot;</span> <span class="string">;</span></span><br><span class="line"><span class="string">x1:units</span> <span class="string">=</span> <span class="string">&quot;m&quot;</span> <span class="string">;</span></span><br><span class="line"><span class="string">x1:long_name</span> <span class="string">=</span> <span class="string">&quot;Z-coordinate at cell center&quot;</span> <span class="string">;</span></span><br><span class="line"><span class="string">float</span> <span class="string">x1f(x1f)</span> <span class="string">;</span></span><br><span class="line"><span class="string">x1f:units</span> <span class="string">=</span> <span class="string">&quot;m&quot;</span> <span class="string">;</span></span><br><span class="line"><span class="string">x1f:long_name</span> <span class="string">=</span> <span class="string">&quot;Z-coordinate at cell face&quot;</span> <span class="string">;</span></span><br><span class="line"><span class="string">float</span> <span class="string">x2(x2)</span> <span class="string">;</span></span><br><span class="line"><span class="string">x2:axis</span> <span class="string">=</span> <span class="string">&quot;Y&quot;</span> <span class="string">;</span></span><br><span class="line"><span class="string">x2:units</span> <span class="string">=</span> <span class="string">&quot;m&quot;</span> <span class="string">;</span></span><br><span class="line"><span class="string">x2:long_name</span> <span class="string">=</span> <span class="string">&quot;Y-coordinate at cell center&quot;</span> <span class="string">;</span></span><br><span class="line"><span class="string">float</span> <span class="string">x2f(x2f)</span> <span class="string">;</span></span><br><span class="line"><span class="string">x2f:units</span> <span class="string">=</span> <span class="string">&quot;m&quot;</span> <span class="string">;</span></span><br><span class="line"><span class="string">x2f:long_name</span> <span class="string">=</span> <span class="string">&quot;Y-coordinate at cell face&quot;</span> <span class="string">;</span></span><br><span class="line"><span class="string">float</span> <span class="string">x3(x3)</span> <span class="string">;</span></span><br><span class="line"><span class="string">x3:axis</span> <span class="string">=</span> <span class="string">&quot;X&quot;</span> <span class="string">;</span></span><br><span class="line"><span class="string">x3:units</span> <span class="string">=</span> <span class="string">&quot;m&quot;</span> <span class="string">;</span></span><br><span class="line"><span class="string">x3:long_name</span> <span class="string">=</span> <span class="string">&quot;X-coordinate at cell center&quot;</span> <span class="string">;</span></span><br><span class="line"><span class="string">float</span> <span class="string">mu_out(ray)</span> <span class="string">;</span></span><br><span class="line"><span class="string">mu_out:units</span> <span class="string">=</span> <span class="string">&quot;1&quot;</span> <span class="string">;</span></span><br><span class="line"><span class="string">mu_out:long_name</span> <span class="string">=</span> <span class="string">&quot;cosine polar angle&quot;</span> <span class="string">;</span></span><br><span class="line"><span class="string">float</span> <span class="string">phi_out(ray)</span> <span class="string">;</span></span><br><span class="line"><span class="string">phi_out:units</span> <span class="string">=</span> <span class="string">&quot;rad&quot;</span> <span class="string">;</span></span><br><span class="line"><span class="string">phi_out:long_name</span> <span class="string">=</span> <span class="string">&quot;azimuthal angle&quot;</span> <span class="string">;</span></span><br><span class="line"><span class="string">float</span> <span class="string">radiance(time</span>, <span class="string">ray</span>, <span class="string">x2</span>, <span class="string">x3)</span> <span class="string">;</span></span><br><span class="line"><span class="string">radiance:units</span> <span class="string">=</span> <span class="string">&quot;K&quot;</span> <span class="string">;</span></span><br><span class="line"><span class="string">radiance:long_name</span> <span class="string">=</span> <span class="string">&quot;top-of-atmosphere radiance&quot;</span> <span class="string">;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="string">netcdf</span> <span class="string">juno_mwr.out5.00000</span> &#123;</span><br><span class="line"><span class="attr">dimensions:</span></span><br><span class="line"><span class="string">time</span> <span class="string">=</span> <span class="string">UNLIMITED</span> <span class="string">;</span> <span class="string">//</span> <span class="string">(1</span> <span class="string">currently)</span></span><br><span class="line"><span class="string">x1</span> <span class="string">=</span> <span class="number">1600</span> <span class="string">;</span></span><br><span class="line"><span class="string">x1f</span> <span class="string">=</span> <span class="number">1601</span> <span class="string">;</span></span><br><span class="line"><span class="string">x2</span> <span class="string">=</span> <span class="number">5</span> <span class="string">;</span></span><br><span class="line"><span class="string">x2f</span> <span class="string">=</span> <span class="number">6</span> <span class="string">;</span></span><br><span class="line"><span class="string">x3</span> <span class="string">=</span> <span class="number">1</span> <span class="string">;</span></span><br><span class="line"><span class="string">ray</span> <span class="string">=</span> <span class="number">24</span> <span class="string">;</span></span><br><span class="line"><span class="attr">variables:</span></span><br><span class="line"><span class="string">float</span> <span class="string">time(time)</span> <span class="string">;</span></span><br><span class="line"><span class="string">time:axis</span> <span class="string">=</span> <span class="string">&quot;T&quot;</span> <span class="string">;</span></span><br><span class="line"><span class="string">time:units</span> <span class="string">=</span> <span class="string">&quot;s&quot;</span> <span class="string">;</span></span><br><span class="line"><span class="string">time:long_name</span> <span class="string">=</span> <span class="string">&quot;time&quot;</span> <span class="string">;</span></span><br><span class="line"><span class="string">float</span> <span class="string">x1(x1)</span> <span class="string">;</span></span><br><span class="line"><span class="string">x1:axis</span> <span class="string">=</span> <span class="string">&quot;Z&quot;</span> <span class="string">;</span></span><br><span class="line"><span class="string">x1:units</span> <span class="string">=</span> <span class="string">&quot;m&quot;</span> <span class="string">;</span></span><br><span class="line"><span class="string">x1:long_name</span> <span class="string">=</span> <span class="string">&quot;Z-coordinate at cell center&quot;</span> <span class="string">;</span></span><br><span class="line"><span class="string">float</span> <span class="string">x1f(x1f)</span> <span class="string">;</span></span><br><span class="line"><span class="string">x1f:units</span> <span class="string">=</span> <span class="string">&quot;m&quot;</span> <span class="string">;</span></span><br><span class="line"><span class="string">x1f:long_name</span> <span class="string">=</span> <span class="string">&quot;Z-coordinate at cell face&quot;</span> <span class="string">;</span></span><br><span class="line"><span class="string">float</span> <span class="string">x2(x2)</span> <span class="string">;</span></span><br><span class="line"><span class="string">x2:axis</span> <span class="string">=</span> <span class="string">&quot;Y&quot;</span> <span class="string">;</span></span><br><span class="line"><span class="string">x2:units</span> <span class="string">=</span> <span class="string">&quot;m&quot;</span> <span class="string">;</span></span><br><span class="line"><span class="string">x2:long_name</span> <span class="string">=</span> <span class="string">&quot;Y-coordinate at cell center&quot;</span> <span class="string">;</span></span><br><span class="line"><span class="string">float</span> <span class="string">x2f(x2f)</span> <span class="string">;</span></span><br><span class="line"><span class="string">x2f:units</span> <span class="string">=</span> <span class="string">&quot;m&quot;</span> <span class="string">;</span></span><br><span class="line"><span class="string">x2f:long_name</span> <span class="string">=</span> <span class="string">&quot;Y-coordinate at cell face&quot;</span> <span class="string">;</span></span><br><span class="line"><span class="string">float</span> <span class="string">x3(x3)</span> <span class="string">;</span></span><br><span class="line"><span class="string">x3:axis</span> <span class="string">=</span> <span class="string">&quot;X&quot;</span> <span class="string">;</span></span><br><span class="line"><span class="string">x3:units</span> <span class="string">=</span> <span class="string">&quot;m&quot;</span> <span class="string">;</span></span><br><span class="line"><span class="string">x3:long_name</span> <span class="string">=</span> <span class="string">&quot;X-coordinate at cell center&quot;</span> <span class="string">;</span></span><br><span class="line"><span class="string">float</span> <span class="string">mu_out(ray)</span> <span class="string">;</span></span><br><span class="line"><span class="string">mu_out:units</span> <span class="string">=</span> <span class="string">&quot;1&quot;</span> <span class="string">;</span></span><br><span class="line"><span class="string">mu_out:long_name</span> <span class="string">=</span> <span class="string">&quot;cosine polar angle&quot;</span> <span class="string">;</span></span><br><span class="line"><span class="string">float</span> <span class="string">phi_out(ray)</span> <span class="string">;</span></span><br><span class="line"><span class="string">phi_out:units</span> <span class="string">=</span> <span class="string">&quot;rad&quot;</span> <span class="string">;</span></span><br><span class="line"><span class="string">phi_out:long_name</span> <span class="string">=</span> <span class="string">&quot;azimuthal angle&quot;</span> <span class="string">;</span></span><br><span class="line"><span class="string">float</span> <span class="string">CH1tau(time</span>, <span class="string">x1</span>, <span class="string">x2</span>, <span class="string">x3)</span> <span class="string">;</span></span><br><span class="line"><span class="string">CH1tau:units</span> <span class="string">=</span> <span class="string">&quot;1&quot;</span> <span class="string">;</span></span><br><span class="line"><span class="string">CH1tau:long_name</span> <span class="string">=</span> <span class="string">&quot;optical thickness&quot;</span> <span class="string">;</span></span><br><span class="line"><span class="string">float</span> <span class="string">CH2tau(time</span>, <span class="string">x1</span>, <span class="string">x2</span>, <span class="string">x3)</span> <span class="string">;</span></span><br><span class="line"><span class="string">CH2tau:units</span> <span class="string">=</span> <span class="string">&quot;1&quot;</span> <span class="string">;</span></span><br><span class="line"><span class="string">CH2tau:long_name</span> <span class="string">=</span> <span class="string">&quot;optical thickness&quot;</span> <span class="string">;</span></span><br><span class="line"><span class="string">float</span> <span class="string">CH3tau(time</span>, <span class="string">x1</span>, <span class="string">x2</span>, <span class="string">x3)</span> <span class="string">;</span></span><br><span class="line"><span class="string">CH3tau:units</span> <span class="string">=</span> <span class="string">&quot;1&quot;</span> <span class="string">;</span></span><br><span class="line"><span class="string">CH3tau:long_name</span> <span class="string">=</span> <span class="string">&quot;optical thickness&quot;</span> <span class="string">;</span></span><br><span class="line"><span class="string">float</span> <span class="string">CH4tau(time</span>, <span class="string">x1</span>, <span class="string">x2</span>, <span class="string">x3)</span> <span class="string">;</span></span><br><span class="line"><span class="string">CH4tau:units</span> <span class="string">=</span> <span class="string">&quot;1&quot;</span> <span class="string">;</span></span><br><span class="line"><span class="string">CH4tau:long_name</span> <span class="string">=</span> <span class="string">&quot;optical thickness&quot;</span> <span class="string">;</span></span><br><span class="line"><span class="string">float</span> <span class="string">CH5tau(time</span>, <span class="string">x1</span>, <span class="string">x2</span>, <span class="string">x3)</span> <span class="string">;</span></span><br><span class="line"><span class="string">CH5tau:units</span> <span class="string">=</span> <span class="string">&quot;1&quot;</span> <span class="string">;</span></span><br><span class="line"><span class="string">CH5tau:long_name</span> <span class="string">=</span> <span class="string">&quot;optical thickness&quot;</span> <span class="string">;</span></span><br><span class="line"><span class="string">float</span> <span class="string">CH6tau(time</span>, <span class="string">x1</span>, <span class="string">x2</span>, <span class="string">x3)</span> <span class="string">;</span></span><br><span class="line"><span class="string">CH6tau:units</span> <span class="string">=</span> <span class="string">&quot;1&quot;</span> <span class="string">;</span></span><br><span class="line"><span class="string">CH6tau:long_name</span> <span class="string">=</span> <span class="string">&quot;optical thickness&quot;</span> <span class="string">;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这些量的meta内容设定在 <code>canoe/src/outputs/output_utils.cpp</code>中</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">  table_ = &#123;// short name, long name, units, grid location</span><br><span class="line">            &#123;&quot;x1&quot;, &quot;height at cell center&quot;, &quot;m&quot;, &quot;--C&quot;&#125;,</span><br><span class="line">            &#123;&quot;x1f&quot;, &quot;height at cell boundary&quot;, &quot;m&quot;, &quot;--F&quot;&#125;,</span><br><span class="line">            &#123;&quot;x2&quot;, &quot;distance at cell center&quot;, &quot;m&quot;, &quot;-C-&quot;&#125;,</span><br><span class="line">            &#123;&quot;x2f&quot;, &quot;distance at cell boundary&quot;, &quot;m&quot;, &quot;-F-&quot;&#125;,</span><br><span class="line">            &#123;&quot;x3&quot;, &quot;distance at cell center&quot;, &quot;m&quot;, &quot;C--&quot;&#125;,</span><br><span class="line">            &#123;&quot;x3f&quot;, &quot;distance at cell boundary&quot;, &quot;m&quot;, &quot;F--&quot;&#125;,</span><br><span class="line">            &#123;&quot;rho&quot;, &quot;density&quot;, &quot;kg/m^3&quot;, &quot;CCC&quot;&#125;,</span><br><span class="line">            &#123;&quot;press&quot;, &quot;pressure&quot;, &quot;pa&quot;, &quot;CCC&quot;&#125;,</span><br><span class="line">            &#123;&quot;vel&quot;, &quot;velocity&quot;, &quot;m/s&quot;, &quot;CCC&quot;&#125;,</span><br><span class="line">            &#123;&quot;vapor&quot;, &quot;mass mixing ratio of vapor&quot;, &quot;kg/kg&quot;, &quot;CCC&quot;&#125;,</span><br><span class="line">            &#123;&quot;temp&quot;, &quot;temperature&quot;, &quot;K&quot;, &quot;CCC&quot;&#125;,</span><br><span class="line">            &#123;&quot;theta&quot;, &quot;potential temperature&quot;, &quot;K&quot;, &quot;CCC&quot;&#125;,</span><br><span class="line">            &#123;&quot;thetav&quot;, &quot;virtual potential temperature&quot;, &quot;K&quot;, &quot;CCC&quot;&#125;,</span><br><span class="line">            &#123;&quot;mse&quot;, &quot;moist static energy&quot;, &quot;J/kg&quot;, &quot;CCC&quot;&#125;,</span><br><span class="line">            &#123;&quot;rh1&quot;, &quot;relative humidity 1&quot;, &quot;1&quot;, &quot;CCC&quot;&#125;,</span><br><span class="line">            &#123;&quot;rh2&quot;, &quot;relative humidity 2&quot;, &quot;1&quot;, &quot;CCC&quot;&#125;,</span><br><span class="line">            &#123;&quot;eps&quot;, &quot;turbulent dissipation&quot;, &quot;w/kg&quot;, &quot;CCC&quot;&#125;,</span><br><span class="line">            &#123;&quot;tke&quot;, &quot;turbulent kinetic energy&quot;, &quot;J/kg&quot;, &quot;CCC&quot;&#125;,</span><br><span class="line">            &#123;&quot;mut&quot;, &quot;dynamic turbulent viscosity&quot;, &quot;kg/(m.s)&quot;, &quot;CCC&quot;&#125;,</span><br><span class="line">            &#123;&quot;radiance&quot;, &quot;top-of-atmosphere radiance&quot;, &quot;K&quot;, &quot;RCC&quot;&#125;&#125;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="User-defined-Output-Variable-UOV"><a href="#User-defined-Output-Variable-UOV" class="headerlink" title="User-defined Output Variable (UOV)"></a>User-defined Output Variable (UOV)</h2><p>在特定的模拟中，我们可能会需要输出我们关心的诊断量，但是往往其不再athena++或者Canoe的输出序列中，那么我们就需要使用UOV功能来注册和装填我们需要的诊断输出量了。<br>典型的例子有，温度，位温，虚温，湿静能等参数，不属于流体力学的诊断量，或者热力学模块的参数。<br><code>&lt;output3&gt;</code>就是对UOV变量的输出设定，使用了uov的关键字来表示我们有一些自定义的诊断量需要输出到<code>output3.nc</code>这个文件，步长为<code>dt</code>。<br>那么，Canoe(Athena++)通过覆盖MeshBlock类中的成员方法来进行UOV的注册：</p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">MeshBlock</span>&#123;</span><br><span class="line">  <span class="comment">//! defined in either the prob file or default_pgen.cpp in ../pgen/</span></span><br><span class="line">  <span class="function"><span class="type">void</span> <span class="title">UserWorkBeforeOutput</span><span class="params">(ParameterInput *pin)</span></span>; <span class="comment">// called in Mesh fn (friend class)</span></span><br><span class="line">  <span class="comment">//! defined in either the prob file or default_pgen.cpp in ../pgen/</span></span><br><span class="line">  <span class="function"><span class="type">void</span> <span class="title">ProblemGenerator</span><span class="params">(ParameterInput *pin)</span></span>;</span><br><span class="line">  <span class="function"><span class="type">void</span> <span class="title">InitUserMeshBlockData</span><span class="params">(ParameterInput *pin)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以理解为：</p><ul><li>MeshBlock::InitUserMeshBlockData：可以实现对UOV的注册；</li><li>MeshBlock::UserWorkBeforeOutput：计算输出量；</li><li>MeshBlock::ProblemGenerator：设置初始值条件。</li></ul><p>当然了，这几个函数的功能不仅限与这些。<br>default_pgen.cpp中没有对这三个函数做具体实现：</p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 4x members of MeshBlock class:</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//========================================================================================</span></span><br><span class="line"><span class="comment">//! \fn void MeshBlock::InitUserMeshBlockData(ParameterInput *pin)</span></span><br><span class="line"><span class="comment">//! \brief Function to initialize problem-specific data in MeshBlock class.  Can also be</span></span><br><span class="line"><span class="comment">//! used to initialize variables which are global to other functions in this file.</span></span><br><span class="line"><span class="comment">//! Called in MeshBlock constructor before ProblemGenerator.</span></span><br><span class="line"><span class="comment">//========================================================================================</span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> __attribute__((weak)) MeshBlock::<span class="built_in">InitUserMeshBlockData</span>(ParameterInput *pin) &#123;</span><br><span class="line">  <span class="comment">// do nothing</span></span><br><span class="line">  <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//========================================================================================</span></span><br><span class="line"><span class="comment">//! \fn void MeshBlock::ProblemGenerator(ParameterInput *pin)</span></span><br><span class="line"><span class="comment">//! \brief Should be used to set initial conditions.</span></span><br><span class="line"><span class="comment">//========================================================================================</span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> __attribute__((weak)) MeshBlock::<span class="built_in">ProblemGenerator</span>(ParameterInput *pin) &#123;</span><br><span class="line">  <span class="comment">// In practice, this function should *always* be replaced by a version</span></span><br><span class="line">  <span class="comment">// that sets the initial conditions for the problem of interest.</span></span><br><span class="line">  <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//===========================================================================</span></span><br><span class="line"><span class="comment">//! \fn void MeshBlock::UserWorkBeforeOutput(ParameterInput *pin)</span></span><br><span class="line"><span class="comment">//! \brief Function called before generating output files</span></span><br><span class="line"><span class="comment">//========================================================================================</span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> __attribute__((weak)) MeshBlock::<span class="built_in">UserWorkBeforeOutput</span>(ParameterInput *pin) &#123;</span><br><span class="line">  <span class="comment">// do nothing</span></span><br><span class="line">  <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>在模拟实际问题时，应该按需求对这三个成员函数进行实现，也就是本专栏中几个example主要实现的代码。</p><p>例如，Juno_MWR模拟中，UOV的设置和计算如下：</p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 注册输出量</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">MeshBlock::InitUserMeshBlockData</span><span class="params">(ParameterInput *pin)</span> </span>&#123;</span><br><span class="line">  <span class="built_in">AllocateUserOutputVariables</span>(<span class="number">4</span> + NVAPOR);</span><br><span class="line">  <span class="built_in">SetUserOutputVariableName</span>(<span class="number">0</span>, <span class="string">&quot;temp&quot;</span>);</span><br><span class="line">  <span class="built_in">SetUserOutputVariableName</span>(<span class="number">1</span>, <span class="string">&quot;theta&quot;</span>);</span><br><span class="line">  <span class="built_in">SetUserOutputVariableName</span>(<span class="number">2</span>, <span class="string">&quot;thetav&quot;</span>);</span><br><span class="line">  <span class="built_in">SetUserOutputVariableName</span>(<span class="number">3</span>, <span class="string">&quot;mse&quot;</span>);</span><br><span class="line">  <span class="keyword">for</span> (<span class="type">int</span> n = <span class="number">1</span>; n &lt;= NVAPOR; ++n) &#123;</span><br><span class="line">    std::string name = <span class="string">&quot;rh&quot;</span> + std::<span class="built_in">to_string</span>(n);</span><br><span class="line">    <span class="built_in">SetUserOutputVariableName</span>(<span class="number">3</span> + n, name.<span class="built_in">c_str</span>());</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//计算输出</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">MeshBlock::UserWorkBeforeOutput</span><span class="params">(ParameterInput *pin)</span> </span>&#123;</span><br><span class="line">  <span class="keyword">auto</span> pthermo = Thermodynamics::<span class="built_in">GetInstance</span>();</span><br><span class="line">  <span class="keyword">for</span> (<span class="type">int</span> k = ks; k &lt;= ke; ++k)</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> j = js; j &lt;= je; ++j)</span><br><span class="line">      <span class="keyword">for</span> (<span class="type">int</span> i = is; i &lt;= ie; ++i) &#123;</span><br><span class="line">        <span class="built_in">user_out_var</span>(<span class="number">0</span>, k, j, i) = pthermo-&gt;<span class="built_in">GetTemp</span>(<span class="keyword">this</span>, k, j, i);</span><br><span class="line">        <span class="built_in">user_out_var</span>(<span class="number">1</span>, k, j, i) = pthermo-&gt;<span class="built_in">PotentialTemp</span>(<span class="keyword">this</span>, P0, k, j, i);</span><br><span class="line">        <span class="comment">// theta_v</span></span><br><span class="line">        <span class="built_in">user_out_var</span>(<span class="number">2</span>, k, j, i) =</span><br><span class="line">            <span class="built_in">user_out_var</span>(<span class="number">1</span>, k, j, i) * pthermo-&gt;<span class="built_in">RovRd</span>(<span class="keyword">this</span>, k, j, i);</span><br><span class="line">        <span class="comment">// mse</span></span><br><span class="line">        <span class="built_in">user_out_var</span>(<span class="number">3</span>, k, j, i) =</span><br><span class="line">            pthermo-&gt;<span class="built_in">MoistStaticEnergy</span>(<span class="keyword">this</span>, grav * pcoord-&gt;<span class="built_in">x1v</span>(i), k, j, i);</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> n = <span class="number">1</span>; n &lt;= NVAPOR; ++n)</span><br><span class="line">          <span class="built_in">user_out_var</span>(<span class="number">3</span> + n, k, j, i) =</span><br><span class="line">              pthermo-&gt;<span class="built_in">RelativeHumidity</span>(<span class="keyword">this</span>, n, k, j, i);</span><br><span class="line">      &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>最终的输出文件meta如下：</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">netcdf</span> <span class="string">juno_mwr.out3.00000</span> &#123;</span><br><span class="line"><span class="attr">dimensions:</span></span><br><span class="line"><span class="string">time</span> <span class="string">=</span> <span class="string">UNLIMITED</span> <span class="string">;</span> <span class="string">//</span> <span class="string">(1</span> <span class="string">currently)</span></span><br><span class="line"><span class="string">x1</span> <span class="string">=</span> <span class="number">1600</span> <span class="string">;</span></span><br><span class="line"><span class="string">x1f</span> <span class="string">=</span> <span class="number">1601</span> <span class="string">;</span></span><br><span class="line"><span class="string">x2</span> <span class="string">=</span> <span class="number">5</span> <span class="string">;</span></span><br><span class="line"><span class="string">x2f</span> <span class="string">=</span> <span class="number">6</span> <span class="string">;</span></span><br><span class="line"><span class="string">x3</span> <span class="string">=</span> <span class="number">1</span> <span class="string">;</span></span><br><span class="line"><span class="string">ray</span> <span class="string">=</span> <span class="number">24</span> <span class="string">;</span></span><br><span class="line"><span class="attr">variables:</span></span><br><span class="line"><span class="string">float</span> <span class="string">time(time)</span> <span class="string">;</span></span><br><span class="line"><span class="string">time:axis</span> <span class="string">=</span> <span class="string">&quot;T&quot;</span> <span class="string">;</span></span><br><span class="line"><span class="string">time:units</span> <span class="string">=</span> <span class="string">&quot;s&quot;</span> <span class="string">;</span></span><br><span class="line"><span class="string">time:long_name</span> <span class="string">=</span> <span class="string">&quot;time&quot;</span> <span class="string">;</span></span><br><span class="line"><span class="string">float</span> <span class="string">x1(x1)</span> <span class="string">;</span></span><br><span class="line"><span class="string">x1:axis</span> <span class="string">=</span> <span class="string">&quot;Z&quot;</span> <span class="string">;</span></span><br><span class="line"><span class="string">x1:units</span> <span class="string">=</span> <span class="string">&quot;m&quot;</span> <span class="string">;</span></span><br><span class="line"><span class="string">x1:long_name</span> <span class="string">=</span> <span class="string">&quot;Z-coordinate at cell center&quot;</span> <span class="string">;</span></span><br><span class="line"><span class="string">float</span> <span class="string">x1f(x1f)</span> <span class="string">;</span></span><br><span class="line"><span class="string">x1f:units</span> <span class="string">=</span> <span class="string">&quot;m&quot;</span> <span class="string">;</span></span><br><span class="line"><span class="string">x1f:long_name</span> <span class="string">=</span> <span class="string">&quot;Z-coordinate at cell face&quot;</span> <span class="string">;</span></span><br><span class="line"><span class="string">float</span> <span class="string">x2(x2)</span> <span class="string">;</span></span><br><span class="line"><span class="string">x2:axis</span> <span class="string">=</span> <span class="string">&quot;Y&quot;</span> <span class="string">;</span></span><br><span class="line"><span class="string">x2:units</span> <span class="string">=</span> <span class="string">&quot;m&quot;</span> <span class="string">;</span></span><br><span class="line"><span class="string">x2:long_name</span> <span class="string">=</span> <span class="string">&quot;Y-coordinate at cell center&quot;</span> <span class="string">;</span></span><br><span class="line"><span class="string">float</span> <span class="string">x2f(x2f)</span> <span class="string">;</span></span><br><span class="line"><span class="string">x2f:units</span> <span class="string">=</span> <span class="string">&quot;m&quot;</span> <span class="string">;</span></span><br><span class="line"><span class="string">x2f:long_name</span> <span class="string">=</span> <span class="string">&quot;Y-coordinate at cell face&quot;</span> <span class="string">;</span></span><br><span class="line"><span class="string">float</span> <span class="string">x3(x3)</span> <span class="string">;</span></span><br><span class="line"><span class="string">x3:axis</span> <span class="string">=</span> <span class="string">&quot;X&quot;</span> <span class="string">;</span></span><br><span class="line"><span class="string">x3:units</span> <span class="string">=</span> <span class="string">&quot;m&quot;</span> <span class="string">;</span></span><br><span class="line"><span class="string">x3:long_name</span> <span class="string">=</span> <span class="string">&quot;X-coordinate at cell center&quot;</span> <span class="string">;</span></span><br><span class="line"><span class="string">float</span> <span class="string">mu_out(ray)</span> <span class="string">;</span></span><br><span class="line"><span class="string">mu_out:units</span> <span class="string">=</span> <span class="string">&quot;1&quot;</span> <span class="string">;</span></span><br><span class="line"><span class="string">mu_out:long_name</span> <span class="string">=</span> <span class="string">&quot;cosine polar angle&quot;</span> <span class="string">;</span></span><br><span class="line"><span class="string">float</span> <span class="string">phi_out(ray)</span> <span class="string">;</span></span><br><span class="line"><span class="string">phi_out:units</span> <span class="string">=</span> <span class="string">&quot;rad&quot;</span> <span class="string">;</span></span><br><span class="line"><span class="string">phi_out:long_name</span> <span class="string">=</span> <span class="string">&quot;azimuthal angle&quot;</span> <span class="string">;</span></span><br><span class="line"><span class="string">float</span> <span class="string">temp(time</span>, <span class="string">x1</span>, <span class="string">x2</span>, <span class="string">x3)</span> <span class="string">;</span></span><br><span class="line"><span class="string">temp:units</span> <span class="string">=</span> <span class="string">&quot;K&quot;</span> <span class="string">;</span></span><br><span class="line"><span class="string">temp:long_name</span> <span class="string">=</span> <span class="string">&quot;temperature&quot;</span> <span class="string">;</span></span><br><span class="line"><span class="string">float</span> <span class="string">theta(time</span>, <span class="string">x1</span>, <span class="string">x2</span>, <span class="string">x3)</span> <span class="string">;</span></span><br><span class="line"><span class="string">theta:units</span> <span class="string">=</span> <span class="string">&quot;K&quot;</span> <span class="string">;</span></span><br><span class="line"><span class="string">theta:long_name</span> <span class="string">=</span> <span class="string">&quot;potential temperature&quot;</span> <span class="string">;</span></span><br><span class="line"><span class="string">float</span> <span class="string">thetav(time</span>, <span class="string">x1</span>, <span class="string">x2</span>, <span class="string">x3)</span> <span class="string">;</span></span><br><span class="line"><span class="string">thetav:units</span> <span class="string">=</span> <span class="string">&quot;K&quot;</span> <span class="string">;</span></span><br><span class="line"><span class="string">thetav:long_name</span> <span class="string">=</span> <span class="string">&quot;virtual potential temperature&quot;</span> <span class="string">;</span></span><br><span class="line"><span class="string">float</span> <span class="string">mse(time</span>, <span class="string">x1</span>, <span class="string">x2</span>, <span class="string">x3)</span> <span class="string">;</span></span><br><span class="line"><span class="string">mse:units</span> <span class="string">=</span> <span class="string">&quot;J/kg&quot;</span> <span class="string">;</span></span><br><span class="line"><span class="string">mse:long_name</span> <span class="string">=</span> <span class="string">&quot;moist static energy&quot;</span> <span class="string">;</span></span><br><span class="line"><span class="string">float</span> <span class="string">rh1(time</span>, <span class="string">x1</span>, <span class="string">x2</span>, <span class="string">x3)</span> <span class="string">;</span></span><br><span class="line"><span class="string">rh1:units</span> <span class="string">=</span> <span class="string">&quot;1&quot;</span> <span class="string">;</span></span><br><span class="line"><span class="string">rh1:long_name</span> <span class="string">=</span> <span class="string">&quot;relative humidity 1&quot;</span> <span class="string">;</span></span><br><span class="line"><span class="string">float</span> <span class="string">rh2(time</span>, <span class="string">x1</span>, <span class="string">x2</span>, <span class="string">x3)</span> <span class="string">;</span></span><br><span class="line"><span class="string">rh2:units</span> <span class="string">=</span> <span class="string">&quot;1&quot;</span> <span class="string">;</span></span><br><span class="line"><span class="string">rh2:long_name</span> <span class="string">=</span> <span class="string">&quot;relative humidity 2&quot;</span> <span class="string">;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Research </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Canoe </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Canoe Basis：Markov Chain Mont Carlo</title>
      <link href="/blog/research/canoe-athena/canoe-basis-mcmc/"/>
      <url>/blog/research/canoe-athena/canoe-basis-mcmc/</url>
      
        <content type="html"><![CDATA[<h2 id="MCMC方法"><a href="#MCMC方法" class="headerlink" title="MCMC方法"></a>MCMC方法</h2><h3 id="贝叶斯统计学基础"><a href="#贝叶斯统计学基础" class="headerlink" title="贝叶斯统计学基础"></a>贝叶斯统计学基础</h3><p>在贝叶斯统计学中，我们试图估计未知参数（用 θ 表示），给定观测到的数据（用 D 表示）。这个过程涉及到两个主要的概率分布：</p><ol><li><p><strong>先验分布（Prior Distribution）</strong>：表示在观测到任何数据之前我们对参数的信仰。通常用 P(θ) 表示。</p></li><li><p><strong>似然函数（Likelihood Function）</strong>：表示给定参数情况下观测到数据的概率。通常用 P(D|θ) 表示。</p></li></ol><p>这两者结合起来构成了贝叶斯定理：</p><p>\begin{equation*} P(θ|D) &#x3D; \frac{P(D|θ) \cdot P(θ)}{P(D)} \end{equation*}</p><p>其中，</p><ul><li>$P(θ|D)$ 是后验概率，即在观测到数据后参数的概率分布；</li><li>$P(D|θ)$ 是似然函数；</li><li>$P(θ)$ 是先验概率；</li><li>$P(D)$ 是数据的边际概率，也就是在所有可能的参数下观测到这个数据的概率。</li></ul><hr><h3 id="马尔可夫链"><a href="#马尔可夫链" class="headerlink" title="马尔可夫链"></a>马尔可夫链</h3><p><strong>马尔可夫链</strong> 是一种随机过程，根据一定的概率规则在一系列状态之间进行转移。马尔可夫链的定义特征是<strong>马尔可夫性质</strong>，即未来状态只依赖于当前状态，而不依赖于先前事件的序列。这是一个重要的性质，因为MCMC利用了这个性质来构建一个接受-拒绝的采样算法。<br>马尔可夫链广泛应用于物理学、经济学、计算机科学和生物学等领域，用于建模表现出无记忆性的随机过程和系统。</p><h4 id="矩阵表示"><a href="#矩阵表示" class="headerlink" title="矩阵表示"></a>矩阵表示</h4><p>马尔可夫链的演变可以使用<strong>转移概率矩阵</strong>进行简洁的表示。假设我们的马尔可夫链有 $N$ 个状态，从状态 $i$ 转移到状态 $j$ 的概率记为 $P_{ij}$。转移概率矩阵 $P$ 则表示为：<br>$$<br>\begin{align*}<br> P &#x3D;<br> \begin{bmatrix}<br> P_{11} &amp; P_{12} &amp; \cdots &amp; P_{1N} \\<br> P_{21} &amp; P_{22} &amp; \cdots &amp; P_{2N} \\<br> \vdots &amp; \vdots &amp; \ddots &amp; \vdots \\<br> P_{N1} &amp; P_{N2} &amp; \cdots &amp; P_{NN}<br> \end{bmatrix}<br>\end{align*}<br>$$<br>这里，每一行代表当前状态，每一列代表下一个状态。元素 $P_{ij}$ 表示从状态 $i$ 转移到状态 $j$ 的概率。</p><p><img src="/blog/research/canoe-athena/canoe-basis-mcmc/markov-chain-nature.jpg" alt="[图片来源:【Nature Methods】Markov models—Markov chains](https://www.nature.com/articles/s41592-019-0476-x)"></p><h4 id="精细平衡和守恒条件"><a href="#精细平衡和守恒条件" class="headerlink" title="精细平衡和守恒条件"></a>精细平衡和守恒条件</h4><p>为了使马尔可夫链达到<strong>稳态分布</strong>（随时间不变的分布），通常需要满足**详细平衡(detailed balance)**条件。</p><ul><li>精细平衡：</li></ul><p>若对于所有状态 $i$ 和 $j$，以下方程成立，则马尔可夫链满足详细平衡：</p><p>  \begin{equation*} \pi_i \cdot P_{ij} &#x3D; \pi_j \cdot P_{ji} \end{equation*}</p><p>这里，$ \pi_i$ 表示处于状态 $i$ 的稳态概率。详细平衡确保链处于平衡状态，概率不会在一个方向上累积。</p><ul><li>守恒条件：</li></ul><ol><li><p><strong>不可约性</strong>：若在有限步内可以从任一状态到达任何其他状态，则马尔可夫链是不可约的。这确保没有孤立的状态集。</p></li><li><p><strong>非周期性</strong>：若转移没有固定的模式，则马尔可夫链是非周期的。这意味着链不会陷入循环，所有状态都有可能在任何时刻被重新访问。</p></li></ol><p>满足这些条件确保了马尔可夫链的长期行为收敛到唯一的稳态分布。</p><p>总结而言，马尔可夫链是一个数学模型，描述系统通过一系列状态的转移概率。转移过程通常用转移概率矩阵表示，详细平衡条件确保存在一个稳态分布。不可约性和非周期性是链收敛到稳态分布的重要性质。</p><hr><h3 id="Metropolis-Hastings-算法"><a href="#Metropolis-Hastings-算法" class="headerlink" title="Metropolis-Hastings 算法"></a>Metropolis-Hastings 算法</h3><p>Metropolis-Hastings 算法是一种基于马尔可夫链的 MCMC 抽样方法，它通过接受-拒绝的机制在参数空间中游走，从而生成参数的后验分布的样本。</p><h4 id="算法步骤："><a href="#算法步骤：" class="headerlink" title="算法步骤："></a>算法步骤：</h4><ol><li><p><strong>初始化</strong>：选择初始参数值 $θ_0$。</p></li><li><p><strong>提议分布（Proposal Distribution）</strong>：选择一个用于提议新参数值的分布，通常表示为 $q(θ’|\theta)$。</p></li><li><p><strong>迭代</strong>：对于每个迭代 $t$，重复以下步骤：</p><p> a. 从提议分布中抽取一个候选参数值 $θ’$。</p><p> b. 计算接受比率（Acceptance Ratio）：<br> \begin{equation*} r &#x3D; \frac{P(θ’ | D)}{P(θ_t | D)} \cdot \frac{q(θ_t | θ’)}{q(θ’ | θ_t)} \end{equation*}</p><p> c. 以概率 $\min(r, 1)$ 接受候选参数值：<br> \begin{equation*} θ_{t+1} &#x3D; \begin{cases} θ’ &amp; \text{with probability } \min(r, 1) \\ θ_t &amp; \text{with probability } 1 - \min(r, 1) \end{cases} \end{equation*}</p></li><li><p>重复步骤 3 直到获得足够的样本。</p></li></ol><h4 id="统计学基础："><a href="#统计学基础：" class="headerlink" title="统计学基础："></a>统计学基础：</h4><ul><li><p><strong>接受率（Acceptance Rate）</strong>：表示接受候选参数值的比率。合适的接受率通常在 0.2 到 0.5 之间。</p></li><li><p><strong>遍历性（Ergodicity）</strong>：Metropolis-Hastings 算法需要保证马尔可夫链是遍历的，即在足够的迭代次数后，任何状态都有可能被访问。</p></li><li><p><strong>平稳性（Stationarity）</strong>：Metropolis-Hastings 算法在达到平稳状态后生成的样本服从目标后验分布。</p></li><li><p><strong>收敛性（Convergence）</strong>：检查算法是否收敛到目标分布。一种常见的方法是通过观察连续的样本来检查参数估计值是否趋于稳定。</p></li><li><p><strong>Burn-in 阶段</strong>：初始迭代可能由于初始参数的选择而不够准确，因此可能需要丢弃一些初始样本（称为 Burn-in 阶段）。</p></li></ul><p>请注意，以上的方程和描述是对 MCMC 的高层次概括，实际应用中需要根据具体问题进行调整和细化。</p><hr><h2 id="MCMC采样器"><a href="#MCMC采样器" class="headerlink" title="MCMC采样器"></a>MCMC采样器</h2><p>下面是一个使用Metropolis-Hastings MCMC方案实现符合给定概率分布样本抽样的C++一般结构：</p><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstdlib&gt;</span>   <span class="comment">// For rand() and RAND_MAX</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cmath&gt;</span>     <span class="comment">// For exp()</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Abstract likelihood function</span></span><br><span class="line"><span class="function"><span class="type">double</span> <span class="title">likelihood</span><span class="params">(<span class="type">const</span> std::vector&lt;<span class="type">double</span>&gt;&amp; data, <span class="type">const</span> std::vector&lt;<span class="type">double</span>&gt;&amp; parameters)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// Calculate the likelihood of the data given the parameters</span></span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Abstract prior function</span></span><br><span class="line"><span class="function"><span class="type">double</span> <span class="title">prior</span><span class="params">(<span class="type">const</span> std::vector&lt;<span class="type">double</span>&gt;&amp; parameters)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// Calculate the prior probability of the parameters</span></span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Abstract posterior function</span></span><br><span class="line"><span class="function"><span class="type">double</span> <span class="title">posterior</span><span class="params">(<span class="type">const</span> std::vector&lt;<span class="type">double</span>&gt;&amp; data, <span class="type">const</span> std::vector&lt;<span class="type">double</span>&gt;&amp; parameters)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// Calculate the posterior probability of the parameters</span></span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">likelihood</span>(data, parameters) * <span class="built_in">prior</span>(parameters);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Abstract proposal function</span></span><br><span class="line"><span class="function">std::vector&lt;<span class="type">double</span>&gt; <span class="title">proposeNewParameters</span><span class="params">(<span class="type">const</span> std::vector&lt;<span class="type">double</span>&gt;&amp; currentParameters)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// Propose new parameters from a proposal distribution</span></span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Abstract Metropolis-Hastings MCMC function</span></span><br><span class="line">std::vector&lt;std::vector&lt;<span class="type">double</span>&gt;&gt; <span class="built_in">metropolisHastings</span>(<span class="type">const</span> std::vector&lt;<span class="type">double</span>&gt;&amp; data,</span><br><span class="line">                                                    <span class="type">const</span> std::vector&lt;<span class="type">double</span>&gt;&amp; initialParameters,</span><br><span class="line">                                                    <span class="type">int</span> numIterations) &#123;</span><br><span class="line">    std::vector&lt;<span class="type">double</span>&gt; currentParameters = initialParameters;</span><br><span class="line">    std::vector&lt;std::vector&lt;<span class="type">double</span>&gt;&gt; samples;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; numIterations; ++i) &#123;</span><br><span class="line">        <span class="comment">// Propose new parameters from a proposal distribution</span></span><br><span class="line">        std::vector&lt;<span class="type">double</span>&gt; proposedParameters = <span class="built_in">proposeNewParameters</span>(currentParameters);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Compute acceptance ratio</span></span><br><span class="line">        <span class="type">double</span> acceptanceRatio = std::<span class="built_in">min</span>(<span class="number">1.0</span>, <span class="built_in">posterior</span>(data, proposedParameters) / <span class="built_in">posterior</span>(data, currentParameters));</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Accept or reject the proposed parameters</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">static_cast</span>&lt;<span class="type">double</span>&gt;(<span class="built_in">rand</span>()) / RAND_MAX &lt; acceptanceRatio) &#123;</span><br><span class="line">            currentParameters = proposedParameters;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Record samples</span></span><br><span class="line">        samples.<span class="built_in">push_back</span>(currentParameters);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> samples;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">// Example usage</span></span><br><span class="line">    std::vector&lt;<span class="type">double</span>&gt; data = &#123; <span class="comment">/* ... your observed data ... */</span> &#125;;</span><br><span class="line">    std::vector&lt;<span class="type">double</span>&gt; initialParameters = &#123; <span class="comment">/* ... initial guess for parameters ... */</span> &#125;;</span><br><span class="line">    <span class="type">int</span> numIterations = <span class="comment">/* ... number of MCMC iterations ... */</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Run MCMC</span></span><br><span class="line">    std::vector&lt;std::vector&lt;<span class="type">double</span>&gt;&gt; samples = <span class="built_in">metropolisHastings</span>(data, initialParameters, numIterations);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Analyze and interpret the samples to obtain parameter estimates</span></span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="MCMC参数反演"><a href="#MCMC参数反演" class="headerlink" title="MCMC参数反演"></a>MCMC参数反演</h2><p><strong>问题描述</strong>：现有大气层顶（TOA）的微波亮温观测 $TB_{obs}$ 和辐射传输模型，可以使用{Temperature，RelativeHumidity}等参数来模拟TOA亮温 $TB_{simu}$ 。请使用MCMC方法，根据现有观测和模式，进行大气双参数的反演</p><p>从大气层顶部 (TOA) 亮度温度观测中检索温度和相对湿度等大气参数涉及一个复杂的过程，通常需要马尔可夫链蒙特卡罗 (MCMC) 等复杂方法。下面是使用通用抽象语言的简化示例。请注意，实际实现可能会根据您的问题的具体细节而有所不同，并且您可能需要根据您的需求调整代码。</p><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;random&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Function to simulate TOA brightness temperature based on atmospheric parameters</span></span><br><span class="line"><span class="function"><span class="type">double</span> <span class="title">simulateTOA</span><span class="params">(<span class="type">const</span> <span class="type">double</span> temperature, <span class="type">const</span> <span class="type">double</span> relativeHumidity)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// Your forward model implementation goes here</span></span><br><span class="line">    <span class="comment">// This is a simplified example; replace it with your actual forward model</span></span><br><span class="line">    <span class="type">double</span> simulatedTB = temperature + relativeHumidity + <span class="number">0.1</span> * <span class="built_in">rand</span>() / RAND_MAX;</span><br><span class="line">    <span class="keyword">return</span> simulatedTB;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Function to calculate the likelihood of observed TOA brightness temperature given simulated TOA brightness temperature</span></span><br><span class="line"><span class="function"><span class="type">double</span> <span class="title">likelihood</span><span class="params">(<span class="type">const</span> <span class="type">double</span> obsTB, <span class="type">const</span> <span class="type">double</span> simuTB, <span class="type">const</span> <span class="type">double</span> sigma)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// Assuming a simple Gaussian likelihood function</span></span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">exp</span>(-(obsTB - simuTB) * (obsTB - simuTB) / (<span class="number">2</span> * sigma * sigma));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Function to perform Metropolis-Hastings MCMC</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">MCMC</span><span class="params">(<span class="type">const</span> std::vector&lt;<span class="type">double</span>&gt;&amp; obsTB, <span class="type">double</span>&amp; estimatedTemperature, <span class="type">double</span>&amp; estimatedRH)</span> </span>&#123;</span><br><span class="line">    <span class="type">const</span> <span class="type">int</span> iterations = <span class="number">10000</span>;</span><br><span class="line">    <span class="type">const</span> <span class="type">double</span> proposalSigma = <span class="number">0.1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Initialize parameters</span></span><br><span class="line">    <span class="type">double</span> currentTemperature = <span class="number">288.0</span>; <span class="comment">// Initial guess for temperature</span></span><br><span class="line">    <span class="type">double</span> currentRH = <span class="number">0.5</span>; <span class="comment">// Initial guess for relative humidity</span></span><br><span class="line"></span><br><span class="line">    std::random_device rd;</span><br><span class="line">    <span class="function">std::mt19937 <span class="title">gen</span><span class="params">(rd())</span></span>;</span><br><span class="line">    <span class="function">std::uniform_real_distribution&lt;<span class="type">double</span>&gt; <span class="title">uniformDist</span><span class="params">(<span class="number">0.0</span>, <span class="number">1.0</span>)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; iterations; ++i) &#123;</span><br><span class="line">        <span class="comment">// Propose new parameters</span></span><br><span class="line">        <span class="type">double</span> proposedTemperature = currentTemperature + proposalSigma * (<span class="number">2</span> * <span class="built_in">uniformDist</span>(gen) - <span class="number">1</span>);</span><br><span class="line">        <span class="type">double</span> proposedRH = currentRH + proposalSigma * (<span class="number">2</span> * <span class="built_in">uniformDist</span>(gen) - <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Simulate TOA brightness temperature with proposed parameters</span></span><br><span class="line">        <span class="type">double</span> simuTB = <span class="built_in">simulateTOA</span>(proposedTemperature, proposedRH);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Calculate likelihoods</span></span><br><span class="line">        <span class="type">double</span> likelihoodCurrent = <span class="number">1.0</span>;</span><br><span class="line">        <span class="type">double</span> likelihoodProposed = <span class="number">1.0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">size_t</span> j = <span class="number">0</span>; j &lt; obsTB.<span class="built_in">size</span>(); ++j) &#123;</span><br><span class="line">            likelihoodCurrent *= <span class="built_in">likelihood</span>(obsTB[j], <span class="built_in">simulateTOA</span>(currentTemperature, currentRH), <span class="number">0.1</span>);</span><br><span class="line">            likelihoodProposed *= <span class="built_in">likelihood</span>(obsTB[j], simuTB, <span class="number">0.1</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Accept or reject the proposed parameters</span></span><br><span class="line">        <span class="type">double</span> acceptanceRatio = likelihoodProposed / likelihoodCurrent;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">uniformDist</span>(gen) &lt; acceptanceRatio) &#123;</span><br><span class="line">            currentTemperature = proposedTemperature;</span><br><span class="line">            currentRH = proposedRH;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Set the estimated values</span></span><br><span class="line">    estimatedTemperature = currentTemperature;</span><br><span class="line">    estimatedRH = currentRH;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">// Example usage</span></span><br><span class="line">    std::vector&lt;<span class="type">double</span>&gt; observedTOA = &#123;<span class="number">288.1</span>, <span class="number">288.2</span>, <span class="number">287.8</span>&#125;; <span class="comment">// Replace with your actual observed TOA brightness temperatures</span></span><br><span class="line"></span><br><span class="line">    <span class="type">double</span> estimatedTemperature, estimatedRH;</span><br><span class="line">    <span class="built_in">MCMC</span>(observedTOA, estimatedTemperature, estimatedRH);</span><br><span class="line"></span><br><span class="line">    std::cout &lt;&lt; <span class="string">&quot;Estimated Temperature: &quot;</span> &lt;&lt; estimatedTemperature &lt;&lt; std::endl;</span><br><span class="line">    std::cout &lt;&lt; <span class="string">&quot;Estimated Relative Humidity: &quot;</span> &lt;&lt; estimatedRH &lt;&lt; std::endl;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>此示例使用带有高斯似然函数的简单 Metropolis-Hastings MCMC 算法。将函数替换simulateTOA为您的实际正向模型。此外，根据问题的特征调整似然函数和其他参数。</p><h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><ol><li><p>如何形象地理解MCMC方法walker过程探索概率分布？</p><div class="note primary no-icon flat"><p>为了形象地理解马尔可夫链蒙特卡洛（MCMC）方法中的”walk”过程是如何构建概率分布的，我们可以想象在参数空间中漫步的过程。以下是一个简单的比喻：</p><p><strong>比喻</strong><br>想象你身处一个大草原，你的目标是找到一个藏宝点（概率分布的峰值），而你对草原的地形一无所知。你手里有一张地图，但是地图只显示你当前所在位置的周围区域。</p><p>步骤:<strong>1.初始位置</strong></p><ul><li><p>你从草原的某个位置开始，这是你的初始猜测。<br><strong>2. 漫步过程</strong></p></li><li><p>你开始漫步，每一步都是在当前位置的基础上随机选择一个方向走。</p></li><li><p>每一步的大小和方向都是根据一个特定的规则（转移概率分布）确定的，这就是马尔可夫链的特性。<br><strong>3. 接受或拒绝</strong></p></li><li><p>到达一个新位置后，你会考虑这个新位置相比于当前位置的好坏（通过目标概率分布来评估）。<br>如果新位置更有利于找到藏宝点，你会接受这个新位置，否则你可能以一定概率拒绝它。</p></li><li><p>这一步保证了在参数空间中朝着更有可能找到藏宝点的方向前进。<br><strong>4. 反复迭代</strong></p></li><li><p>你反复执行上述步骤，每一步都根据当前位置和转移概率分布进行更新。</p></li><li><p>随着漫步的进行，你的位置逐渐集中在藏宝点附近，这就是MCMC方法构建概率分布的过程。</p></li></ul><p>关键点:</p><ol><li><p>漫步的起始点：初始位置通常是在参数空间中随机选择的，代表了对概率分布的初始猜测。</p></li><li><p>转移概率分布：决定了每一步漫步的方向和大小，是马尔可夫链的关键。</p></li><li><p>目标概率分布：用于评估新位置的好坏，通常是我们希望找到的概率分布。</p></li><li><p>接受或拒绝规则：<strong>确保朝着概率分布的峰值前进，而不是陷入局部最小值</strong>。</p></li></ol><p>通过这个比喻，你可以想象在参数空间中通过随机漫步的过程中，逐渐找到概率分布的峰值，这就是MCMC方法的核心思想。这种随机漫步的方式使得我们能够探索整个参数空间，而不仅仅是依赖于确定性的搜索方法。</p></div></li><li><p>新位置不好的情况下，我为什么还要有一定概率接受它呢？这是为了满足什么条件  </p><div class="note primary no-icon flat"><p>接受新位置的概率是为了确保马尔可夫链蒙特卡洛（MCMC）方法在参数空间中能够全面地探索，而不会陷入局部最小值或局部最大值。这涉及到MCMC方法中的一个重要概念，即<strong>Metropolis-Hastings算法</strong>，其中包含了接受或拒绝的机制，以满足精细平衡条件。</p><p>在MCMC方法中，我们希望构建一个马尔可夫链，使其平稳分布（稳态分布）与我们想要采样的目标概率分布一致。这就是精细平衡条件，具体表达为：<br>$$<br>\begin{align}<br>\pi(x) \cdot T(x \rightarrow x’) &#x3D; \pi(x’) \cdot T(x’ \rightarrow x)<br>\end{align}<br>$$<br>其中，</p><ul><li>$\pi(x)$ 是我们想要采样的目标概率分布。</li><li>$T(x \rightarrow x’)$ 为从 $x$ 状态到 $x’$ 状态地转移概率。</li></ul><p>Metropolis-Hastings算法是一种基于精细平衡条件的MCMC抽样方法，接受或拒绝：以概率min(r,1) 接受新状态，否则维持在当前状态。这保证了在新状态较好时接受，而在新状态较差时以一定概率也接受，以便在整个参数空间中进行探索。<br>通过这个机制，即使新状态相对较差，也有一定的概率接受它。<strong>这是为了确保全局探索，从而不会被困在局部最小值或局部最大值</strong>。在长时间运行中，Metropolis-Hastings算法使得马尔可夫链趋向于平稳分布，即目标概率分布。</p></div></li><li><p>如何理解精细平衡？</p><div class="note primary no-icon flat"><p>精细平衡条件确保了在平稳状态下，系统中的每一对状态之间的转移速率（或概率）是相等的。换句话说，系统在这些状态之间保持平衡，不会有<strong>概率流</strong>向一个方向而不是另一个方向。</p></div></li><li><p>电子能级跃迁的精细平衡</p><div class="note primary no-icon flat"><p>考虑一个原子系统，其中有两个能级：基态 $E_1$ 和激发态 $E_2$ 。电子可以从基态跃迁到激发态，也可以从激发态返回基态。这些跃迁过程可以通过发射或吸收光子来实现。</p><p>精细平衡条件<br>精细平衡条件要求在平稳状态下，电子从基态到激发态的跃迁速率与电子从激发态返回基态的跃迁速率之间存在平衡。具体表达为：<br>$$<br>N_1 \cdot A_{12} &#x3D; N_2 \cdot A_{21}<br>$$</p><p>其中，</p><ul><li>$N_1$ 和 $N_2$ 分别是基态和激发态的电子数。</li><li>$A_{12}$ 是从基态到激发态的跃迁速率。</li><li>$A_{21}$ 是从激发态返回基态的跃迁速率。<br>在这个过程中，光子的吸收和发射实际上是驱动电子能级之间跃迁的过程。如果精细平衡条件得到满足，系统将达到一个稳定的状态，其中电子数在不同能级之间保持平衡。<br>也就是说，就算激发态的电子很少（激发概率小），但也是有一定概率跃迁到激发状态的，如果这部分概率被忽略了，两个状态的电子数目就无法达到平衡。</li></ul></div></li><li><p>Why and how to use <code>logprob</code> in MCMC reference?</p><div class="note primary no-icon flat"><h3 id="数值稳定性："><a href="#数值稳定性：" class="headerlink" title="数值稳定性："></a>数值稳定性：</h3><ol><li><p><strong>避免下溢：</strong></p><ul><li>概率可以非常小，特别是在处理连续数据或高维参数空间时。</li><li>许多小概率相乘可能导致数值下溢，即值变得太小以至于计算机无法准确表示。</li></ul></li><li><p><strong>对数变换：</strong></p><ul><li>取概率的对数将乘法操作转换为加法操作。</li><li>对数变换有助于防止数值下溢，使计算更稳定。</li></ul></li></ol><h3 id="简化计算："><a href="#简化计算：" class="headerlink" title="简化计算："></a>简化计算：</h3><ol start="3"><li><p><strong>加法代替乘法：</strong></p><ul><li>在MCMC中，计算通常涉及乘以似然和先验概率。</li><li>取对数将这些乘积转换为和，简化了计算。</li></ul></li><li><p><strong>在对数空间中的求和：</strong></p><ul><li>在计算后验概率时，以对数空间工作允许有效地进行求和而不是乘法。</li></ul></li></ol><h3 id="MCMC算法："><a href="#MCMC算法：" class="headerlink" title="MCMC算法："></a>MCMC算法：</h3><ol start="5"><li><strong>提案接受概率：</strong><ul><li>MCMC算法涉及提出新的参数值，并根据接受概率接受或拒绝这些提议。</li><li>这个接受概率通常用后验概率的比率来表示，其中涉及对数概率。</li></ul></li></ol><h3 id="示例伪代码："><a href="#示例伪代码：" class="headerlink" title="示例伪代码："></a>示例伪代码：</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 计算对数似然和对数先验</span></span><br><span class="line">log_likelihood = calculate_log_likelihood(parameters, data)</span><br><span class="line">log_prior = calculate_log_prior(parameters)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 合并成对数后验</span></span><br><span class="line">log_posterior = log_likelihood + log_prior</span><br><span class="line"></span><br><span class="line"><span class="comment"># 在MCMC提议步骤中，使用对数概率计算接受比率</span></span><br><span class="line">acceptance_ratio = <span class="built_in">min</span>(<span class="number">1</span>, exp(log_posterior - current_log_posterior))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果提议被接受，则用提议状态更新当前状态</span></span><br><span class="line"><span class="keyword">if</span> random_uniform(<span class="number">0</span>, <span class="number">1</span>) &lt; acceptance_ratio:</span><br><span class="line">    current_parameters = proposed_parameters</span><br><span class="line">    current_log_posterior = log_posterior</span><br><span class="line"></span><br><span class="line">    </span><br></pre></td></tr></table></figure></div></li></ol><p>最后附上成哥给我上课的白板：<br><img src="https://s2.loli.net/2023/11/25/iCMvn7DO41gBad9.jpg" alt="MCMC讲解（局部）"></p>]]></content>
      
      
      <categories>
          
          <category> Research </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Canoe </tag>
            
            <tag> C++ </tag>
            
            <tag> MCMC </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Canoe Example#4：Juno MWR辐射传输模拟</title>
      <link href="/blog/research/canoe-athena/canoe-example-juno_mwr_eq/"/>
      <url>/blog/research/canoe-athena/canoe-example-juno_mwr_eq/</url>
      
        <content type="html"><![CDATA[<p>本节解读一下<code>juno_mwr_eq</code>示例的具体实现和实验使用到的理论和假设。</p><h2 id="情景描述"><a href="#情景描述" class="headerlink" title="情景描述"></a>情景描述</h2><p>Juno Mission<br>朱诺（Juno）是一项由美国宇航局（NASA）进行的木星探测任务, 于2011年8月5日从佛罗里达州的卡纳维拉尔角空军基地发射,于2016年7月4日成功进入了木星轨道, 主要目标是深入研究木星的内部结构、大气层和磁场，以帮助科学家们了解这个巨大气体行星的形成和演化过程。<br>朱诺搭载了多种科学仪器，包括微波辐射计(MWR)、微波雷达、飞行器磁力计、高能粒子探测器等，用于测量木星大气的温度、气体成分、磁场和辐射环境等参数。<br>极化轨道：</p><p>朱诺以一个相对较小的轨道倾角环绕木星，被称为“极化轨道”，以减少朱诺受到木星辐射带的辐射影响，并允许更全面地研究木星的极区域。<br>Juno的轨道离心率较大，可以使其再近木点钻进木星辐射带进行大气辐射的观测，减少木星磁场的干扰。<br><img src="https://s2.loli.net/2023/11/27/b2npsa4NmQF6ClB.jpg" alt="NASA：Juno’s Orbit"></p><p>已知木星大气特性：伽利略号探测器对木星的穿透性探测得到了一系列的probe in-situ测了结果，其中包括，大气气体成分主要是水和氨气；1 bar 高度的气温约为169 K。<br>模拟需要实现的步骤：</p><ol><li>输入已知的探测结果和热力学参数；</li><li>基于绝热假设构建大气温湿度廓线和气体含量廓线；</li><li>辐射传输模拟，计算天顶微波亮温。</li></ol><h2 id="运行个例"><a href="#运行个例" class="headerlink" title="运行个例"></a>运行个例</h2><p>构建项目和编译</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">cd</span></span><br><span class="line">(<span class="built_in">env</span>) jihenghu@canopy:~ [11:31]$ <span class="built_in">mkdir</span> -p Juno_MWR_Proj/build</span><br><span class="line">(<span class="built_in">env</span>) jihenghu@canopy:~ [11:31]$ <span class="built_in">cd</span> Juno_MWR_Proj/build/</span><br><span class="line">(<span class="built_in">env</span>) jihenghu@canopy:build [11:32]$ cmake ~/canoe/ -DTASK=juno . </span><br><span class="line">(<span class="built_in">env</span>) jihenghu@canopy:build [11:32]$ make -j8 <span class="comment">## 8核编译</span></span><br></pre></td></tr></table></figure><p>准备所需要的文件：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> ..</span><br><span class="line">(<span class="built_in">env</span>) jihenghu@canopy:Juno_MWR_Proj [11:35]$ <span class="built_in">ln</span> -s build/bin/juno_mwr.release .</span><br><span class="line">(<span class="built_in">env</span>) jihenghu@canopy:Juno_MWR_Proj [11:35]$ <span class="built_in">cp</span> build/bin/juno_mwr.inp .</span><br><span class="line">(<span class="built_in">env</span>) jihenghu@canopy:Juno_MWR_Proj [11:36]$ <span class="built_in">cp</span> build/bin/mwr_channels.yaml .</span><br></pre></td></tr></table></figure><p>输入和配置文件<a href="juno_mwr.inp">juno_mwr.inp</a> | <a href="mwr_channels.yaml">mwr_channels.yaml</a>我们会在后面介绍其具体意义。</p><p>运行</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">(<span class="built_in">env</span>) jihenghu@canopy:Juno_MWR_Proj [11:40]$ ./juno_mwr.release -i juno_mwr.inp </span><br><span class="line"><span class="comment">######################################################</span></span><br><span class="line"><span class="comment">##              CANOE MODEL STARTS                  ##</span></span><br><span class="line"><span class="comment">######################################################</span></span><br><span class="line">Log, <span class="string">&quot;2023-11-15 11:40:57&quot;</span>,        canoe, 2., <span class="string">&quot;Installing monitor canoe&quot;</span></span><br><span class="line">Log, <span class="string">&quot;2023-11-15 11:40:57&quot;</span>,        canoe, 2.1., <span class="string">&quot;Initialize IndexMap&quot;</span></span><br><span class="line">......</span><br><span class="line">Log, <span class="string">&quot;2023-11-15 11:40:59&quot;</span>,         snap, 47.1., <span class="string">&quot;Destroy Thermodynamics&quot;</span></span><br><span class="line">Log, <span class="string">&quot;2023-11-15 11:40:59&quot;</span>,        canoe, 48.1., <span class="string">&quot;Destroy IndexMap&quot;</span></span><br><span class="line">Log, <span class="string">&quot;2023-11-15 11:40:59&quot;</span>,      outputs, 49.1., <span class="string">&quot;Destroy MetadataTable&quot;</span></span><br><span class="line"></span><br><span class="line">Terminating on success</span><br><span class="line">cpu time used  = 1.6321420000000000e+00 (s)</span><br></pre></td></tr></table></figure><p><a href="juno_mwr_eq_stdout.txt">…点击查看完整日志…</a></p><p>检查输出：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ tree</span><br><span class="line">.</span><br><span class="line">├── build/</span><br><span class="line">├── juno_mwr.inp</span><br><span class="line">├── juno_mwr.out2.00000.nc</span><br><span class="line">├── juno_mwr.out3.00000.nc</span><br><span class="line">├── juno_mwr.out4.00000.nc</span><br><span class="line">├── juno_mwr.out5.00000.nc</span><br><span class="line">├── juno_mwr.release -&gt; build/bin/juno_mwr.release</span><br><span class="line">└── mwr_channels.yaml</span><br><span class="line"></span><br><span class="line">$ <span class="built_in">ln</span> -s build/bin/combine.py </span><br><span class="line">$ python3 combine.py -o <span class="built_in">test</span>. <span class="comment">## 将输出合并成一个nc文件</span></span><br><span class="line">$ tree</span><br><span class="line">├── build/</span><br><span class="line">├── combine.py -&gt; build/bin/combine.py</span><br><span class="line">├── combine_rules</span><br><span class="line">├── juno_mwr.inp</span><br><span class="line">├── juno_mwr.release -&gt; build/bin/juno_mwr.release</span><br><span class="line">├── juno_mwr-test-main.nc</span><br><span class="line">└── mwr_channels.yam</span><br></pre></td></tr></table></figure><h2 id="结果分析"><a href="#结果分析" class="headerlink" title="结果分析"></a>结果分析</h2><ol><li><p>大气廓线输出：包括温度、位温、两种气体的浓度廓线。<br><img src="https://s2.loli.net/2023/11/28/b8JU5KMPwx4fTEr.png" alt="juno-output-profiles.png"></p></li><li><p>辐射传输模拟：包括6个通道的天顶亮温，临边昏暗和权重廓线<br><img src="https://s2.loli.net/2024/03/22/KA3q6EmDIPOkt4i.png" alt="juno-output-radiances _24_.png"><br><img src="https://s2.loli.net/2024/03/22/EwbZsjO6uzdVBI8.png" alt="radiance _15_.png"></p></li></ol><p><i>Note:</i>这里的权重指的是：</p><p>$$<br>\begin{align}<br>w(z)&#x3D;-e^{- \tau } d\tau &#x2F;dz<br>\end{align}<br>$$</p><h2 id="源码分析"><a href="#源码分析" class="headerlink" title="源码分析"></a>源码分析</h2><p>比较特殊的头文件如下：</p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;snap/thermodynamics/vapors/sodium_vapors.hpp&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;astro/Jupiter/jup_fletcher16_cirs.hpp&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;astro/planets.hpp&gt;</span></span></span><br><span class="line"><span class="comment">//radiative transfer</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;harp/radiation.hpp&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;harp/radiation_band.hpp&gt;</span></span></span><br><span class="line"><span class="comment">// tracer</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;tracer/tracer.hpp&gt;</span></span></span><br><span class="line"><span class="comment">// opacity</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;opacity/Giants/microwave/mwr_absorbers.hpp&gt;</span></span></span><br><span class="line"><span class="comment">// inversion</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;inversion/profile_inversion.hpp&gt;</span></span></span><br><span class="line"><span class="comment">// special includes</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;juno_mwr_specs.hpp&quot;</span></span></span><br></pre></td></tr></table></figure><p>全局变量<br><code>Real grav, P0, T0, Tmin, clat;</code><br><code>Real xHe, xCH4, xH2S, xNa, xKCl, metallicity;</code> &#x2F;&#x2F; 痕量气体的含量 </p><p>设定输出的诊断量，常规的温度和能量，加上几种condensible气体的相对湿度。这里只有H2O和NH3两种（NHYDRO&#x3D;2）。</p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">MeshBlock::InitUserMeshBlockData</span><span class="params">(ParameterInput *pin)</span> </span>&#123;</span><br><span class="line">  <span class="built_in">AllocateUserOutputVariables</span>(<span class="number">4</span> + NVAPOR);</span><br><span class="line">  <span class="built_in">SetUserOutputVariableName</span>(<span class="number">0</span>, <span class="string">&quot;temp&quot;</span>);</span><br><span class="line">  <span class="built_in">SetUserOutputVariableName</span>(<span class="number">1</span>, <span class="string">&quot;theta&quot;</span>);</span><br><span class="line">  <span class="built_in">SetUserOutputVariableName</span>(<span class="number">2</span>, <span class="string">&quot;thetav&quot;</span>);</span><br><span class="line">  <span class="built_in">SetUserOutputVariableName</span>(<span class="number">3</span>, <span class="string">&quot;mse&quot;</span>);</span><br><span class="line">  <span class="keyword">for</span> (<span class="type">int</span> n = <span class="number">1</span>; n &lt;= NVAPOR; ++n) &#123;</span><br><span class="line">    std::string name = <span class="string">&quot;rh&quot;</span> + std::<span class="built_in">to_string</span>(n);</span><br><span class="line">    <span class="built_in">SetUserOutputVariableName</span>(<span class="number">3</span> + n, name.<span class="built_in">c_str</span>());</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>NVAPOR,NHYDRO的定义在<a href="https://github.com/PrincetonUniversity/athena/blob/master/src/defs.hpp.in">defs.hpp.in</a></p><p>输出前的计算</p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">MeshBlock::UserWorkBeforeOutput</span><span class="params">(ParameterInput *pin)</span> </span>&#123;</span><br><span class="line">  <span class="keyword">auto</span> pthermo = Thermodynamics::<span class="built_in">GetInstance</span>();</span><br><span class="line"></span><br><span class="line">  <span class="keyword">for</span> (<span class="type">int</span> k = ks; k &lt;= ke; ++k)</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> j = js; j &lt;= je; ++j)</span><br><span class="line">      <span class="keyword">for</span> (<span class="type">int</span> i = is; i &lt;= ie; ++i) &#123;</span><br><span class="line">        <span class="built_in">user_out_var</span>(<span class="number">0</span>, k, j, i) = pthermo-&gt;<span class="built_in">GetTemp</span>(<span class="keyword">this</span>, k, j, i);</span><br><span class="line">        <span class="built_in">user_out_var</span>(<span class="number">1</span>, k, j, i) = pthermo-&gt;<span class="built_in">PotentialTemp</span>(<span class="keyword">this</span>, P0, k, j, i);</span><br><span class="line">        <span class="comment">// theta_v</span></span><br><span class="line">        <span class="built_in">user_out_var</span>(<span class="number">2</span>, k, j, i) =</span><br><span class="line">            <span class="built_in">user_out_var</span>(<span class="number">1</span>, k, j, i) * pthermo-&gt;<span class="built_in">RovRd</span>(<span class="keyword">this</span>, k, j, i);</span><br><span class="line">        <span class="comment">// mse</span></span><br><span class="line">        <span class="built_in">user_out_var</span>(<span class="number">3</span>, k, j, i) =</span><br><span class="line">            pthermo-&gt;<span class="built_in">MoistStaticEnergy</span>(<span class="keyword">this</span>, grav * pcoord-&gt;<span class="built_in">x1v</span>(i), k, j, i);</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> n = <span class="number">1</span>; n &lt;= NVAPOR; ++n)</span><br><span class="line">          <span class="built_in">user_out_var</span>(<span class="number">3</span> + n, k, j, i) =</span><br><span class="line">              pthermo-&gt;<span class="built_in">RelativeHumidity</span>(<span class="keyword">this</span>, n, k, j, i);</span><br><span class="line">      &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>初始化，读取适用于所有网格的设置：</p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">Mesh::InitUserMeshData</span><span class="params">(ParameterInput *pin)</span> </span>&#123;</span><br><span class="line">  grav = -pin-&gt;<span class="built_in">GetReal</span>(<span class="string">&quot;hydro&quot;</span>, <span class="string">&quot;grav_acc1&quot;</span>);</span><br><span class="line">  P0 = pin-&gt;<span class="built_in">GetReal</span>(<span class="string">&quot;mesh&quot;</span>, <span class="string">&quot;ReferencePressure&quot;</span>);</span><br><span class="line">  T0 = pin-&gt;<span class="built_in">GetReal</span>(<span class="string">&quot;problem&quot;</span>, <span class="string">&quot;T1bar&quot;</span>);</span><br><span class="line"></span><br><span class="line">  Tmin = pin-&gt;<span class="built_in">GetReal</span>(<span class="string">&quot;problem&quot;</span>, <span class="string">&quot;Tmin&quot;</span>);</span><br><span class="line">  clat = pin-&gt;<span class="built_in">GetOrAddReal</span>(<span class="string">&quot;problem&quot;</span>, <span class="string">&quot;clat&quot;</span>, <span class="number">0.</span>);</span><br><span class="line"></span><br><span class="line">  xH2S = pin-&gt;<span class="built_in">GetReal</span>(<span class="string">&quot;problem&quot;</span>, <span class="string">&quot;xH2S&quot;</span>);</span><br><span class="line"></span><br><span class="line">  metallicity = pin-&gt;<span class="built_in">GetOrAddReal</span>(<span class="string">&quot;problem&quot;</span>, <span class="string">&quot;metallicity&quot;</span>, <span class="number">0.</span>);</span><br><span class="line"></span><br><span class="line">  xNa = pin-&gt;<span class="built_in">GetReal</span>(<span class="string">&quot;problem&quot;</span>, <span class="string">&quot;xNa&quot;</span>);</span><br><span class="line">  xNa *= <span class="built_in">pow</span>(<span class="number">10.</span>, metallicity);</span><br><span class="line"></span><br><span class="line">  xKCl = pin-&gt;<span class="built_in">GetReal</span>(<span class="string">&quot;problem&quot;</span>, <span class="string">&quot;xKCl&quot;</span>);</span><br><span class="line">  xKCl *= <span class="built_in">pow</span>(<span class="number">10.</span>, metallicity);</span><br><span class="line"></span><br><span class="line">  xHe = pin-&gt;<span class="built_in">GetReal</span>(<span class="string">&quot;problem&quot;</span>, <span class="string">&quot;xHe&quot;</span>);</span><br><span class="line"></span><br><span class="line">  xCH4 = pin-&gt;<span class="built_in">GetReal</span>(<span class="string">&quot;problem&quot;</span>, <span class="string">&quot;xCH4&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="ProblemGenerator"><a href="#ProblemGenerator" class="headerlink" title="ProblemGenerator"></a>ProblemGenerator</h3><p>这个个例比较复杂，我们逐块解释：</p><ul><li>数据读取</li></ul> <figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function">Application::Logger <span class="title">app</span><span class="params">(<span class="string">&quot;main&quot;</span>)</span></span>;  <span class="comment">// 日志注册</span></span><br><span class="line">app-&gt;<span class="built_in">Log</span>(<span class="string">&quot;ProblemGenerator: juno&quot;</span>); </span><br><span class="line"><span class="keyword">auto</span> pthermo = Thermodynamics::<span class="built_in">GetInstance</span>(); <span class="comment">// 获取热力学指针对象</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// mesh limits</span></span><br><span class="line">Real x1min = pmy_mesh-&gt;mesh_size.x1min;</span><br><span class="line">Real x1max = pmy_mesh-&gt;mesh_size.x1max;</span><br><span class="line">Real H0 = pcoord-&gt;<span class="built_in">GetPressureScaleHeight</span>();  <span class="comment">// 大气标高H0</span></span><br></pre></td></tr></table></figure><p> 这里读取了模拟的垂直坐标的范围和大气标高H0：<br> Input文件的范围是 x1min  &#x3D; -270.E3 到 x1max       &#x3D; 200.E3 的高度范围。<br>这里说明一下模拟使用的坐标系统：<br>$$<br>\begin{align}<br>z^*&#x3D; H_0 \cdot ln\frac{P}{P_0} ;<br>P_0&#x3D; 1 bar<br>\end{align}<br>$$</p><ul><li>对于等温大气：$z&#x3D;z^*&#x3D;H_0 \cdot ln\frac{P}{P_0}$；</li><li>对于等熵大气：$z !&#x3D;z^*$</li></ul><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">// request temperature and pressure</span></span><br><span class="line">app-&gt;<span class="built_in">Log</span>(<span class="string">&quot;request T&quot;</span>, T0);</span><br><span class="line">app-&gt;<span class="built_in">Log</span>(<span class="string">&quot;request P&quot;</span>, P0);</span><br><span class="line"></span><br><span class="line"><span class="comment">// thermodynamic constants</span></span><br><span class="line">Real gamma = pin-&gt;<span class="built_in">GetReal</span>(<span class="string">&quot;hydro&quot;</span>, <span class="string">&quot;gamma&quot;</span>);</span><br><span class="line">Real Rd = pthermo-&gt;<span class="built_in">GetRd</span>();</span><br><span class="line">Real cp = gamma / (gamma - <span class="number">1.</span>) * Rd;</span><br><span class="line"></span><br><span class="line"><span class="comment">// index</span></span><br><span class="line"><span class="keyword">auto</span> pindex = IndexMap::<span class="built_in">GetInstance</span>();</span><br><span class="line"><span class="type">int</span> iH2O = pindex-&gt;<span class="built_in">GetVaporId</span>(<span class="string">&quot;H2O&quot;</span>);</span><br><span class="line"><span class="type">int</span> iNH3 = pindex-&gt;<span class="built_in">GetVaporId</span>(<span class="string">&quot;NH3&quot;</span>);</span><br><span class="line"></span><br><span class="line">app-&gt;<span class="built_in">Log</span>(<span class="string">&quot;index of H2O&quot;</span>, iH2O);</span><br><span class="line">app-&gt;<span class="built_in">Log</span>(<span class="string">&quot;index of NH3&quot;</span>, iNH3);</span><br></pre></td></tr></table></figure><p>迭代求算$T_s$, $P_s$:</p><ol><li>①计算地表气压和地表气温（干绝热模型）： $ P_s&#x3D;P_0 \cdot e^{-x1min&#x2F;H0} $；$ T_s&#x3D;T_0 \cdot \frac{P_s}{P_0}^{R_d&#x2F;C_p} $ ;</li><li>②从地表开始构建一条绝热廓线到1bar的位置（湿绝热），获得是$T_0’$ ;</li><li>计算1bar处的温度偏差$\Delta T&#x3D;T_0’ - T_0$，修正Ts：$ T_s’&#x3D;T_s- \Delta T $，</li><li>③自下而上再次构建湿绝热廓线，获得新的T_0”；</li><li>重复3和4，直到$\Delta T&lt;0.01 K$。</li></ol><p>① ②两个过程并非简单的逆过程，否则2过程得到的$T_0’&#x3D;T_0$，即迭代没有意义。实际上之所以这么做，是因为过程2在干绝热过程计算时，每一层混合气体的总$C_p$随着气体组分变化。并且，单一组分气体的$C_p$也在随温度变化的，而过程1使用了上下恒定的$C_p$。<br>下图展示了最初几步① ② ③过程示意图：<br><img src="https://s2.loli.net/2023/11/27/uCB4qa9AEojFwfX.jpg" alt="求算Ts,Ps"></p><p><img src="https://s2.loli.net/2023/11/27/HCg8lK7I6JXmVoM.jpg" alt="稳定性条件"><br>代码如下：</p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">// estimate surface temperature and pressure</span></span><br><span class="line">Real Ps = P0 * <span class="built_in">exp</span>(-x1min / H0);</span><br><span class="line">Real Ts = T0 * <span class="built_in">pow</span>(Ps / P0, Rd / cp);</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> (iter++ &lt; max_iter) &#123;</span><br><span class="line">  <span class="comment">// read in vapors</span></span><br><span class="line">  air.w[iH2O] = xH2O;</span><br><span class="line">  air.w[iNH3] = xNH3;</span><br><span class="line">  air.w[IPR] = Ps;</span><br><span class="line">  air.w[IDN] = Ts;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// stop at just above P0</span></span><br><span class="line">  <span class="keyword">for</span> (<span class="type">int</span> i = is; i &lt;= ie; ++i) &#123;</span><br><span class="line">    pthermo-&gt;<span class="built_in">Extrapolate</span>(&amp;air, -dlnp / <span class="number">2.</span>,</span><br><span class="line">                         Thermodynamics::Method::DryAdiabat);</span><br><span class="line">    <span class="keyword">if</span> (air.w[IPR] &lt; P0) <span class="keyword">break</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// extrapolate down to where air is</span></span><br><span class="line">  pthermo-&gt;<span class="built_in">Extrapolate</span>(&amp;air, <span class="built_in">log</span>(P0 / air.w[IPR]),</span><br><span class="line">                       Thermodynamics::Method::DryAdiabat);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// make up for the difference</span></span><br><span class="line">  Ts += T0 - air.w[IDN];</span><br><span class="line">  <span class="keyword">if</span> (std::<span class="built_in">abs</span>(T0 - air.w[IDN]) &lt; <span class="number">0.01</span>) <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">  app-&gt;<span class="built_in">Log</span>(<span class="string">&quot;Iteration #&quot;</span>, iter);</span><br><span class="line">  app-&gt;<span class="built_in">Log</span>(<span class="string">&quot;T&quot;</span>, air.w[IDN]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (iter &gt; max_iter) &#123;</span><br><span class="line">  <span class="keyword">throw</span> <span class="built_in">RuntimeError</span>(<span class="string">&quot;ProblemGenerator&quot;</span>, <span class="string">&quot;maximum iteration reached&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>构建大气廓线：</p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">// construct atmosphere from bottom up</span></span><br><span class="line">air.<span class="built_in">ToMoleFraction</span>();</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> k = ks; k &lt;= ke; ++k)</span><br><span class="line">  <span class="keyword">for</span> (<span class="type">int</span> j = js; j &lt;= je; ++j) &#123;</span><br><span class="line">    air.<span class="built_in">SetZero</span>();</span><br><span class="line">    air.w[iH2O] = xH2O;</span><br><span class="line">    air.w[iNH3] = xNH3;</span><br><span class="line">    air.w[IPR] = Ps;</span><br><span class="line">    air.w[IDN] = Ts;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> i = is;</span><br><span class="line">    <span class="keyword">for</span> (; i &lt;= ie; ++i) &#123;</span><br><span class="line">      <span class="comment">// check relative humidity</span></span><br><span class="line">      Real rh = pthermo-&gt;<span class="built_in">RelativeHumidity</span>(air, iNH3);</span><br><span class="line">      air.w[iNH3] *= std::<span class="built_in">min</span>(rh_max_nh3 / rh, <span class="number">1.</span>);</span><br><span class="line"></span><br><span class="line">      AirParcelHelper::<span class="built_in">distribute_to_primitive</span>(<span class="keyword">this</span>, k, j, i, air);</span><br><span class="line"></span><br><span class="line">      pthermo-&gt;<span class="built_in">Extrapolate</span>(&amp;air, -dlnp, Thermodynamics::Method::DryAdiabat);</span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span> (air.w[IDN] &lt; Tmin) <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Replace adiabatic atmosphere with isothermal atmosphere if temperature</span></span><br><span class="line">    <span class="comment">// is too low</span></span><br><span class="line">    pthermo-&gt;<span class="built_in">Extrapolate</span>(&amp;air, dlnp, Thermodynamics::Method::DryAdiabat);</span><br><span class="line">    <span class="keyword">for</span> (; i &lt;= ie; ++i) &#123;</span><br><span class="line">      pthermo-&gt;<span class="built_in">Extrapolate</span>(&amp;air, -dlnp, Thermodynamics::Method::Isothermal);</span><br><span class="line">      AirParcelHelper::<span class="built_in">distribute_to_primitive</span>(<span class="keyword">this</span>, k, j, i, air);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p>手动修正大气地不稳定度，使用<code>adlnTdlnP</code>，<code>adlnNH3dlnP</code>这个输入量来完成，会作用到<code>Extrapolate</code>函数上。</p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">// if requested</span></span><br><span class="line"><span class="comment">// modify atmospheric stability</span></span><br><span class="line">Real adlnTdlnP = pin-&gt;<span class="built_in">GetOrAddReal</span>(<span class="string">&quot;problem&quot;</span>, <span class="string">&quot;adlnTdlnP&quot;</span>, <span class="number">0.</span>);</span><br><span class="line">Real adlnNH3dlnP = pin-&gt;<span class="built_in">GetOrAddReal</span>(<span class="string">&quot;problem&quot;</span>, <span class="string">&quot;adlnNH3dlnP&quot;</span>, <span class="number">0.</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (adlnTdlnP != <span class="number">0.</span>) &#123;</span><br><span class="line">  Real pmin = pin-&gt;<span class="built_in">GetOrAddReal</span>(<span class="string">&quot;problem&quot;</span>, <span class="string">&quot;adlnTdlnP.pmin&quot;</span>, <span class="number">1.</span>);</span><br><span class="line">  Real pmax = pin-&gt;<span class="built_in">GetOrAddReal</span>(<span class="string">&quot;problem&quot;</span>, <span class="string">&quot;adlnTdlnP.pmax&quot;</span>, <span class="number">20.</span>);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">for</span> (<span class="type">int</span> k = ks; k &lt;= ke; ++k)</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> j = js; j &lt;= je; ++j) &#123;</span><br><span class="line">      <span class="type">int</span> ibegin = <span class="built_in">find_pressure_level_lesser</span>(pmax, phydro-&gt;w, k, j, is, ie);</span><br><span class="line">      <span class="type">int</span> iend = <span class="built_in">find_pressure_level_lesser</span>(pmin, phydro-&gt;w, k, j, is, ie);</span><br><span class="line"></span><br><span class="line">      <span class="keyword">auto</span> &amp;&amp;air = AirParcelHelper::<span class="built_in">gather_from_primitive</span>(<span class="keyword">this</span>, k, j, ibegin);</span><br><span class="line">      air.<span class="built_in">ToMoleFraction</span>();</span><br><span class="line"></span><br><span class="line">      <span class="keyword">for</span> (<span class="type">int</span> i = ibegin; i &lt; iend; ++i) &#123;</span><br><span class="line">        pthermo-&gt;<span class="built_in">Extrapolate</span>(&amp;air, -dlnp, Thermodynamics::Method::DryAdiabat,</span><br><span class="line">                             <span class="number">0.</span>, adlnTdlnP);</span><br><span class="line">        AirParcelHelper::<span class="built_in">distribute_to_primitive</span>(<span class="keyword">this</span>, k, j, i + <span class="number">1</span>, air);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (adlnNH3dlnP != <span class="number">0.</span>) &#123;</span><br><span class="line">  Real pmin = pin-&gt;<span class="built_in">GetOrAddReal</span>(<span class="string">&quot;problem&quot;</span>, <span class="string">&quot;adlnNH3dlnP.pmin&quot;</span>, <span class="number">1.</span>);</span><br><span class="line">  Real pmax = pin-&gt;<span class="built_in">GetOrAddReal</span>(<span class="string">&quot;problem&quot;</span>, <span class="string">&quot;adlnNH3dlnP.pmax&quot;</span>, <span class="number">20.</span>);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">for</span> (<span class="type">int</span> k = ks; k &lt;= ke; ++k)</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> j = js; j &lt;= je; ++j) &#123;</span><br><span class="line">      <span class="type">int</span> ibegin = <span class="built_in">find_pressure_level_lesser</span>(pmax, phydro-&gt;w, k, j, is, ie);</span><br><span class="line">      <span class="type">int</span> iend = <span class="built_in">find_pressure_level_lesser</span>(pmin, phydro-&gt;w, k, j, is, ie);</span><br><span class="line"></span><br><span class="line">      <span class="keyword">auto</span> &amp;&amp;air = AirParcelHelper::<span class="built_in">gather_from_primitive</span>(<span class="keyword">this</span>, k, j, ibegin);</span><br><span class="line">      air.<span class="built_in">ToMoleFraction</span>();</span><br><span class="line"></span><br><span class="line">      <span class="keyword">for</span> (<span class="type">int</span> i = ibegin; i &lt; iend; ++i) &#123;</span><br><span class="line">        pthermo-&gt;<span class="built_in">Extrapolate</span>(&amp;air, -dlnp, Thermodynamics::Method::DryAdiabat);</span><br><span class="line">        air.w[iNH3] += adlnNH3dlnP * air.w[iNH3] * dlnp;</span><br><span class="line">        <span class="keyword">auto</span> rates = pthermo-&gt;<span class="built_in">TryEquilibriumTP_VaporCloud</span>(air, iNH3);</span><br><span class="line">        air.w[iNH3] += rates[<span class="number">0</span>];</span><br><span class="line">        AirParcelHelper::<span class="built_in">distribute_to_primitive</span>(<span class="keyword">this</span>, k, j, i + <span class="number">1</span>, air);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>设置痕量气体和电子，碱金属。计算蒸汽压和浓度：</p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">// set tracers, electron and Na</span></span><br><span class="line"><span class="type">int</span> ielec = pindex-&gt;<span class="built_in">GetTracerId</span>(<span class="string">&quot;e-&quot;</span>);</span><br><span class="line"><span class="type">int</span> iNa = pindex-&gt;<span class="built_in">GetTracerId</span>(<span class="string">&quot;Na&quot;</span>);</span><br><span class="line"><span class="keyword">auto</span> ptracer = pimpl-&gt;ptracer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> k = ks; k &lt;= ke; ++k)</span><br><span class="line">  <span class="keyword">for</span> (<span class="type">int</span> j = js; j &lt;= je; ++j)</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = is; i &lt;= ie; ++i) &#123;</span><br><span class="line">      Real temp = pthermo-&gt;<span class="built_in">GetTemp</span>(<span class="keyword">this</span>, k, j, i);</span><br><span class="line">      Real pH2S = xH2S * phydro-&gt;<span class="built_in">w</span>(IPR, k, j, i);</span><br><span class="line">      Real pNa = xNa * phydro-&gt;<span class="built_in">w</span>(IPR, k, j, i);</span><br><span class="line">      Real svp = <span class="built_in">sat_vapor_p_Na_H2S_Visscher</span>(temp, pH2S);</span><br><span class="line">      pNa = std::<span class="built_in">min</span>(svp, pNa);</span><br><span class="line"></span><br><span class="line">      ptracer-&gt;<span class="built_in">u</span>(iNa, k, j, i) = pNa / (Constants::kBoltz * temp);</span><br><span class="line">      ptracer-&gt;<span class="built_in">u</span>(ielec, k, j, i) = <span class="built_in">saha_ionization_electron_density</span>(</span><br><span class="line">          temp, ptracer-&gt;<span class="built_in">u</span>(iNa, k, j, i), <span class="number">5.14</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// primitive to conserved conversion (hydro)</span></span><br><span class="line">peos-&gt;<span class="built_in">PrimitiveToConserved</span>(phydro-&gt;w, pfield-&gt;bcc, phydro-&gt;u, pcoord, is, ie,</span><br><span class="line">                           js, je, ks, ke);</span><br><span class="line"></span><br><span class="line"><span class="comment">// conserved to primitive conversion (tracer)</span></span><br><span class="line">peos-&gt;<span class="built_in">PassiveScalarConservedToPrimitive</span>(pscalars-&gt;s, phydro-&gt;u, pscalars-&gt;r,</span><br><span class="line">                                        pscalars-&gt;r, pcoord, is, ie, js, je,</span><br><span class="line">                                        ks, ke);</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>最后是辐射传输计算。</p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Microwave radiative transfer needs temperatures at cell interfaces, which</span></span><br><span class="line"><span class="comment">// are interpolated from cell centered hydrodynamic variables. Normally, the</span></span><br><span class="line"><span class="comment">// boundary conditions are taken care of internally. But, since we call</span></span><br><span class="line"><span class="comment">// radiative tranfer directly in pgen, we would need to update the boundary</span></span><br><span class="line"><span class="comment">// conditions manually. The following lines of code updates the boundary</span></span><br><span class="line"><span class="comment">// conditions.</span></span><br><span class="line">phydro-&gt;hbvar.<span class="built_in">SwapHydroQuantity</span>(phydro-&gt;w, HydroBoundaryQuantity::prim);</span><br><span class="line">pbval-&gt;<span class="built_in">ApplyPhysicalBoundaries</span>(<span class="number">0.</span>, <span class="number">0.</span>, pbval-&gt;bvars_main_int);</span><br><span class="line"></span><br><span class="line"><span class="comment">// calculate radiative transfer</span></span><br><span class="line"><span class="keyword">auto</span> prad = pimpl-&gt;prad;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> k = ks; k &lt;= ke; ++k) &#123;</span><br><span class="line">  <span class="comment">// run RT models</span></span><br><span class="line">  app-&gt;<span class="built_in">Log</span>(<span class="string">&quot;run microwave radiative transfer&quot;</span>);</span><br><span class="line">  <span class="keyword">for</span> (<span class="type">int</span> j = js; j &lt;= je; ++j) prad-&gt;<span class="built_in">CalRadiance</span>(<span class="keyword">this</span>, k, j);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>本节涉及到了使用湿绝热垂直递减率来构建大气温度廓线的方法，考虑了多种水凝物潜热释放的情形，具体请参考文献【Moist Adiabats with Multiple Condensing Species: A New Theory with Application to Giant-Planet Atmospheres】</p>]]></content>
      
      
      <categories>
          
          <category> Research </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Canoe </tag>
            
            <tag> Juno </tag>
            
            <tag> MWR </tag>
            
            <tag> RTM </tag>
            
            <tag> Thermodynaics </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Canoe Example#3：Bryan Moist Uprising Bubble</title>
      <link href="/blog/research/canoe-athena/canoe-example-bryan/"/>
      <url>/blog/research/canoe-athena/canoe-example-bryan/</url>
      
        <content type="html"><![CDATA[<p>前面两节的模拟都是干空气泡的情形，本节介绍对Bryan湿空气团的模拟，会涉及到相变和热力学的能量交换过程。<br>该实验由<a href="https://doi.org/10.1175/1520-0493(2002)130%3C2917:ABSFMN%3E2.0.CO;2">Bryan &amp; Fritsch, 2002</a>提出，用来作为湿空气团的模拟标准。在情景上和Robert问题一样，不过是湿空气。</p><div class="note danger no-icon flat"><p>以下内容来百度百科</p><ul><li><p>可逆干绝热过程<br>对于定质量的气块，它的状态是由气压（p）、温度（T）、和任意一个湿度参数（如比湿q）共同决定，而气块在垂直升降运动过程中其状态不断发生变化，因此必须获得气块状态变量随高度变化规律。<br>在垂直升降运动过程中，气块中所含的水汽始终未达到饱和，没有发生相变的绝热过程，称为干绝热过程。这里的干表示未饱和气块在绝热过程中没有发生水相的变化，并非指不含有水汽。由于满足垂直运动的三个基本假设，即绝热条件、准静态条件、静力平衡条件，因此他又是可逆过程，常称为可逆干绝热过程。</p></li><li><p>可逆湿绝热过程<br>气块上升时到等熵凝结高度以上，水汽开始<u>凝结并释放出潜热</u>，如果饱和气块继续上升且<u>凝结物全部保留</u>在气块内，并<u>与外界无热量交换</u>；当气块下沉增温湿，这些凝结物<u>又蒸发</u>，使气块始终维持饱和状态，所耗的潜热与原来释放的潜热相等，沿逆过程后仍能回到原来的状态，这样的过程称为<strong>可逆湿绝热过程</strong>，又称为<strong>湿绝热过程</strong>，这里的“湿”表示在饱和的绝热气块内发生水相变化。<br>可逆湿绝热过程是一个等熵过程，虽然在可逆式绝热过程中发生了相变，但水汽和凝结出来的液态水总质量（mv+mt）不变，干空气质量md也不变</p></li></ul><p>可逆的绝热过程是等熵过程。等熵过程的对立面是等温过程，在等温过程中，最大限度的热量被转移到了外界，使得系统温度恒定如常。由于在热力学中，温度与熵是一组共轭变量，等温过程和等熵过程也可以视为“共轭”的一对过程。</p></div><h2 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h2><p>本例将干燥模拟扩展到潮湿模拟，引入水汽和云，我们将模拟在饱和大气环境中上升的饱和气团。<br>大气的初始温度廓线是湿绝热线（等熵），所有层的水汽和云总水混合比保持恒定。地表温度和压力分别为289.85 K和1 bar。<br>模拟场的近地表由一个温度场呈高斯分布的气团（同Robert问题），充满了水蒸气。<br>该气泡温度比环境略高2 K以内，使得其含有略多的水汽，以在热力学和成分上都具有浮力（大气的背景成分是O2+N2）。气泡上升时，气泡的温度和压力下降，导致水蒸气凝结和潜热释放。<br>模拟场的垂直尺寸为10公里，水平尺寸为20公里，空间分辨率为100米。</p><h2 id="模拟和结果"><a href="#模拟和结果" class="headerlink" title="模拟和结果"></a>模拟和结果</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">(<span class="built_in">env</span>) jihenghu@canopy:~/bryanproj/build [14:12] </span><br><span class="line">$ cmake ~/canoe -DTASK=bryan .</span><br><span class="line">$ make -j8</span><br><span class="line">$ <span class="built_in">cd</span> ..</span><br><span class="line">(<span class="built_in">env</span>) jihenghu@canopy:~/bryanproj [14:14] </span><br><span class="line">$ <span class="built_in">ln</span> -s build/bin/bryan.release .</span><br><span class="line">$ <span class="built_in">cp</span> build/bin/bryan.inp .  </span><br><span class="line">$ <span class="built_in">ln</span> -s build/bin/combine.py .</span><br></pre></td></tr></table></figure><p>开始模拟</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ mpirun -n 4 ./bryan.release -i bryan.inp </span><br><span class="line">time=1.0000e+03 cycle=7734</span><br><span class="line">Terminating on success</span><br><span class="line">cpu time used  = 2.459308e+02 (s)</span><br></pre></td></tr></table></figure><p>模拟了1000s的变化，使用python进行输出的合并</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ python combine.py -o <span class="built_in">test</span></span><br><span class="line">$ ncdump -h bryan-test-main.nc </span><br><span class="line">netcdf bryan-test-main &#123;</span><br><span class="line">dimensions:</span><br><span class="line">time = UNLIMITED ; // (11 currently)</span><br><span class="line">x1 = 200 ;</span><br><span class="line">x1f = 201 ;</span><br><span class="line">x2 = 400 ;</span><br><span class="line">x2f = 401 ;</span><br><span class="line">x3 = 1 ;</span><br><span class="line">variables:</span><br><span class="line"><span class="built_in">float</span> time(time) ;</span><br><span class="line">time:axis = <span class="string">&quot;T&quot;</span> ;</span><br><span class="line">time:long_name = <span class="string">&quot;time&quot;</span> ;</span><br><span class="line">time:units = <span class="string">&quot;seconds&quot;</span> ;</span><br><span class="line"><span class="built_in">float</span> x1(x1) ;</span><br><span class="line">x1:axis = <span class="string">&quot;Z&quot;</span> ;</span><br><span class="line">x1:units = <span class="string">&quot;meters&quot;</span> ;</span><br><span class="line">x1:long_name = <span class="string">&quot;Z-coordinate at cell center&quot;</span> ;</span><br><span class="line"><span class="built_in">float</span> x1f(x1f) ;</span><br><span class="line">x1f:axis = <span class="string">&quot;Z&quot;</span> ;</span><br><span class="line">x1f:units = <span class="string">&quot;meters&quot;</span> ;</span><br><span class="line">x1f:long_name = <span class="string">&quot;Z-coordinate at cell face&quot;</span> ;</span><br><span class="line"><span class="built_in">float</span> x2(x2) ;</span><br><span class="line">x2:axis = <span class="string">&quot;Y&quot;</span> ;</span><br><span class="line">x2:units = <span class="string">&quot;meters&quot;</span> ;</span><br><span class="line">x2:long_name = <span class="string">&quot;Y-coordinate at cell center&quot;</span> ;</span><br><span class="line"><span class="built_in">float</span> x2f(x2f) ;</span><br><span class="line">x2f:axis = <span class="string">&quot;Y&quot;</span> ;</span><br><span class="line">x2f:units = <span class="string">&quot;meters&quot;</span> ;</span><br><span class="line">x2f:long_name = <span class="string">&quot;Y-coordinate at cell face&quot;</span> ;</span><br><span class="line"><span class="built_in">float</span> x3(x3) ;</span><br><span class="line">x3:axis = <span class="string">&quot;X&quot;</span> ;</span><br><span class="line">x3:units = <span class="string">&quot;meters&quot;</span> ;</span><br><span class="line">x3:long_name = <span class="string">&quot;X-coordinate at cell center&quot;</span> ;</span><br><span class="line"><span class="built_in">float</span> rho(time, x1, x2, x3) ;</span><br><span class="line">rho:units = <span class="string">&quot;kg/m^3&quot;</span> ;</span><br><span class="line">rho:long_name = <span class="string">&quot;density&quot;</span> ;</span><br><span class="line"><span class="built_in">float</span> press(time, x1, x2, x3) ;</span><br><span class="line">press:units = <span class="string">&quot;pa&quot;</span> ;</span><br><span class="line">press:long_name = <span class="string">&quot;pressure&quot;</span> ;</span><br><span class="line"><span class="built_in">float</span> vel1(time, x1, x2, x3) ;</span><br><span class="line">vel1:units = <span class="string">&quot;m/s&quot;</span> ;</span><br><span class="line">vel1:long_name = <span class="string">&quot;velocity&quot;</span> ;</span><br><span class="line"><span class="built_in">float</span> vel2(time, x1, x2, x3) ;</span><br><span class="line">vel2:units = <span class="string">&quot;m/s&quot;</span> ;</span><br><span class="line">vel2:long_name = <span class="string">&quot;velocity&quot;</span> ;</span><br><span class="line"><span class="built_in">float</span> vel3(time, x1, x2, x3) ;</span><br><span class="line">vel3:units = <span class="string">&quot;m/s&quot;</span> ;</span><br><span class="line">vel3:long_name = <span class="string">&quot;velocity&quot;</span> ;</span><br><span class="line"><span class="built_in">float</span> r0(time, x1, x2, x3) ;</span><br><span class="line"><span class="built_in">float</span> vapor(time, x1, x2, x3) ;</span><br><span class="line">vapor:units = <span class="string">&quot;kg/kg&quot;</span> ;</span><br><span class="line">vapor:long_name = <span class="string">&quot;mass mixing ratio of vapor&quot;</span> ;</span><br><span class="line"><span class="built_in">float</span> mse(time, x1, x2, x3) ;</span><br><span class="line">mse:units = <span class="string">&quot;J/kg&quot;</span> ;</span><br><span class="line">mse:long_name = <span class="string">&quot;moist static energy&quot;</span> ;</span><br><span class="line"><span class="built_in">float</span> qtol(time, x1, x2, x3) ;</span><br><span class="line"><span class="built_in">float</span> rh(time, x1, x2, x3) ;</span><br><span class="line"><span class="built_in">float</span> temp(time, x1, x2, x3) ;</span><br><span class="line">temp:units = <span class="string">&quot;K&quot;</span> ;</span><br><span class="line">temp:long_name = <span class="string">&quot;temperature&quot;</span> ;</span><br><span class="line"><span class="built_in">float</span> theta(time, x1, x2, x3) ;</span><br><span class="line">theta:units = <span class="string">&quot;K&quot;</span> ;</span><br><span class="line">theta:long_name = <span class="string">&quot;potential temperature&quot;</span> ;</span><br><span class="line"><span class="built_in">float</span> theta_e(time, x1, x2, x3) ;</span><br><span class="line"><span class="built_in">float</span> theta_v(time, x1, x2, x3) ;</span><br><span class="line"></span><br><span class="line">// global attributes:</span><br><span class="line">:Conventions = <span class="string">&quot;COARDS&quot;</span> ;</span><br><span class="line">:<span class="built_in">history</span> = <span class="string">&quot;Fri Nov 24 14:34:47 2023: ncks -A ./bryan.out3.nc ./bryan.out2.nc&quot;</span> ;</span><br><span class="line">:history_of_appended_files = <span class="string">&quot;Fri Nov 24 14:34:47 2023: Appended file ./bryan.out3.nc had no \&quot;history\&quot; attribute\n&quot;</span>,</span><br><span class="line"><span class="string">&quot;&quot;</span> ;</span><br><span class="line">:NCO = <span class="string">&quot;netCDF Operators version 4.8.1 (Homepage = http://nco.sf.net, Code = http://github.com/nco/nco)&quot;</span> ;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>温度场、位温场的的演变：<br><img src="bryan_animation.gif"></p><h2 id="源码解读"><a href="#源码解读" class="headerlink" title="源码解读"></a>源码解读</h2><h3 id="头文件"><a href="#头文件" class="headerlink" title="头文件"></a>头文件</h3><p>除了之前介绍的几个类库，这里新增了几个，这里使用注释的方式简介一下</p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;athena/bvals/bvals.hpp&gt;</span>  <span class="comment">// defines BoundaryBase, BoundaryValues classes used for setting BCs on all data</span></span></span><br><span class="line"><span class="comment">// application</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;application/application.hpp&gt;</span> <span class="comment">// app注册</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;application/exceptions.hpp&gt;</span>  <span class="comment">// 报错信息</span></span></span><br><span class="line"><span class="comment">// 定义了vapor,cloud,chemitry,tracer,particle等介质的索引和函数，如GetVaporId();</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;index_map.hpp&gt;</span>  </span></span><br><span class="line"></span><br><span class="line"><span class="comment">// climath</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;climath/core.h&gt;</span> <span class="comment">//基础的数学函数和单位转换</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;climath/interpolation.h&gt;</span> <span class="comment">// 插值工具包，包括定位，线性内插，样条等方法；</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;climath/root.hpp&gt;</span> </span></span><br><span class="line"><span class="comment">// special includes</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;bryan_vapor_functions.hpp&quot;</span><span class="comment">//包含了本个例使用的湿空气物理，计算饱和水汽压</span></span></span><br></pre></td></tr></table></figure><hr><h3 id="输出诊断量"><a href="#输出诊断量" class="headerlink" title="输出诊断量"></a>输出诊断量</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> iH2O, iH2Oc;  <span class="comment">// indices for water vapor and cloud</span></span><br><span class="line">Real p0, grav;  <span class="comment">//  global var declaration on surface pressure and the gravity</span></span><br></pre></td></tr></table></figure><p>注册输出参数：temperature, potential temperature, virtual potential temperature, moist static energy, relatve humidity, total mixing ratio of water。</p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">MeshBlock::InitUserMeshBlockData</span><span class="params">(ParameterInput *pin)</span> </span>&#123;</span><br><span class="line">  <span class="built_in">AllocateUserOutputVariables</span>(<span class="number">7</span>);</span><br><span class="line">  <span class="built_in">SetUserOutputVariableName</span>(<span class="number">0</span>, <span class="string">&quot;temp&quot;</span>);</span><br><span class="line">  <span class="built_in">SetUserOutputVariableName</span>(<span class="number">1</span>, <span class="string">&quot;theta&quot;</span>);</span><br><span class="line">  <span class="built_in">SetUserOutputVariableName</span>(<span class="number">2</span>, <span class="string">&quot;theta_v&quot;</span>);</span><br><span class="line">  <span class="built_in">SetUserOutputVariableName</span>(<span class="number">3</span>, <span class="string">&quot;mse&quot;</span>);</span><br><span class="line">  <span class="built_in">SetUserOutputVariableName</span>(<span class="number">4</span>, <span class="string">&quot;theta_e&quot;</span>);</span><br><span class="line">  <span class="built_in">SetUserOutputVariableName</span>(<span class="number">5</span>, <span class="string">&quot;rh&quot;</span>);</span><br><span class="line">  <span class="built_in">SetUserOutputVariableName</span>(<span class="number">6</span>, <span class="string">&quot;qtol&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Grid iterations to assign the value before ouput, Most of the diagnosis variables are members of Class <code>Thermoddynamics</code>, use a pinter to refer the instance.</p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">MeshBlock::UserWorkBeforeOutput</span><span class="params">(ParameterInput *pin)</span> </span>&#123;</span><br><span class="line">  <span class="keyword">auto</span> pthermo = Thermodynamics::<span class="built_in">GetInstance</span>();</span><br><span class="line"></span><br><span class="line">  <span class="keyword">for</span> (<span class="type">int</span> k = ks; k &lt;= ke; ++k)</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> j = js; j &lt;= je; ++j)</span><br><span class="line">      <span class="keyword">for</span> (<span class="type">int</span> i = is; i &lt;= ie; ++i) &#123;</span><br><span class="line">        <span class="built_in">user_out_var</span>(<span class="number">0</span>, k, j, i) = pthermo-&gt;<span class="built_in">GetTemp</span>(<span class="keyword">this</span>, k, j, i);</span><br><span class="line">        <span class="built_in">user_out_var</span>(<span class="number">1</span>, k, j, i) = pthermo-&gt;<span class="built_in">PotentialTemp</span>(<span class="keyword">this</span>, p0, k, j, i);</span><br><span class="line">        <span class="comment">// theta_v</span></span><br><span class="line">        <span class="built_in">user_out_var</span>(<span class="number">2</span>, k, j, i) =</span><br><span class="line">            <span class="built_in">user_out_var</span>(<span class="number">1</span>, j, i) * pthermo-&gt;<span class="built_in">RovRd</span>(<span class="keyword">this</span>, k, j, i); <span class="comment">// Theta/Rd</span></span><br><span class="line">        <span class="comment">// mse</span></span><br><span class="line">        <span class="built_in">user_out_var</span>(<span class="number">3</span>, k, j, i) =</span><br><span class="line">            pthermo-&gt;<span class="built_in">MoistStaticEnergy</span>(<span class="keyword">this</span>, grav * pcoord-&gt;<span class="built_in">x1v</span>(i), k, j, i);</span><br><span class="line">        <span class="comment">// theta_e</span></span><br><span class="line">        <span class="built_in">user_out_var</span>(<span class="number">4</span>, k, j, i) =</span><br><span class="line">            pthermo-&gt;<span class="built_in">EquivalentPotentialTemp</span>(<span class="keyword">this</span>, p0, iH2O, k, j, i);</span><br><span class="line">        <span class="built_in">user_out_var</span>(<span class="number">5</span>, k, j, i) =</span><br><span class="line">            pthermo-&gt;<span class="built_in">RelativeHumidity</span>(<span class="keyword">this</span>, iH2O, k, j, i);</span><br><span class="line">        <span class="comment">// total mixing ratio</span></span><br><span class="line">        <span class="keyword">auto</span> &amp;&amp;air = AirParcelHelper::<span class="built_in">gather_from_primitive</span>(<span class="keyword">this</span>, k, j, i);</span><br><span class="line">        <span class="built_in">user_out_var</span>(<span class="number">6</span>, k, j, i) = air.w[iH2O] + air.c[iH2Oc];</span><br><span class="line">      &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>AirParcel</code>类定义在<a href="https://github.com/chengcli/canoe/blob/main/src/air_parcel.hpp"><code>air_parcel.hpp</code></a>, 定义了一系列的空气包的属性和计算函数，用来描述格点内气体、水凝物等介质的浓度状态。<br><code>AirParcel</code>类包含了数种介质类型的定义及其单位的换算函数。介质使用指针表示，一共6种：</p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">Real *<span class="type">const</span> w; <span class="comment">//! hydro data</span></span><br><span class="line">Real *<span class="type">const</span> c; <span class="comment">//! cloud data</span></span><br><span class="line">Real *<span class="type">const</span> q; <span class="comment">//! chemistry data</span></span><br><span class="line">Real *<span class="type">const</span> x; <span class="comment">//! tracer data</span></span><br><span class="line">Real *<span class="type">const</span> t; <span class="comment">//! turbulence data</span></span><br><span class="line">Real <span class="type">const</span> *d; <span class="comment">//! particle data</span></span><br></pre></td></tr></table></figure><p>分别表示对应物质的浓度值，可以采用<code>air.w[iH2O]</code>的形式引用对应的水汽含量；<br>浓度的单位由枚举类定义：<code>enum class Type &#123; MassFrac = 0, MassConc = 1, MoleFrac = 2, MoleConc = 3 &#125;;</code><br>并且定义了四种单位之间的转换函数：</p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function">AirParcel &amp;<span class="title">ToMassFraction</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function">AirParcel &amp;<span class="title">ToMassConcentration</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function">AirParcel &amp;<span class="title">ToMoleFraction</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function">AirParcel &amp;<span class="title">ToMoleConcentration</span><span class="params">()</span></span>;</span><br></pre></td></tr></table></figure><p><code>namespace:: AirParcelHelper</code>定义了几个用于更新&lt;void distribute_to_primitive()&gt;、获取&lt;AirParcel&#x2F;AirColumn  gather_from_conserved()&gt;一个或一段气柱的AirParcel信息的函数。此处用于获取水含量信息。</p><hr><h3 id="初始化Mesh类"><a href="#初始化Mesh类" class="headerlink" title="初始化Mesh类"></a>初始化Mesh类</h3><p>本个例依然不考虑额外的Forcing， 所以没有注册source function。</p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">Mesh::InitUserMeshData</span><span class="params">(ParameterInput *pin)</span> </span>&#123;</span><br><span class="line">  <span class="keyword">auto</span> pindex = IndexMap::<span class="built_in">GetInstance</span>();</span><br><span class="line"></span><br><span class="line">  grav = -pin-&gt;<span class="built_in">GetReal</span>(<span class="string">&quot;hydro&quot;</span>, <span class="string">&quot;grav_acc1&quot;</span>);</span><br><span class="line">  p0 = pin-&gt;<span class="built_in">GetReal</span>(<span class="string">&quot;problem&quot;</span>, <span class="string">&quot;p0&quot;</span>);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// index</span></span><br><span class="line">  iH2O = pindex-&gt;<span class="built_in">GetVaporId</span>(<span class="string">&quot;H2O&quot;</span>);</span><br><span class="line">  iH2Oc = pindex-&gt;<span class="built_in">GetCloudId</span>(<span class="string">&quot;H2O(c)&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h3 id="初始化MeshBlock类"><a href="#初始化MeshBlock类" class="headerlink" title="初始化MeshBlock类"></a>初始化MeshBlock类</h3><p>依然是先获取热力学的实例指针*pthermo，以便对热力学参数机型操控；<br>读取<problem>block中设定的初始参数: 地表温度，气团中心坐标，椭圆轴长，温度梯度参数，气团初始时刻的水汽混合比 vapor mixing ratio。</p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">MeshBlock::ProblemGenerator</span><span class="params">(ParameterInput *pin)</span> </span>&#123;</span><br><span class="line">  <span class="keyword">auto</span> pthermo = Thermodynamics::<span class="built_in">GetInstance</span>();</span><br><span class="line"></span><br><span class="line">  Real Ps = p0;</span><br><span class="line">  Real Ts = pin-&gt;<span class="built_in">GetReal</span>(<span class="string">&quot;problem&quot;</span>, <span class="string">&quot;Ts&quot;</span>);  <span class="comment">// 289.85</span></span><br><span class="line">  Real xc = pin-&gt;<span class="built_in">GetReal</span>(<span class="string">&quot;problem&quot;</span>, <span class="string">&quot;xc&quot;</span>);  <span class="comment">// 10,000 m</span></span><br><span class="line">  Real zc = pin-&gt;<span class="built_in">GetReal</span>(<span class="string">&quot;problem&quot;</span>, <span class="string">&quot;zc&quot;</span>);  <span class="comment">// 2,000 m</span></span><br><span class="line">  Real xr = pin-&gt;<span class="built_in">GetReal</span>(<span class="string">&quot;problem&quot;</span>, <span class="string">&quot;xr&quot;</span>);  <span class="comment">// 2,000</span></span><br><span class="line">  Real zr = pin-&gt;<span class="built_in">GetReal</span>(<span class="string">&quot;problem&quot;</span>, <span class="string">&quot;zr&quot;</span>);  <span class="comment">// 2,000</span></span><br><span class="line">  Real dT = pin-&gt;<span class="built_in">GetReal</span>(<span class="string">&quot;problem&quot;</span>, <span class="string">&quot;dT&quot;</span>);  <span class="comment">// 1E5 pa</span></span><br><span class="line">  Real qt = pin-&gt;<span class="built_in">GetReal</span>(<span class="string">&quot;problem&quot;</span>, <span class="string">&quot;qt&quot;</span>);  <span class="comment">// 0.0196</span></span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function">AirParcel <span class="title">air</span><span class="params">(AirParcel::Type::MassFrac)</span></span>; <span class="comment">// 定义一个MassFrac为单位的空气块</span></span><br><span class="line">air.w[iH2O] = qt; <span class="comment">// 设定比湿</span></span><br><span class="line">air.c[iH2Oc] = <span class="number">0.</span>; </span><br><span class="line"></span><br><span class="line">air.<span class="built_in">ToMoleFraction</span>();  <span class="comment">// 转换为摩尔分数</span></span><br><span class="line">qt = air.w[iH2O];</span><br></pre></td></tr></table></figure><p>遍历格点，（1）首先使用地表气压和地表温度插值出第一层（is）和地表(0)中间高度处的气温和气压，水汽，也就是 <code>pcoord-&gt;dx1f(is) / 2.</code>高度处的空气参数，注意is表示其实下标；<br>（2）再循环空气柱，自下而上构建出一条湿绝热廓线。</p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">// construct a reversible adiabat</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> k = ks; k &lt;= ke; ++k)</span><br><span class="line">  <span class="keyword">for</span> (<span class="type">int</span> j = js; j &lt;= je; ++j) &#123;</span><br><span class="line">    air.w[iH2O] = qt;</span><br><span class="line">    air.w[IPR] = Ps;</span><br><span class="line">    air.w[IDN] = Ts;</span><br><span class="line">    air.c[iH2Oc] = <span class="number">0.</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//这里先使用地表气压和地表温度插值出第一层（is）和地表(0)中间高度处的气温和气压，水汽</span></span><br><span class="line">    pthermo-&gt;<span class="built_in">Extrapolate</span>(&amp;air, pcoord-&gt;<span class="built_in">dx1f</span>(is) / <span class="number">2.</span>,</span><br><span class="line">                         Thermodynamics::Method::ReversibleAdiabat, grav);</span><br><span class="line">    <span class="comment">// 循环空气柱，自下而上构建出一条湿绝热廓线</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = is; i &lt;= ie; ++i) &#123;</span><br><span class="line">      AirParcelHelper::<span class="built_in">distribute_to_conserved</span>(<span class="keyword">this</span>, k, j, i, air);</span><br><span class="line">      pthermo-&gt;<span class="built_in">Extrapolate</span>(&amp;air, pcoord-&gt;<span class="built_in">dx1f</span>(i),</span><br><span class="line">                           Thermodynamics::Method::ReversibleAdiabat, grav);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><div class="note warning no-icon flat"><p><code>Extrapolate()</code>函数的定义如下,此处用来构建一个满足固定大气模型的廓线：</p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">Thermodynamics::Extrapolate</span><span class="params">(AirParcel * qfrac,</span></span></span><br><span class="line"><span class="params"><span class="function">Real dzORdlnp,</span></span></span><br><span class="line"><span class="params"><span class="function">Method method,</span></span></span><br><span class="line"><span class="params"><span class="function">Real grav = <span class="number">0.</span>,</span></span></span><br><span class="line"><span class="params"><span class="function">Real userp = <span class="number">0.</span> </span></span></span><br><span class="line"><span class="params"><span class="function">)</span><span class="type">const</span></span></span><br><span class="line"><span class="function">Construct an 1d atmosphere</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">Parameters</span></span><br><span class="line"><span class="function">[in,out]qfracmole fraction representation of air parcel</span></span><br><span class="line"><span class="function">[in]dzORdlnpvertical grid spacing</span></span><br><span class="line"><span class="function">[in]methodchoose from [reversible, pseudo, dry, isothermal]</span></span><br><span class="line"><span class="function">[in]gravgravitational acceleration</span></span><br><span class="line"><span class="function">[in]userpuser parameter to adjust the temperature gradient</span></span><br></pre></td></tr></table></figure><p>这个怎么实现呢，实际上Extrapolate调用了<code>rk4IntegrateLnp()</code>函数进行微分方程的数值积分：</p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="function"><span class="type">void</span>  <span class="title">Thermodynamics::rk4IntegrateLnp</span><span class="params">(AirParcel *air, Real dlnp, Method method,</span></span></span><br><span class="line"><span class="params"><span class="function">                                      Real adlnTdlnP)</span></span></span><br></pre></td></tr></table></figure><p><code>rk4IntegrateLnp()</code>进一步调用了<code>calDlnTDlnP()</code>函数来计算温压关系：</p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function">Real <span class="title">Thermodynamics::calDlnTDlnP</span><span class="params">(AirParcel <span class="type">const</span>&amp; qfrac, Real latent[])</span> <span class="type">const</span> </span>&#123;</span><br><span class="line">  <span class="comment">// calculate gammad</span></span><br><span class="line">  Real gammad = <span class="built_in">GetGammad</span>(qfrac);</span><br><span class="line"> </span><br><span class="line">  Real q_gas = <span class="number">1.</span>;</span><br><span class="line">  <span class="keyword">for</span> (<span class="type">int</span> n = <span class="number">0</span>; n &lt; NCLOUD; ++n) q_gas -= qfrac.c[n];</span><br><span class="line"> </span><br><span class="line">  Real f_sig = <span class="number">1.</span>;</span><br><span class="line">  <span class="comment">// vapor</span></span><br><span class="line">  <span class="keyword">for</span> (<span class="type">int</span> n = <span class="number">1</span>; n &lt;= NVAPOR; ++n)</span><br><span class="line">    f_sig += qfrac.w[n] * (cp_ratio_mole_[n] - <span class="number">1.</span>);</span><br><span class="line">  <span class="comment">// cloud</span></span><br><span class="line">  <span class="keyword">for</span> (<span class="type">int</span> n = <span class="number">0</span>; n &lt; NCLOUD; ++n)</span><br><span class="line">    f_sig += qfrac.c[n] * (cp_ratio_mole_[<span class="number">1</span> + NVAPOR + n] - <span class="number">1.</span>);</span><br><span class="line">  Real cphat_ov_r = gammad / (gammad - <span class="number">1.</span>) * f_sig / q_gas;</span><br><span class="line"> </span><br><span class="line">  <span class="comment">// vapor</span></span><br><span class="line">  Real xd = q_gas;</span><br><span class="line">  <span class="keyword">for</span> (<span class="type">int</span> n = <span class="number">1</span>; n &lt;= NVAPOR; ++n) xd -= qfrac.w[n];</span><br><span class="line"> </span><br><span class="line">  Real c1 = <span class="number">0.</span>, c2 = <span class="number">0.</span>, c3 = <span class="number">0.</span>;</span><br><span class="line">  <span class="keyword">for</span> (<span class="type">int</span> iv = <span class="number">1</span>; iv &lt;= NVAPOR; ++iv) &#123;</span><br><span class="line">    c1 += qfrac.w[iv] / xd * latent[iv];</span><br><span class="line">    c2 += qfrac.w[iv] / xd * latent[iv] * latent[iv];</span><br><span class="line">    c3 += qfrac.w[iv] / xd;</span><br><span class="line">  &#125;</span><br><span class="line"> </span><br><span class="line">  <span class="keyword">return</span> (<span class="number">1.</span> + c1) / (cphat_ov_r + (c2 + c1 * c1) / (<span class="number">1.</span> + c3));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这个函数的来源与Cheng Li博士期间的工作：<a href="https://doi.org/10.1175/JAS-D-17-0257.1">《Moist Adiabats with Multiple Condensing Species: A New Theory with Application to Giant-Planet Atmospheres》</a>，其提出了适用于多种可凝结气体共存情形下的湿绝热温压关系（经典理论只适用于水蒸气存在的地球大气，不适用于巨行星的大气廓线构建），形式是这样的，大家感兴趣可以去研读：<br><img src="https://s2.loli.net/2023/11/26/v5AKio6xkCrm3Oa.png" alt="Moist Adiabats T-P with Multiple Condensing Species"></p></div><hr><p>最后这部分是再初始场中叠加Guassian气团的温湿度异常场，然后计算水的相变平衡点。</p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">  <span class="comment">// add temperature anomaly</span></span><br><span class="line">  <span class="keyword">for</span> (<span class="type">int</span> k = ks; k &lt;= ke; ++k)</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> j = js; j &lt;= je; ++j)</span><br><span class="line">      <span class="keyword">for</span> (<span class="type">int</span> i = is; i &lt;= ie; ++i) &#123;</span><br><span class="line">        Real x1 = pcoord-&gt;<span class="built_in">x1v</span>(i);</span><br><span class="line">        Real x2 = pcoord-&gt;<span class="built_in">x2v</span>(j);</span><br><span class="line">        Real L = <span class="built_in">sqrt</span>(<span class="built_in">sqr</span>((x2 - xc) / xr) + <span class="built_in">sqr</span>((x1 - zc) / zr));</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (L &lt; <span class="number">1.</span>) &#123;</span><br><span class="line">          <span class="keyword">auto</span> &amp;&amp;air = AirParcelHelper::<span class="built_in">gather_from_conserved</span>(<span class="keyword">this</span>, k, j, i);</span><br><span class="line">          air.<span class="built_in">ToMoleFraction</span>();</span><br><span class="line">          Real temp_v = air.w[IDN] * pthermo-&gt;<span class="built_in">RovRd</span>(air);   <span class="comment">/// 计算虚温</span></span><br><span class="line">          temp_v *= <span class="number">1.</span> + dT * <span class="built_in">sqr</span>(<span class="built_in">cos</span>(M_PI * L / <span class="number">2.</span>)) / <span class="number">300.</span>;   <span class="comment">/// 叠加保护水汽的虚温</span></span><br><span class="line"></span><br><span class="line">          Real temp;</span><br><span class="line">          <span class="type">int</span> err = <span class="built_in">root</span>(air.w[IDN], air.w[IDN] + dT, <span class="number">1.E-8</span>, &amp;temp,</span><br><span class="line">                         [&amp;pthermo, &amp;air, temp_v](Real temp) &#123;</span><br><span class="line">                           air.w[IDN] = temp;</span><br><span class="line"></span><br><span class="line">                           <span class="keyword">auto</span> rates =</span><br><span class="line">                               pthermo-&gt;<span class="built_in">TryEquilibriumTP_VaporCloud</span>(air, iH2O);</span><br><span class="line">                           air.w[iH2O] += rates[<span class="number">0</span>];</span><br><span class="line">                           air.c[iH2Oc] += rates[<span class="number">1</span>];</span><br><span class="line"></span><br><span class="line">                           <span class="keyword">return</span> temp * pthermo-&gt;<span class="built_in">RovRd</span>(air) - temp_v;</span><br><span class="line">                         &#125;);</span><br><span class="line"></span><br><span class="line">          <span class="keyword">if</span> (err) <span class="keyword">throw</span> <span class="built_in">RuntimeError</span>(<span class="string">&quot;pgen&quot;</span>, <span class="string">&quot;TVSolver doesn&#x27;t converge&quot;</span>);</span><br><span class="line"></span><br><span class="line">          air.w[IDN] = temp;</span><br><span class="line">          <span class="keyword">auto</span> rates = pthermo-&gt;<span class="built_in">TryEquilibriumTP_VaporCloud</span>(air, iH2O);</span><br><span class="line">          air.w[iH2O] += rates[<span class="number">0</span>];</span><br><span class="line">          air.c[iH2Oc] += rates[<span class="number">1</span>];</span><br><span class="line"></span><br><span class="line">          AirParcelHelper::<span class="built_in">distribute_to_conserved</span>(<span class="keyword">this</span>, k, j, i, air);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="TODO"><a href="#TODO" class="headerlink" title="TODO"></a>TODO</h2><ul><li><p>try_equilibrium_tp_vapor_cloud.cpp 相变平衡点的计算问题</p></li><li><p>multiple condensing species dLnTdLnP 的计算问题</p></li><li><p>RK4微分方程的积分问题</p></li><li><p>提取热力学假设和大气廓线构建的相关内容</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> Research </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Canoe </tag>
            
            <tag> Hydrodynamics </tag>
            
            <tag> Thermodynaics </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Canoe Example#2：Robert Uprisng Bubble</title>
      <link href="/blog/research/canoe-athena/canoe-example-robert/"/>
      <url>/blog/research/canoe-athena/canoe-example-robert/</url>
      
        <content type="html"><![CDATA[<p>本节继续学习个例二，Robert problem。模拟了一个热气团的上升和充分发展的Kelvin–Helmholtz不稳定性，不考虑额外的Forcing。</p><h2 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h2><p>本示例展示了一个热空气泡从近地表上升的情景模拟。这个测试案例由<a href="https://doi.org/10.1175/1520-0469(1993)050%3C1865:BCEWAS%3E2.0.CO;2">André Robert，1993</a>提出。本个例将其从2D扩展到3D模拟。模拟空间的尺寸为 $1000m \times 1000m \times 2000m$ ，分辨率在每个维度上均匀为 $25m$。<br>起始时刻，气泡中心最初位于 $x_0&#x3D;y_0&#x3D;500m$ ，$z_0&#x3D;260m$ 处，其位温异常（Anomaly of Potential Temperature）呈高斯分布，表示为：<br>$$<br>\begin{eqnarray*} \Delta \theta &amp;&#x3D;&amp; \begin{cases}<br> 5 ; \text{K}, \qquad\quad\quad r \leq a \\<br> 5 e^{-(r-a)^2&#x2F;s^2} ; \text{K} , \quad r &gt; a \end{cases}<br>\end{eqnarray*}<br>$$<br>其中 $r$ 为到气泡中心点的距离，参数 $a&#x3D;50 m，s&#x3D;100 m$ 。背景大气是等熵的(绝热、无摩擦)，地表气压 $p_0&#x3D;1 bar$，地表温度 $T_s &#x3D;303.15 K$ 。随后释放气泡，模拟900秒内的演变过程。</p><h2 id="源码分析"><a href="#源码分析" class="headerlink" title="源码分析"></a>源码分析</h2><p>本个例的<head>和UOV的设置同Straka问题一样，不再赘述。</p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">// We only need one global variables here, the surface pressure</span></span><br><span class="line">Real p0;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Same as that in @ref straka, make outputs of temperature and potential</span></span><br><span class="line"><span class="comment">// temperature.</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">MeshBlock::InitUserMeshBlockData</span><span class="params">(ParameterInput *pin)</span> </span>&#123;</span><br><span class="line">  <span class="built_in">AllocateUserOutputVariables</span>(<span class="number">2</span>);</span><br><span class="line">  <span class="built_in">SetUserOutputVariableName</span>(<span class="number">0</span>, <span class="string">&quot;temp&quot;</span>);</span><br><span class="line">  <span class="built_in">SetUserOutputVariableName</span>(<span class="number">1</span>, <span class="string">&quot;theta&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Set temperature and potential temperature.</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">MeshBlock::UserWorkBeforeOutput</span><span class="params">(ParameterInput *pin)</span> </span>&#123;</span><br><span class="line">  <span class="keyword">auto</span> pthermo = Thermodynamics::<span class="built_in">GetInstance</span>();</span><br><span class="line"></span><br><span class="line">  Real gamma = peos-&gt;<span class="built_in">GetGamma</span>();</span><br><span class="line">  <span class="keyword">for</span> (<span class="type">int</span> k = ks; k &lt;= ke; ++k)</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> j = js; j &lt;= je; ++j)</span><br><span class="line">      <span class="keyword">for</span> (<span class="type">int</span> i = is; i &lt;= ie; ++i) &#123;</span><br><span class="line">        <span class="built_in">user_out_var</span>(<span class="number">0</span>, k, j, i) = pthermo-&gt;<span class="built_in">GetTemp</span>(<span class="keyword">this</span>, k, j, i);</span><br><span class="line">        <span class="built_in">user_out_var</span>(<span class="number">1</span>, k, j, i) = pthermo-&gt;<span class="built_in">PotentialTemp</span>(<span class="keyword">this</span>, p0, k, j, i);</span><br><span class="line">      &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>对Mesh类进行初始化，本个例不考虑额外的forcing，只有模式内部的重力场作用。<br><strong>这里为什么只对Mesh初始化了 $P_0$ 这一个初始值呢？如果在这里先初始化Ts会怎样？必须要作为global参数吗？</strong></p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Initialize surface pressure from input file.</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Mesh::InitUserMeshData</span><span class="params">(ParameterInput *pin)</span> </span>&#123;</span><br><span class="line">  p0 = pin-&gt;<span class="built_in">GetReal</span>(<span class="string">&quot;problem&quot;</span>, <span class="string">&quot;p0&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// We do not need forcings other than gravity in this problem,</span></span><br><span class="line"><span class="comment">// so we go directly to the initial condition.</span></span><br></pre></td></tr></table></figure><p>对MeshBlock类进行初始化，遍历设置每个格点的初始条件：</p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">MeshBlock::ProblemGenerator</span><span class="params">(ParameterInput *pin)</span> </span>&#123;</span><br><span class="line">  <span class="comment">// Similar to @ref straka, read variables in the input file</span></span><br><span class="line">  Real gamma = pin-&gt;<span class="built_in">GetReal</span>(<span class="string">&quot;hydro&quot;</span>, <span class="string">&quot;gamma&quot;</span>);</span><br><span class="line">  Real grav = -phydro-&gt;hsrc.<span class="built_in">GetG1</span>();</span><br><span class="line">  Real Ts = pin-&gt;<span class="built_in">GetReal</span>(<span class="string">&quot;problem&quot;</span>, <span class="string">&quot;Ts&quot;</span>);</span><br><span class="line">  Real Rd = pin-&gt;<span class="built_in">GetReal</span>(<span class="string">&quot;thermodynamics&quot;</span>, <span class="string">&quot;Rd&quot;</span>);</span><br><span class="line">  Real cp = gamma / (gamma - <span class="number">1.</span>) * Rd;</span><br><span class="line"></span><br><span class="line">  Real xc = pin-&gt;<span class="built_in">GetReal</span>(<span class="string">&quot;problem&quot;</span>, <span class="string">&quot;xc&quot;</span>);</span><br><span class="line">  Real yc = pin-&gt;<span class="built_in">GetReal</span>(<span class="string">&quot;problem&quot;</span>, <span class="string">&quot;yc&quot;</span>);</span><br><span class="line">  Real zc = pin-&gt;<span class="built_in">GetReal</span>(<span class="string">&quot;problem&quot;</span>, <span class="string">&quot;zc&quot;</span>);</span><br><span class="line">  Real s = pin-&gt;<span class="built_in">GetReal</span>(<span class="string">&quot;problem&quot;</span>, <span class="string">&quot;s&quot;</span>);</span><br><span class="line">  Real a = pin-&gt;<span class="built_in">GetReal</span>(<span class="string">&quot;problem&quot;</span>, <span class="string">&quot;a&quot;</span>);</span><br><span class="line">  Real dT = pin-&gt;<span class="built_in">GetReal</span>(<span class="string">&quot;problem&quot;</span>, <span class="string">&quot;dT&quot;</span>);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// Whether to do a uniform bubble or not.</span></span><br><span class="line">  <span class="type">bool</span> uniform_bubble =</span><br><span class="line">      pin-&gt;<span class="built_in">GetOrAddBoolean</span>(<span class="string">&quot;problem&quot;</span>, <span class="string">&quot;uniform_bubble&quot;</span>, <span class="literal">false</span>);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// Loop over the grids and set initial condition</span></span><br><span class="line">  <span class="keyword">for</span> (<span class="type">int</span> k = ks; k &lt;= ke; ++k)</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> j = js; j &lt;= je; ++j)</span><br><span class="line">      <span class="keyword">for</span> (<span class="type">int</span> i = is; i &lt;= ie; ++i) &#123;</span><br><span class="line">        Real x1 = pcoord-&gt;<span class="built_in">x1v</span>(i);</span><br><span class="line">        Real x2 = pcoord-&gt;<span class="built_in">x2v</span>(j);</span><br><span class="line">        Real x3 = pcoord-&gt;<span class="built_in">x3v</span>(k);</span><br><span class="line">        Real r = <span class="built_in">sqrt</span>((x3 - yc) * (x3 - yc) + (x2 - xc) * (x2 - xc) +</span><br><span class="line">                      (x1 - zc) * (x1 - zc));</span><br><span class="line">        Real temp = Ts - grav * x1 / cp;  <span class="comment">//  Adiabatic temperature gradient.</span></span><br><span class="line">        phydro-&gt;<span class="built_in">w</span>(IPR, k, j, i) = p0 * <span class="built_in">pow</span>(temp / Ts, cp / Rd);  <span class="comment">// $p=p_0(\frac&#123;T&#125;&#123;T_s&#125;)^&#123;c_p/R_d&#125;$</span></span><br><span class="line">        <span class="keyword">if</span> (r &lt;= a)</span><br><span class="line">          temp += dT * <span class="built_in">pow</span>(phydro-&gt;<span class="built_in">w</span>(IPR, k, j, i) / p0, Rd / cp);</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (!uniform_bubble)</span><br><span class="line">          temp += dT * <span class="built_in">exp</span>(-(r - a) * (r - a) / (s * s)) *</span><br><span class="line">                  <span class="built_in">pow</span>(phydro-&gt;<span class="built_in">w</span>(IPR, k, j, i) / p0, Rd / cp);</span><br><span class="line">        phydro-&gt;<span class="built_in">w</span>(IDN, k, j, i) = phydro-&gt;<span class="built_in">w</span>(IPR, k, j, i) / (Rd * temp); <span class="comment">// $ \pho=\frac&#123;P&#125;&#123;Rd T&#125;$</span></span><br><span class="line">        phydro-&gt;<span class="built_in">w</span>(IVX, k, j, i) = phydro-&gt;<span class="built_in">w</span>(IVY, k, j, i) = <span class="number">0.</span>;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// Change primitive variables to conserved variables</span></span><br><span class="line">  peos-&gt;<span class="built_in">PrimitiveToConserved</span>(phydro-&gt;w, pfield-&gt;bcc, phydro-&gt;u, pcoord, is, ie,</span><br><span class="line">                             js, je, ks, ke);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>这里涉及到的物理有：</p><ul><li>计算温度：$T &#x3D; T_s - \frac{gh}{c_p}$ </li><li>计算压强：$p&#x3D;p_0(\frac{T}{T_s})^{c_p&#x2F;R_d}$</li><li>计算温度异常量 ：$ \Delta T &#x3D; \Delta\theta  (\frac{p}{p_0})^{Rd&#x2F;c_p}$</li><li>计算密度：$ \rho&#x3D;\frac{P}{Rd T}$</li></ul><h2 id="运行和结果"><a href="#运行和结果" class="headerlink" title="运行和结果"></a>运行和结果</h2><p>项目构建和编译的过程和Straka问题一样，这里不重复说了。这里有一个不同点，为了提高对3D模拟中众多网格的运算效率，使用了8核并行运算。</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ mpiexec -n 8 ./robert.release -i robert3d.inp</span><br></pre></td></tr></table></figure><p>这里为什么 np&#x3D;8呢，是因为我们在输入文件中对mesh为维数和单核MeshBlock维数进行了设计：</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># /robert3d.inp</span></span><br><span class="line"><span class="string">&lt;mesh&gt;</span></span><br><span class="line"><span class="string">nx1</span>        <span class="string">=</span> <span class="number">80</span>          </span><br><span class="line"><span class="string">nx2</span>        <span class="string">=</span> <span class="number">40</span>          </span><br><span class="line"><span class="string">nx3</span>        <span class="string">=</span> <span class="number">40</span>     </span><br><span class="line"><span class="string">&lt;meshblock&gt;</span></span><br><span class="line"><span class="string">nx1</span>        <span class="string">=</span> <span class="number">40</span></span><br><span class="line"><span class="string">nx2</span>        <span class="string">=</span> <span class="number">20</span></span><br><span class="line"><span class="string">nx3</span>        <span class="string">=</span> <span class="number">20</span></span><br></pre></td></tr></table></figure><p>也就是总共需要处理的网格数是 $80 \times 40 \times 40$， 是单核处理个数 $40 \times 20 \times 20$ 的八倍。<br>如果单核运行，会出现无法同步的问题，导致报错没有设定边界条件。</p><p>温度场、位温场的的演变：<br>剖面位置$x3&#x3D;500m$ 处<br><img src="temperature_theta_animation.gif"></p><!-- <img style="height:300px" src="theta_animation.gif"> --><h2 id="遗留问题"><a href="#遗留问题" class="headerlink" title="遗留问题"></a>遗留问题</h2><ol><li>如果改变P0，Ts的初始化位置，会分别发生什么问题？</li><li>如果加上Straka问题中的Fusion作为Forcing，模拟结果会如何？</li><li>改变dT的大小，结果变化如何？</li><li>湍流场对Scheme的依赖性如何？</li></ol>]]></content>
      
      
      <categories>
          
          <category> Research </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Canoe </tag>
            
            <tag> Hydrodynamics </tag>
            
            <tag> Thermodynaics </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Canoe Example#1：Straka Sinking Bubble</title>
      <link href="/blog/research/canoe-athena/canoe-example-straka/"/>
      <url>/blog/research/canoe-athena/canoe-example-straka/</url>
      
        <content type="html"><![CDATA[<p>本节将通过一个具体的问题- Straka Problem的模拟来学习Canoe的编译和运行。<br>本模拟的模拟是通过考察高密度空气团的下沉和由此因此的边界层扰动，来评估模式在模拟刚性下表面情形的表现。空气的粘性流体，需要考虑由此引发的能量耗散。</p><h2 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h2><p>Strake Problem是<a href="https://onlinelibrary.wiley.com/doi/abs/10.1002/fld.1650170103">Straka</a>提出的，描述的是一个具有冷空气泡在二维大气中的下沉情形。其中大气是等熵的，水平范围是25.6 km,垂直6.4 km,两个维度的分辨率均为100 m，地表（1 bar）处的物理温度为 300K。</p><ul><li><p>起始状态：<br>空气泡的起始位置在（0, 3 km）处，气泡内部的温度分布遵循以下方程：<br>\begin{align}<br>\Delta T&#x3D; -15 \text{K} \frac{\cos(\pi L)+1}{2}, \quad L&lt;1<br>\end{align}<br>其中, L 为点 $(x,z)$ 到冷空气气泡中心点$(x_c,z_c)$的椭圆距：<br>\begin{align} L &#x3D; \Big(\big(\frac{x - x_c}{x_r}\big)^2+\big(\frac{z - z_c}{z_r}\big)^2\Big)^{1&#x2F;2}.<br>\end{align}<br>其中, $x_c&#x3D;0$ km, $z_c&#x3D;3$ km, $x_r&#x3D;4$ km, $z_r&#x3D;2$ km。 </p></li><li><p>物理过程：<br>起初，气泡处于<a href="https://en.wikipedia.org/wiki/Hydrostatic_equilibrium">流体静力稳定状态（hydrostatically balanced）</a>；由于<a href="https://en.wikipedia.org/wiki/Convective_instability">对流不稳定</a>，气泡从起始位置开始下沉，并带动周围的空气流动，由此产生的密度流在界面上传播，形成<a href="https://en.wikipedia.org/wiki/Kelvin-Helmholtz_instability">Kelvin-Helmholtz不稳定</a>。本example的目的就是对这一过程进行模拟。</p></li></ul><h2 id="模拟"><a href="#模拟" class="headerlink" title="模拟"></a>模拟</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ cd </span><br><span class="line">$ mkdir -p StrakaProj/build</span><br><span class="line">$ cd StrakaProj/build</span><br><span class="line">$ cmake ~/canoe -DTASK=straka</span><br><span class="line">$ make -j8</span><br><span class="line">$ cd ..</span><br><span class="line">$ln -s build/bin/straka.release .</span><br><span class="line">$ ln -s build/bin/straka.release .</span><br><span class="line">$ ln -s build/bin/combine.py .</span><br><span class="line">$ cp build/bin/straka.inp .</span><br><span class="line">$ ./straka.release -i straka.inp </span><br><span class="line">$ python combine.py -o test</span><br></pre></td></tr></table></figure><p>实验进行了900s的模拟，生成了<code>straka-test-main.nc</code>文件，头信息：<a href="straka-test-main.headinfo">straka-test-main.headinfo</a>。<br>脚本：<a href="make_plots.py">make_plots.py</a>。<br>绘制0，300，600，900s四个时刻的位温场的模拟：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">python3 make_plots.py</span><br></pre></td></tr></table></figure><img style="height:300px" src='2d.straka-theta.png' alt='2d.straka-theta(点击查看大图)'/><h2 id="源码解析"><a href="#源码解析" class="headerlink" title="源码解析"></a>源码解析</h2><p>源码位置不在本编译目录下，在canoe安装目录下：<code>~canoe/examples/2019-Li-snap/straka.cpp</code><br>我们来逐行分析：</p><h3 id="头文件"><a href="#头文件" class="headerlink" title="头文件"></a>头文件</h3><p>这里简单提一下，Athena++是原子物理层面，适用于量子力学&#x2F;流体力学的天文磁流体模式。Canoe是在其基础内核上开发的，基于其网格并行架构(mesh,meshblock)、流体力学模块(hydro)和类的封装风格（airparcel）、重力（gravity），坐标（coordinate）, I&#x2F;O等，加入了热力学模块（thermodynmics），辐射传输（radiation, opacity）等分子层面的宏观物理方法的大气模式。所以，canoe需要include很多athena++的类库，同时，自身要实现从atom到particle的转变。</p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;athena/athena.hpp&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;athena/athena_arrays.hpp&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;athena/stride_iterator.hpp&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;athena/parameter_input.hpp&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;athena/coordinates/coordinates.hpp&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;athena/eos/eos.hpp&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;athena/hydro/hydro.hpp&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;athena/field/field.hpp&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;athena/mesh/mesh.hpp&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;impl.hpp&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;snap/thermodynamics/thermodynamics.hpp&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;climath/core.h&gt;</span></span></span><br></pre></td></tr></table></figure><ul><li><p><a href="https://github.com/PrincetonUniversity/athena/blob/master/src/athena.hpp"><em><strong>athena.hpp</strong></em></a>：定义了Athena++的各种各种变量、类型、常量、下标，指针，结构体等等。 如：Real型，ConsIndex,PrimIndex等枚举类；</p></li><li><p><a href="https://github.com/PrincetonUniversity/athena/blob/master/src/parameter_input.hpp"><em><strong>parameter_input.hpp</strong></em></a>：设定了用于读取、存储模式输入文件<code>&lt;straka.inp&gt;</code>中变量的<code>ParameterInput</code>类型和<code>GetInteger()</code>，<code>GetReal()</code>等函数；</p></li><li><p><a href="https://github.com/PrincetonUniversity/athena/blob/master/src/coordinates/coordinates.hpp"><em><strong>coordinates.hpp</strong></em></a>：定义，存储和计算坐标位置，网格距和几何特性（面积、体积、source term）的文件；</p></li><li><p><a href="https://github.com/PrincetonUniversity/athena/blob/master/src/eos/eos.hpp"><em><strong>eos.hpp</strong></em></a> ：定义用于计算状态方程（Equation of State）的数据和函数；</p></li><li><p><a href="https://github.com/PrincetonUniversity/athena/blob/master/src/hydro/hydro.hpp"><em><strong>hydro.hpp</strong></em></a> ：这位更是重量级，定义了处理流体力学过程的<code>Hydro</code>类，负责处理流体动力过程中压强、密度和速度场的演变。包含了指向特定meshblock的指针<code>*pmb</code>; Hydro类本身可以被指针*hydro引用；Athena++还可以用来模拟磁流体力学过程 <code>magnetohydrodynamics (MHD)</code>;</p></li><li><p><a href=""><em><strong>field.hpp</strong></em></a>：负责处理磁流体力学中的场的变化，大气模拟一般用不到；</p></li><li><p><a href="https://github.com/PrincetonUniversity/athena/blob/master/src/mesh/mesh.hpp"><em><strong>mesh.hpp</strong></em></a> ：负责处理mesh和meshblock的类库，并且协调不同处理器并行情形下的mesh分布式计算问题。</p><ul><li>MeshBlock class:格点类，控制单个格点的各种过程和位置信息；</li><li>Mesh class:所有网格类型的总类，结构上是由大量meshBlock示例构成；类别上可以分成规则网格，三角形网格、变分网格等。</li><li>Mesh网格的设计：参考Athena++团队发表的网格设计和工作原理：<a href="https://doi.org/10.3847/1538-4365/ab929b">【The Athena++ Adaptive Mesh Refinement Framework: Design and Magnetohydrodynamic Solvers】</a>;<br>  <img src="/blog/research/canoe-athena/canoe-example-straka/athenapp-mesh-scheme.jpg" alt="Mesh网格结构示意图"><br>  详细内容会在mesh网格文章中介绍。（挖坑~）</li></ul></li><li><p><a href="https://github.com/chengcli/canoe/blob/main/src/impl.hpp"><em><strong>impl.hpp</strong></em></a> ：这是Canoe作为athena++扩展时为了灵活添加需要的物理方案和模块，留下的伪类，称为<a href="https://en.wikipedia.org/wiki/Opaque_pointer">Opaque pointer</a>，也可以理解为一个接口或后门，后续需要做任何模块的修改，只要子imp类中做扩展并具体实现就可以了。目前，impl类上插了以下几个canoe的实际物理&#x2F;化学&#x2F;辐射模块：<code>radiation</code>（辐射传输）,<code>inversion</code>（反演）,<code>decomposition</code>（分解）,<code>thermodynamics</code>（热力学）,<code>turbulence_model</code>（湍流）,<code>microphysics</code>（微物理）,<code>chemistry</code>（化学）,<code>tracer</code>（痕量气体）。</p></li><li><p><a href="https://github.com/PrincetonUniversity/athena/blob/master/src/mesh/mesh.hpp">MeshBlock类</a>：这里介绍以下MeshBlock类，被定义在Mesh类的里面，负责管理每个格点的坐标、状态和相关物理过程的实现，在逻辑上后于Mesh类的实例化。这些物理是由其内部封装的指针来访问的，包括：</p><ul><li>Coordinates *pcoord &#x2F;&#x2F; 格点的坐标系统</li><li>Hydro *phydro     &#x2F;&#x2F; 流体力学过程</li><li>EquationOfState *peos  &#x2F;&#x2F; 大气状态方程</li><li>但是，如<code>*pthermo</code>,<code>*prad</code>等属于Canoe扩展的类的指针，定义在<code>impl</code>高级包装类中。因为不属于MeshBlock类的成员指针，不能在其实例中直接使用，需要先实例化：<code>auto pthermo = Thermodynamics::GetInstance();</code>，或者通过<code>impl</code>类的指针来访问:<code>auto prad = pimpl-&gt;prad;</code>。</li></ul></li><li><p><a href="https://github.com/chengcli/canoe/blob/main/src/impl.hpp"><b style="color:red"><em>thermodynamics.hpp</em></b></a> ：定义在<code>impl</code>类中，负责处理热力学相关的过程和状态的解算。包含了温度、压强、位温、能量等参数的求算，以及：</p><ul><li>几种大气层结假设：    <figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">enum class</span> <span class="title class_">Method</span> &#123;</span><br><span class="line">ReversibleAdiabat = <span class="number">0</span>, <span class="comment">// 可逆绝热</span></span><br><span class="line">PseudoAdiabat = <span class="number">1</span>, <span class="comment">//假绝热</span></span><br><span class="line">DryAdiabat = <span class="number">2</span>, <span class="comment">//干绝热</span></span><br><span class="line">Isothermal = <span class="number">3</span>, <span class="comment">// 等温大气</span></span><br><span class="line">NeutralStability = <span class="number">4</span> <span class="comment">// 中性稳定</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></li><li>大气结构构建函数：  <figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">//! Construct an 1d atmosphere</span></span><br><span class="line"><span class="comment">//! \param[in,out] qfrac mole fraction representation of air parcel</span></span><br><span class="line"><span class="comment">//! \param[in] dzORdlnp vertical grid spacing</span></span><br><span class="line"><span class="comment">//! \param[in] method choose from [reversible, pseudo, dry, isothermal]</span></span><br><span class="line"><span class="comment">//! \param[in] grav gravitational acceleration</span></span><br><span class="line"><span class="comment">//! \param[in] userp user parameter to adjust the temperature gradient</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Thermodynamics::Extrapolate</span><span class="params">(AirParcel* qfrac, Real dzORdlnp, Method method,</span></span></span><br><span class="line"><span class="params"><span class="function">                             Real grav, Real userp)</span> <span class="type">const</span> </span>&#123;</span><br><span class="line">qfrac-&gt;<span class="built_in">ToMoleFraction</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">// equilibrate vapor with clouds</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= NVAPOR; ++i) &#123;</span><br><span class="line">    <span class="keyword">auto</span> rates = <span class="built_in">TryEquilibriumTP_VaporCloud</span>(*qfrac, i);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// vapor condensation rate</span></span><br><span class="line">    qfrac-&gt;w[i] += rates[<span class="number">0</span>];</span><br><span class="line"></span><br><span class="line">    <span class="comment">// cloud concentration rates</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt; rates.<span class="built_in">size</span>(); ++j)</span><br><span class="line">    qfrac-&gt;c[cloud_index_set_[i][j - <span class="number">1</span>]] += rates[j];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// RK4 integration</span></span><br><span class="line"><span class="meta">#<span class="keyword">ifdef</span> HYDROSTATIC</span></span><br><span class="line"><span class="built_in">rk4IntegrateLnp</span>(qfrac, dzORdlnp, method, userp);</span><br><span class="line"><span class="meta">#<span class="keyword">else</span></span></span><br><span class="line"><span class="built_in">rk4IntegrateZ</span>(qfrac, dzORdlnp, method, grav, userp);</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>  这部分内容会在<code>模式的大气热力学基础</code>中讲（又挖坑~~~）</li></ul></li></ul><hr><h3 id="输出设置"><a href="#输出设置" class="headerlink" title="输出设置"></a>输出设置</h3><p>接下来，程序定义了几个全局变量。这里，<code>K</code> 是运动粘度，<code>p0</code>是表面压力，<code>cp</code> 是比热容，而<code>Rd</code> 是干燥空气的理想气体常数。这里的<a href="https://en.wikipedia.org/wiki/Prandtl_number">普朗特数</a> 是1。</p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">Real K, p0, cp, Rd;</span><br></pre></td></tr></table></figure><hr><p>设置输出量：你在inp文件中看到的UOV就是这里的UserOutputVariable的缩写。这里输出了温度场和位温场作为诊断量。<br>为输出量分配内存：</p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">MeshBlock::InitUserMeshBlockData</span><span class="params">(ParameterInput *pin)</span> </span>&#123;   </span><br><span class="line">  <span class="built_in">AllocateUserOutputVariables</span>(<span class="number">2</span>);          <span class="comment">// 声明两个输出量</span></span><br><span class="line">  <span class="built_in">SetUserOutputVariableName</span>(<span class="number">0</span>, <span class="string">&quot;temp&quot;</span>);    <span class="comment">// 命名</span></span><br><span class="line">  <span class="built_in">SetUserOutputVariableName</span>(<span class="number">1</span>, <span class="string">&quot;theta&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>由于温度和位温仅用于输出目的，它们不需要在每个动态时间步长中计算。下面的子例程循环遍历所有网格，并在输出时间步长之前计算温度和位温的值。特别地，指向Thermodynamics类的指针<code>pthermo</code>使用其自己的成员函数Thermodynamics::GetTemp和PotentialTemp来计算温度和位温。</p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">MeshBlock::UserWorkBeforeOutput</span><span class="params">(ParameterInput *pin)</span> </span>&#123;</span><br><span class="line">  <span class="keyword">auto</span> pthermo = Thermodynamics::<span class="built_in">GetInstance</span>();</span><br><span class="line">  <span class="comment">// 循环遍历网格。js、je、is、ie是MeshBlock类的成员，</span></span><br><span class="line">  <span class="comment">// 它们是表示每个维度中网格的起始索引和结束索引的整数值。</span></span><br><span class="line">  <span class="type">int</span> k = ks; <span class="comment">//本个例是二维场的模拟，第三维k=ks=1</span></span><br><span class="line">  <span class="keyword">for</span> (<span class="type">int</span> j = js; j &lt;= je; ++j)</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = is; i &lt;= ie; ++i) &#123;</span><br><span class="line">      <span class="comment">// user_out_var存储实际数据。</span></span><br><span class="line">      <span class="comment">// phydro是指向Hydro类的指针，它具有成员w，该成员存储每个网格的密度、压力和速度。</span></span><br><span class="line">      <span class="built_in">user_out_var</span>(<span class="number">0</span>, j, i) = pthermo-&gt;<span class="built_in">GetTemp</span>(<span class="keyword">this</span>, k, j, i);</span><br><span class="line">      <span class="built_in">user_out_var</span>(<span class="number">1</span>, j, i) = pthermo-&gt;<span class="built_in">PotentialTemp</span>(<span class="keyword">this</span>, p0, k, j, i);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>*pthermo</code>是一个高级管理类MeshBlock的成员。因此，在MeshBlock类的成员函数中，您可以直接使用它。实际上，所有物理模块都由MeshBlock管理。只要您有一个指向MeshBlock的指针，您就可以访问模拟中的所有物理模块。</p><hr><h3 id="Forcing-function"><a href="#Forcing-function" class="headerlink" title="Forcing function"></a>Forcing function</h3><p>本个例中，明确要求考虑，下沉的气泡受到重力以及粘性和热耗散的影响。重力的作用已经由程序的其他部分处理，我们只需要编写几行代码来实现耗散。第一步是定义一个函数，该函数以指向MeshBlock的指针作为参数，以便通过该指针访问所有物理量。这个函数的名称并不重要，可以是任何名字。但是参数的顺序和类型必须是<br> <strong>void AnyName(MeshBlock*，Real const，Real const，AthenaArray<Real> const&amp;，AthenaArray<Real> const&amp;，AthenaArray<Real>&amp;)</strong><br> 它们被称为函数的签名。</p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">Diffusion</span><span class="params">(MeshBlock *pmb, Real <span class="type">const</span> time, Real <span class="type">const</span> dt,</span></span></span><br><span class="line"><span class="params"><span class="function">               AthenaArray&lt;Real&gt; <span class="type">const</span> &amp;w, AthenaArray&lt;Real&gt; <span class="type">const</span> &amp;r,</span></span></span><br><span class="line"><span class="params"><span class="function">               AthenaArray&lt;Real&gt; <span class="type">const</span> &amp;bcc, AthenaArray&lt;Real&gt; &amp;u,</span></span></span><br><span class="line"><span class="params"><span class="function">               AthenaArray&lt;Real&gt; &amp;s)</span> </span>&#123;</span><br><span class="line">  <span class="comment">// &lt;code&gt;pcoord&lt;/code&gt; is a pointer to the Coordinates class and it is a</span></span><br><span class="line">  <span class="comment">// member of the MeshBlock class. We use the pointer to the MeshBlock class,</span></span><br><span class="line">  <span class="comment">// &lt;code&gt;pmb&lt;/code&gt; to access &lt;code&gt;pcoord&lt;/code&gt; and use its member function</span></span><br><span class="line">  <span class="comment">// to get the spacing of the grid.</span></span><br><span class="line">  Real dx = pmb-&gt;pcoord-&gt;<span class="built_in">dx1f</span>(pmb-&gt;is);</span><br><span class="line">  Real dy = pmb-&gt;pcoord-&gt;<span class="built_in">dx2f</span>(pmb-&gt;js);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// Similarly, we use &lt;code&gt;pmb&lt;/code&gt; to find the pointer to the</span></span><br><span class="line">  <span class="comment">// Thermodynamics class, &lt;code&gt;pthermo&lt;/code&gt;.</span></span><br><span class="line">  <span class="keyword">auto</span> pthermo = Thermodynamics::<span class="built_in">GetInstance</span>();</span><br><span class="line"></span><br><span class="line">  <span class="comment">// Loop over the grids.</span></span><br><span class="line">  <span class="type">int</span> k = pmb-&gt;ks;</span><br><span class="line">  <span class="keyword">for</span> (<span class="type">int</span> j = pmb-&gt;js; j &lt;= pmb-&gt;je; ++j)</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = pmb-&gt;is; i &lt;= pmb-&gt;ie; ++i) &#123;</span><br><span class="line">      <span class="comment">// Similar to what we have done in MeshBlock::UserWorkBeforeOutput, we use</span></span><br><span class="line">      <span class="comment">// the Thermodynamics class to calculate temperature and potential</span></span><br><span class="line">      <span class="comment">// temperature.</span></span><br><span class="line">      Real temp = pthermo-&gt;<span class="built_in">GetTemp</span>(pmb, pmb-&gt;ks, j, i);</span><br><span class="line">      Real theta = pthermo-&gt;<span class="built_in">PotentialTemp</span>(pmb, p0, pmb-&gt;ks, j, i);</span><br><span class="line"></span><br><span class="line">      <span class="comment">// The thermal diffusion is applied to the potential temperature field,</span></span><br><span class="line">      <span class="comment">// which is not exactly correct. But this is the setting of the test</span></span><br><span class="line">      <span class="comment">// program.</span></span><br><span class="line">      Real theta_ip1_j = pthermo-&gt;<span class="built_in">PotentialTemp</span>(pmb, p0, k, j + <span class="number">1</span>, i);</span><br><span class="line">      Real theta_im1_j = pthermo-&gt;<span class="built_in">PotentialTemp</span>(pmb, p0, k, j - <span class="number">1</span>, i);</span><br><span class="line">      Real theta_i_jp1 = pthermo-&gt;<span class="built_in">PotentialTemp</span>(pmb, p0, k, j, i + <span class="number">1</span>);</span><br><span class="line">      Real theta_i_jm1 = pthermo-&gt;<span class="built_in">PotentialTemp</span>(pmb, p0, k, j, i - <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">      <span class="built_in">u</span>(IM1, j, i) += dt * K * <span class="built_in">w</span>(IDN, j, i) / (dx * dy) *</span><br><span class="line">                      (<span class="built_in">w</span>(IVX, j, i - <span class="number">1</span>) + <span class="built_in">w</span>(IVX, j, i + <span class="number">1</span>) + <span class="built_in">w</span>(IVX, j - <span class="number">1</span>, i) +</span><br><span class="line">                       <span class="built_in">w</span>(IVX, j + <span class="number">1</span>, i) - <span class="number">4.</span> * <span class="built_in">w</span>(IVX, j, i));</span><br><span class="line">      <span class="built_in">u</span>(IM2, j, i) += dt * K * <span class="built_in">w</span>(IDN, j, i) / (dx * dy) *</span><br><span class="line">                      (<span class="built_in">w</span>(IVY, j, i - <span class="number">1</span>) + <span class="built_in">w</span>(IVY, j, i + <span class="number">1</span>) + <span class="built_in">w</span>(IVY, j - <span class="number">1</span>, i) +</span><br><span class="line">                       <span class="built_in">w</span>(IVY, j + <span class="number">1</span>, i) - <span class="number">4.</span> * <span class="built_in">w</span>(IVY, j, i));</span><br><span class="line"></span><br><span class="line">      <span class="comment">// Adding thermal dissipation is similar to adding viscous dissipation.</span></span><br><span class="line">      <span class="built_in">u</span>(IEN, j, i) +=</span><br><span class="line">          dt * K * <span class="built_in">w</span>(IDN, j, i) / (dx * dy) * cp * temp / theta *</span><br><span class="line">          (theta_ip1_j + theta_im1_j + theta_i_jp1 + theta_i_jm1 - <span class="number">4.</span> * theta);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>怎么理解这个Forcing function呢？Athena++的 hydro模块解决了一个流体力学的质量守恒和能量守恒问题。 </p><div class="note primary no-icon flat"><p>首先，对与理想流体（粘性为0，受外力作用不发生粘性耗散），其满足的质量守恒方程（连续性方程）为：<br>\begin{align}<br>\frac{\partial \rho }{\partial t}+ \bigtriangledown \cdot (\rho u) &#x3D;0 ;<br>\end{align}</p><ul><li>$\rho$ is the density of the fluid.</li><li>$u$ is the velocity of the fluid.</li><li>$t$ is time.<br>理解起来就是：局地变化项&#x3D;平流项。</li></ul></div><p>动量方程：</p><div class="note primary no-icon flat"><p>理想流体的动量方程是欧拉方程的一部分，描述了流体中动量的守恒。在一维流动中，动量方程可以写成：<br>\begin{align}<br>\frac{\partial}{\partial t}(\rho u) + \frac{\partial}{\partial x}(\rho u^2 + P) &#x3D; 0<br>\end{align}</p><ul><li>$P$ is the pressure of the fluid.</li><li>$x$ is the spatial coordinate.</li><li>这个方程表示了流体中动量的守恒。左侧第一项表示动量的时间变化率，第二项表示空间域中动量的平流通量。<br><em>注：欧拉方程假设一个理想化的流体，没有粘性或热传导（无粘性和绝热）。在具有粘性和热效应的实际情况中，通常会使用包含粘性和热传导额外项的Navier-Stokes方程。</em></li></ul></div><p>能量守恒方程：<br>理想流体的能量守恒方程可以通过欧拉方程来表示，该方程描述了无粘性和绝热的流体运动。欧拉方程包括连续性方程、动量方程和能量方程。</p><div class="note primary no-icon flat"><p>对于一维流动，理想流体的能量守恒方程可以写成：<br>\begin{align} \frac{\partial}{\partial t} \left(\rho E + \frac{1}{2}\rho u^2\right) + \frac{\partial}{\partial x} \left(\rho u E + \frac{1}{2}\rho u^3 + P u\right) &#x3D; 0 \end{align}</p><ul><li>$E$ is the specific total energy, given by $ E &#x3D; e + \frac{1}{2}u^2$, where $e$ is the specific internal energy.</li><li>这个方程表示了流体中总能量（内能和动能）的守恒。它考虑了总能量的时间变化率以及在空间域内的能量通量。<br><em>注：，欧拉方程假设了一个理想化的流体，没有粘性或热传导（无粘性和绝热）。在具有粘性和热效应的实际情况中，通常会使用包含粘性和热传导额外项的Navier-Stokes方程。</em></li></ul></div><p>那么在Straka问题中，真实的大气是具有一定粘性的，受外力作用会发生热量耗散，方程就需要加上耗散项：</p><div class="note primary no-icon flat"><p>动量耗散项：<br>\begin{align} M_{\text{x}}(j, i) +&#x3D; \frac{\partial t \cdot K}{\partial x \cdot \partial y} \left( u_{\text{x}}(j, i-1) + u_{\text{x}}(j, i+1) + u_{\text{x}}(j-1, i) + u_{\text{x}}(j+1, i) - 4 \cdot u_{\text{x}}(j, i) \right) \end{align}<br>热耗散项：<br>\begin{align} E(j, i) +&#x3D; \frac{\partial t \cdot K}{\partial x \cdot \partial y} \frac{c_p \cdot \text{T}}{\theta} \left( \theta_{i+1, j} + \theta_{i-1, j} + \theta_{i, j+1} + \theta_{i, j-1} - 4 \cdot \theta_{i, j} \right) \end{align}<br>其中 $M_x$表示$x$方向上的动量分量；$E$表示总能量，$u_x$为$x$方向的速度，$\theta$为位温，$T$为温度，$K$为粘度；</p></div><p>在添加了粘性耗散的Forcing之后，流体的运动方程就完整了，Hydro模块会结合重力场去求解流体的状态演变。</p><div class="note primary no-icon flat"><p><strong>Primitive | Conserved</strong><br>Forcing部分的代码中涉及了u，w两个范参数，分别代表了保守量和状态量，这是继承与Athena++的特征。<br>Athena++使用<code>u</code>来表示<code>conserved variables</code>，如<code>density</code>, <code>momentums</code>, <code>total energy (kinetic + internal)</code>。这些量是保守量，也是广延量，可扩展量； 而使用<code>w</code>来并表示<code>primitive variables</code>，如<code>temperature</code>, <code>velocities</code>, and <code>pressure</code>，这些量都是强度量，也是状态量。这两者在&lt;AthenaArray.hpp&gt;类库中定义：<code>AthenaArray&lt;Real&gt; u, w</code></p><p>这一问题的说明请见<a href="https://doi.org/10.3847/1538-4365/aafdaa">【Appendix B: Conversion between Primitive Variables and Conserved Variables】</a> </p><p><a href="https://github.com/PrincetonUniversity/athena/blob/master/src/athena.hpp">athena&#x2F;src&#x2F;athena.hpp</a> 里这样定义这些变量的枚举下标：</p><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">//! array indices for conserved u : density, momemtum, total energy</span></span><br><span class="line"><span class="keyword">enum</span> <span class="title class_">ConsIndex</span> &#123;IDN=<span class="number">0</span>, IM1=<span class="number">1</span>, IM2=<span class="number">2</span>, IM3=<span class="number">3</span>, IEN=<span class="number">4</span>&#125;;</span><br><span class="line"><span class="comment">//! array indices for face-centered field</span></span><br><span class="line"><span class="keyword">enum</span> <span class="title class_">MagneticIndex</span> &#123;IB1=<span class="number">0</span>, IB2=<span class="number">1</span>, IB3=<span class="number">2</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//! array indices for 1D primitives w: velocity, transverse components of field</span></span><br><span class="line"><span class="keyword">enum</span> <span class="title class_">PrimIndex</span> &#123;IVX=<span class="number">1</span>, IVY=<span class="number">2</span>, IVZ=<span class="number">3</span>, IPR=<span class="number">4</span>, IBY=(NHYDRO), IBZ=((NHYDRO)+<span class="number">1</span>)&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//! array indices for face-centered electric fields returned by Riemann solver</span></span><br><span class="line"><span class="keyword">enum</span> <span class="title class_">ElectricIndex</span> &#123;X1E2=<span class="number">0</span>, X1E3=<span class="number">1</span>, X2E3=<span class="number">0</span>, X2E1=<span class="number">1</span>, X3E1=<span class="number">0</span>, X3E2=<span class="number">1</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//! array indices for metric matrices in GR</span></span><br><span class="line"><span class="keyword">enum</span> <span class="title class_">MetricIndex</span> &#123;I00=<span class="number">0</span>, I01=<span class="number">1</span>, I02=<span class="number">2</span>, I03=<span class="number">3</span>, I11=<span class="number">4</span>, I12=<span class="number">5</span>, I13=<span class="number">6</span>, I22=<span class="number">7</span>, I23=<span class="number">8</span>, I33=<span class="number">9</span>,</span><br><span class="line">                  NMETRIC=<span class="number">10</span>&#125;;</span><br><span class="line"><span class="comment">//! array indices for triangular matrices in GR</span></span><br><span class="line"><span class="keyword">enum</span> <span class="title class_">TriangleIndex</span> &#123;T00=<span class="number">0</span>, T10=<span class="number">1</span>, T11=<span class="number">2</span>, T20=<span class="number">3</span>, T21=<span class="number">4</span>, T22=<span class="number">5</span>, T30=<span class="number">6</span>, T31=<span class="number">7</span>, T32=<span class="number">8</span>, T33=<span class="number">9</span>,</span><br><span class="line">                    NTRIANGULAR=<span class="number">10</span>&#125;;</span><br></pre></td></tr></table></figure><p>由此，常用的一些量在程序中表示为：</p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">w[IPR] = Press;</span><br><span class="line">w[IDN] = Temperature;</span><br><span class="line">w[IVX] = verlocity in dimension x</span><br><span class="line">u[IDN] = Density</span><br><span class="line">u[IM1] = Momentums in dimension x</span><br><span class="line">u[IEN] = Total Energy</span><br></pre></td></tr></table></figure></div><h3 id="初始化Mesh类参数"><a href="#初始化Mesh类参数" class="headerlink" title="初始化Mesh类参数"></a>初始化Mesh类参数</h3><p>这是初始化程序特定变量的地方。注意这个函数是Mesh类的成员函数，而不是我们一直在使用的MeshBlock类的成员函数。<br>Mesh类是一个全包括的类，管理多个MeshBlock，而MeshBlock类管理所有物理相关模块；在实例化这两个类的过程中，应该首先实例化Mesh类，然后它在内部实例化所有的MeshBlock。<br>因此，这个子程序在所有MeshBlock之前运行。</p><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">Mesh::InitUserMeshData</span><span class="params">(ParameterInput *pin)</span> </span>&#123;</span><br><span class="line">  <span class="comment">// 在这里设置程序特定的驱动参数。</span></span><br><span class="line">  <span class="comment">// 这些参数来自输入文件，由ParameterInput类解析。</span></span><br><span class="line">  Real gamma = pin-&gt;<span class="built_in">GetReal</span>(<span class="string">&quot;hydro&quot;</span>, <span class="string">&quot;gamma&quot;</span>);  <span class="comment">// gamma = C_p/C_v   specific heats</span></span><br><span class="line">  K = pin-&gt;<span class="built_in">GetReal</span>(<span class="string">&quot;problem&quot;</span>, <span class="string">&quot;K&quot;</span>);    <span class="comment">// viscious coefficient</span></span><br><span class="line">  p0 = pin-&gt;<span class="built_in">GetReal</span>(<span class="string">&quot;problem&quot;</span>, <span class="string">&quot;p0&quot;</span>);  <span class="comment">//  surface pressure</span></span><br><span class="line">  Rd = pin-&gt;<span class="built_in">GetReal</span>(<span class="string">&quot;thermodynamics&quot;</span>, <span class="string">&quot;Rd&quot;</span>);  <span class="comment">// specific gas constant for dry air [J/(kg·K)]</span></span><br><span class="line">  cp = gamma / (gamma - <span class="number">1.</span>) * Rd;   <span class="comment">// specific heat at constant pressure [J/(kg·K)]</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// 这行代码注册我们在上一部分中编写的Forcing Function。</span></span><br><span class="line">  <span class="built_in">EnrollUserExplicitSourceFunction</span>(Diffusion);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>上述的，$K, P_0, R_d, c_p,\gamma$ 等参数都属于Mesh类的成员参数，适用于所有MeshBlock实例，而且此处要注册一个forcingfunction，所以要在此处先读取并Initalize。</p><h3 id="初始化MeshBlock参数"><a href="#初始化MeshBlock参数" class="headerlink" title="初始化MeshBlock参数"></a>初始化MeshBlock参数</h3><p>这是程序的最后一部分，我们在其中设置初始条件。在Athena++应用程序中，一般称为<code>problem generator</code>。<br>这部分可以理解成初始时刻，对每个MeshBlock进行设置。</p><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">MeshBlock::ProblemGenerator</span><span class="params">(ParameterInput *pin)</span> </span>&#123;</span><br><span class="line">  <span class="comment">// 获取重力的值。正值表示向上，负值表示向下。</span></span><br><span class="line">  <span class="comment">// 我们取负值以获得绝对值。</span></span><br><span class="line">  Real grav = -phydro-&gt;hsrc.<span class="built_in">GetG1</span>();</span><br><span class="line">  <span class="comment">// 这些行读取输入文件中的参数值，这些参数以节的形式组织。</span></span><br><span class="line">  <span class="comment">// 问题特定的参数通常放在`&lt;problem&gt;`节下。</span></span><br><span class="line">  Real Ts = pin-&gt;<span class="built_in">GetReal</span>(<span class="string">&quot;problem&quot;</span>, <span class="string">&quot;Ts&quot;</span>);</span><br><span class="line">  Real xc = pin-&gt;<span class="built_in">GetReal</span>(<span class="string">&quot;problem&quot;</span>, <span class="string">&quot;xc&quot;</span>);</span><br><span class="line">  Real xr = pin-&gt;<span class="built_in">GetReal</span>(<span class="string">&quot;problem&quot;</span>, <span class="string">&quot;xr&quot;</span>);</span><br><span class="line">  Real zc = pin-&gt;<span class="built_in">GetReal</span>(<span class="string">&quot;problem&quot;</span>, <span class="string">&quot;zc&quot;</span>);</span><br><span class="line">  Real zr = pin-&gt;<span class="built_in">GetReal</span>(<span class="string">&quot;problem&quot;</span>, <span class="string">&quot;zr&quot;</span>);</span><br><span class="line">  Real dT = pin-&gt;<span class="built_in">GetReal</span>(<span class="string">&quot;problem&quot;</span>, <span class="string">&quot;dT&quot;</span>);</span><br></pre></td></tr></table></figure><p>循环遍历网格。目的是在每个单元格中心网格上设置温度、压力和密度场。<br>按照straka problem的情景，初始时刻应该是：<br>1）有一个绝热大气的温压场，使用了大气状态方程（EOS, Equation of State）先对大气进行构建；<br>$$<br>\begin{align}<br> p&#x3D;p_0(\frac{T}{T_s})^{c_p&#x2F;R_d}<br>\end{align}<br>$$<br>2）在此基础上叠加一个冷的气泡的温度异常导致的温度场，公式（1）。</p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = js; j &lt;= je; ++j) &#123;</span><br><span class="line">  <span class="keyword">for</span> (<span class="type">int</span> i = is; i &lt;= ie; ++i) &#123;</span><br><span class="line">    <span class="comment">// 获取垂直和水平方向的笛卡尔坐标。`x1`通常是垂直方向，`x2`是水平方向。</span></span><br><span class="line">    <span class="comment">// `x1v`和`x2v`检索单元格中心的坐标。</span></span><br><span class="line">    Real x1 = pcoord-&gt;<span class="built_in">x1v</span>(i);</span><br><span class="line">    Real x2 = pcoord-&gt;<span class="built_in">x2v</span>(j);</span><br><span class="line">    <span class="comment">// 到（xc，zc）处冷空气泡中心的距离。</span></span><br><span class="line">    Real L = <span class="built_in">sqrt</span>(<span class="built_in">sqr</span>((x2 - xc) / xr) + <span class="built_in">sqr</span>((x1 - zc) / zr));</span><br><span class="line">    <span class="comment">// 绝热温度梯度。</span></span><br><span class="line">    Real temp = Ts - grav * x1 / cp;</span><br><span class="line">    <span class="comment">// 一旦知道温度，就可以计算绝热和静力压力，公式为</span></span><br><span class="line">    <span class="comment">// $p=p_0(\frac&#123;T&#125;&#123;T_s&#125;)^&#123;c_p/R_d&#125;$，其中$p_0$是地表压力，$T_s$是地表温度。</span></span><br><span class="line">    phydro-&gt;<span class="built_in">w</span>(IPR, j, i) = p0 * <span class="built_in">pow</span>(temp / Ts, cp / Rd);</span><br><span class="line">    <span class="keyword">if</span> (L &lt;= <span class="number">1.</span>) temp += dT * (<span class="built_in">cos</span>(M_PI * L) + <span class="number">1.</span>) / <span class="number">2.</span>;</span><br><span class="line">    <span class="comment">// 使用理想气体定律设置密度。</span></span><br><span class="line">    phydro-&gt;<span class="built_in">w</span>(IDN, j, i) = phydro-&gt;<span class="built_in">w</span>(IPR, j, i) / (Rd * temp);</span><br><span class="line">    <span class="comment">// 将速度初始化为零。</span></span><br><span class="line">    phydro-&gt;<span class="built_in">w</span>(IVX, j, i) = phydro-&gt;<span class="built_in">w</span>(IVY, j, i) = <span class="number">0.</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我们已经设置了所有的<code>primitive variables</code>。最后一步是基于<code>primitive variables</code>计算<code>conserved variables</code>。<br>这是通过调用成员函数<code>EquationOfState::PrimitiveToConserved</code>完成的。<br>注意，<code>pfield->bcc</code>是一个占位符，因为这个示例中没有MHD涉及。</p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">  peos-&gt;<span class="built_in">PrimitiveToConserved</span>(phydro-&gt;w, pfield-&gt;bcc, phydro-&gt;u, pcoord, is, ie, js, je, ks, ke);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="源码和输入文件"><a href="#源码和输入文件" class="headerlink" title="源码和输入文件"></a>源码和输入文件</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* -------------------------------------------------------------------------------------</span></span><br><span class="line"><span class="comment"> * SNAP Example Program</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * Contributer:</span></span><br><span class="line"><span class="comment"> * Cheng Li, University of Michigan</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * Year: 2021</span></span><br><span class="line"><span class="comment"> * Contact: chengcli@umich.edu</span></span><br><span class="line"><span class="comment"> * Reference: Straka et al., 1993</span></span><br><span class="line"><span class="comment"> * -------------------------------------------------------------------------------------</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"> </span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;athena/athena.hpp&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;athena/athena_arrays.hpp&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;athena/stride_iterator.hpp&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;athena/parameter_input.hpp&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;athena/coordinates/coordinates.hpp&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;athena/eos/eos.hpp&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;athena/hydro/hydro.hpp&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;athena/field/field.hpp&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;athena/mesh/mesh.hpp&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;impl.hpp&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;snap/thermodynamics/thermodynamics.hpp&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;climath/core.h&gt;</span></span></span><br><span class="line"> </span><br><span class="line">Real K, p0, cp, Rd;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">MeshBlock::InitUserMeshBlockData</span><span class="params">(ParameterInput *pin)</span> </span>&#123;</span><br><span class="line">  <span class="built_in">AllocateUserOutputVariables</span>(<span class="number">2</span>);</span><br><span class="line">  <span class="built_in">SetUserOutputVariableName</span>(<span class="number">0</span>, <span class="string">&quot;temp&quot;</span>);</span><br><span class="line">  <span class="built_in">SetUserOutputVariableName</span>(<span class="number">1</span>, <span class="string">&quot;theta&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">MeshBlock::UserWorkBeforeOutput</span><span class="params">(ParameterInput *pin)</span> </span>&#123;</span><br><span class="line">  <span class="keyword">auto</span> pthermo = Thermodynamics::<span class="built_in">GetInstance</span>();</span><br><span class="line"> </span><br><span class="line">  <span class="type">int</span> k = ks;</span><br><span class="line">  <span class="keyword">for</span> (<span class="type">int</span> j = js; j &lt;= je; ++j)</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = is; i &lt;= ie; ++i) &#123;</span><br><span class="line">      <span class="built_in">user_out_var</span>(<span class="number">0</span>, j, i) = pthermo-&gt;<span class="built_in">GetTemp</span>(<span class="keyword">this</span>, k, j, i);</span><br><span class="line">      <span class="built_in">user_out_var</span>(<span class="number">1</span>, j, i) = pthermo-&gt;<span class="built_in">PotentialTemp</span>(<span class="keyword">this</span>, p0, k, j, i);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Diffusion</span><span class="params">(MeshBlock *pmb, Real <span class="type">const</span> time, Real <span class="type">const</span> dt,</span></span></span><br><span class="line"><span class="params"><span class="function">               AthenaArray&lt;Real&gt; <span class="type">const</span> &amp;w, AthenaArray&lt;Real&gt; <span class="type">const</span> &amp;r,</span></span></span><br><span class="line"><span class="params"><span class="function">               AthenaArray&lt;Real&gt; <span class="type">const</span> &amp;bcc, AthenaArray&lt;Real&gt; &amp;u,</span></span></span><br><span class="line"><span class="params"><span class="function">               AthenaArray&lt;Real&gt; &amp;s)</span> </span>&#123;</span><br><span class="line">  Real dx = pmb-&gt;pcoord-&gt;<span class="built_in">dx1f</span>(pmb-&gt;is);</span><br><span class="line">  Real dy = pmb-&gt;pcoord-&gt;<span class="built_in">dx2f</span>(pmb-&gt;js);</span><br><span class="line"> </span><br><span class="line">  <span class="keyword">auto</span> pthermo = Thermodynamics::<span class="built_in">GetInstance</span>();</span><br><span class="line"> </span><br><span class="line">  <span class="type">int</span> k = pmb-&gt;ks;</span><br><span class="line">  <span class="keyword">for</span> (<span class="type">int</span> j = pmb-&gt;js; j &lt;= pmb-&gt;je; ++j)</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = pmb-&gt;is; i &lt;= pmb-&gt;ie; ++i) &#123;</span><br><span class="line">      Real temp = pthermo-&gt;<span class="built_in">GetTemp</span>(pmb, pmb-&gt;ks, j, i);</span><br><span class="line">      Real theta = pthermo-&gt;<span class="built_in">PotentialTemp</span>(pmb, p0, pmb-&gt;ks, j, i);</span><br><span class="line"> </span><br><span class="line">      Real theta_ip1_j = pthermo-&gt;<span class="built_in">PotentialTemp</span>(pmb, p0, k, j + <span class="number">1</span>, i);</span><br><span class="line">      Real theta_im1_j = pthermo-&gt;<span class="built_in">PotentialTemp</span>(pmb, p0, k, j - <span class="number">1</span>, i);</span><br><span class="line">      Real theta_i_jp1 = pthermo-&gt;<span class="built_in">PotentialTemp</span>(pmb, p0, k, j, i + <span class="number">1</span>);</span><br><span class="line">      Real theta_i_jm1 = pthermo-&gt;<span class="built_in">PotentialTemp</span>(pmb, p0, k, j, i - <span class="number">1</span>);</span><br><span class="line"> </span><br><span class="line">      <span class="built_in">u</span>(IM1, j, i) += dt * K * <span class="built_in">w</span>(IDN, j, i) / (dx * dy) *</span><br><span class="line">                      (<span class="built_in">w</span>(IVX, j, i - <span class="number">1</span>) + <span class="built_in">w</span>(IVX, j, i + <span class="number">1</span>) + <span class="built_in">w</span>(IVX, j - <span class="number">1</span>, i) +</span><br><span class="line">                       <span class="built_in">w</span>(IVX, j + <span class="number">1</span>, i) - <span class="number">4.</span> * <span class="built_in">w</span>(IVX, j, i));</span><br><span class="line">      <span class="built_in">u</span>(IM2, j, i) += dt * K * <span class="built_in">w</span>(IDN, j, i) / (dx * dy) *</span><br><span class="line">                      (<span class="built_in">w</span>(IVY, j, i - <span class="number">1</span>) + <span class="built_in">w</span>(IVY, j, i + <span class="number">1</span>) + <span class="built_in">w</span>(IVY, j - <span class="number">1</span>, i) +</span><br><span class="line">                       <span class="built_in">w</span>(IVY, j + <span class="number">1</span>, i) - <span class="number">4.</span> * <span class="built_in">w</span>(IVY, j, i));</span><br><span class="line"> </span><br><span class="line">      <span class="built_in">u</span>(IEN, j, i) +=</span><br><span class="line">          dt * K * <span class="built_in">w</span>(IDN, j, i) / (dx * dy) * cp * temp / theta *</span><br><span class="line">          (theta_ip1_j + theta_im1_j + theta_i_jp1 + theta_i_jm1 - <span class="number">4.</span> * theta);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Mesh::InitUserMeshData</span><span class="params">(ParameterInput *pin)</span> </span>&#123;</span><br><span class="line">  Real gamma = pin-&gt;<span class="built_in">GetReal</span>(<span class="string">&quot;hydro&quot;</span>, <span class="string">&quot;gamma&quot;</span>);</span><br><span class="line">  K = pin-&gt;<span class="built_in">GetReal</span>(<span class="string">&quot;problem&quot;</span>, <span class="string">&quot;K&quot;</span>);</span><br><span class="line">  p0 = pin-&gt;<span class="built_in">GetReal</span>(<span class="string">&quot;problem&quot;</span>, <span class="string">&quot;p0&quot;</span>);</span><br><span class="line">  Rd = pin-&gt;<span class="built_in">GetReal</span>(<span class="string">&quot;thermodynamics&quot;</span>, <span class="string">&quot;Rd&quot;</span>);</span><br><span class="line">  cp = gamma / (gamma - <span class="number">1.</span>) * Rd;</span><br><span class="line"> </span><br><span class="line">  <span class="built_in">EnrollUserExplicitSourceFunction</span>(Diffusion);</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">MeshBlock::ProblemGenerator</span><span class="params">(ParameterInput *pin)</span> </span>&#123;</span><br><span class="line">  Real grav = -phydro-&gt;hsrc.<span class="built_in">GetG1</span>();</span><br><span class="line">  Real Ts = pin-&gt;<span class="built_in">GetReal</span>(<span class="string">&quot;problem&quot;</span>, <span class="string">&quot;Ts&quot;</span>);</span><br><span class="line">  Real xc = pin-&gt;<span class="built_in">GetReal</span>(<span class="string">&quot;problem&quot;</span>, <span class="string">&quot;xc&quot;</span>);</span><br><span class="line">  Real xr = pin-&gt;<span class="built_in">GetReal</span>(<span class="string">&quot;problem&quot;</span>, <span class="string">&quot;xr&quot;</span>);</span><br><span class="line">  Real zc = pin-&gt;<span class="built_in">GetReal</span>(<span class="string">&quot;problem&quot;</span>, <span class="string">&quot;zc&quot;</span>);</span><br><span class="line">  Real zr = pin-&gt;<span class="built_in">GetReal</span>(<span class="string">&quot;problem&quot;</span>, <span class="string">&quot;zr&quot;</span>);</span><br><span class="line">  Real dT = pin-&gt;<span class="built_in">GetReal</span>(<span class="string">&quot;problem&quot;</span>, <span class="string">&quot;dT&quot;</span>);</span><br><span class="line"> </span><br><span class="line">  <span class="keyword">for</span> (<span class="type">int</span> j = js; j &lt;= je; ++j) &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = is; i &lt;= ie; ++i) &#123;</span><br><span class="line">      Real x1 = pcoord-&gt;<span class="built_in">x1v</span>(i);</span><br><span class="line">      Real x2 = pcoord-&gt;<span class="built_in">x2v</span>(j);</span><br><span class="line">      Real L = <span class="built_in">sqrt</span>(<span class="built_in">sqr</span>((x2 - xc) / xr) + <span class="built_in">sqr</span>((x1 - zc) / zr));</span><br><span class="line">      Real temp = Ts - grav * x1 / cp;</span><br><span class="line">      phydro-&gt;<span class="built_in">w</span>(IPR, j, i) = p0 * <span class="built_in">pow</span>(temp / Ts, cp / Rd);</span><br><span class="line">      <span class="keyword">if</span> (L &lt;= <span class="number">1.</span>) temp += dT * (<span class="built_in">cos</span>(M_PI * L) + <span class="number">1.</span>) / <span class="number">2.</span>;</span><br><span class="line">      phydro-&gt;<span class="built_in">w</span>(IDN, j, i) = phydro-&gt;<span class="built_in">w</span>(IPR, j, i) / (Rd * temp);</span><br><span class="line">      phydro-&gt;<span class="built_in">w</span>(IVX, j, i) = phydro-&gt;<span class="built_in">w</span>(IVY, j, i) = <span class="number">0.</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"> </span><br><span class="line">  peos-&gt;<span class="built_in">PrimitiveToConserved</span>(phydro-&gt;w, pfield-&gt;bcc, phydro-&gt;u, pcoord, is, ie,</span><br><span class="line">                             js, je, ks, ke);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment">#straks.inp</span></span><br><span class="line"><span class="string">&lt;comment&gt;</span></span><br><span class="line"><span class="string">sroblem</span>   <span class="string">=</span> <span class="string">Dense</span> <span class="string">sinking</span> <span class="string">bubble</span> <span class="string">test</span></span><br><span class="line"><span class="string">reference</span> <span class="string">=</span> <span class="string">Straka</span> <span class="string">et</span> <span class="string">al.,</span> <span class="number">1993</span></span><br><span class="line"><span class="string">configure</span> <span class="string">=</span> <span class="string">--prob=straka</span> <span class="string">--nghost=3</span> <span class="string">-netcdf</span> <span class="comment">## 不再使用这种方法</span></span><br><span class="line"></span><br><span class="line"><span class="string">&lt;job&gt;</span></span><br><span class="line"><span class="string">problem_id</span> <span class="string">=</span> <span class="string">straka</span>       <span class="comment"># problem ID: basename of output filenames</span></span><br><span class="line"></span><br><span class="line"><span class="string">&lt;output1&gt;</span></span><br><span class="line"><span class="string">file_type</span>  <span class="string">=</span> <span class="string">hst</span>          <span class="comment"># History data dump</span></span><br><span class="line"><span class="string">dt</span>         <span class="string">=</span> <span class="number">300</span><span class="string">.</span>          <span class="comment"># time increment between outputs</span></span><br><span class="line"></span><br><span class="line"><span class="string">&lt;output2&gt;</span></span><br><span class="line"><span class="string">file_type</span>  <span class="string">=</span> <span class="string">netcdf</span>      <span class="comment"># Binary data dump</span></span><br><span class="line"><span class="string">variable</span>   <span class="string">=</span> <span class="string">prim</span>         <span class="comment"># variables to be output</span></span><br><span class="line"><span class="string">dt</span>         <span class="string">=</span> <span class="number">300</span><span class="string">.</span>          <span class="comment"># time increment between outputs</span></span><br><span class="line"></span><br><span class="line"><span class="string">&lt;output3&gt;</span></span><br><span class="line"><span class="string">file_type</span>  <span class="string">=</span> <span class="string">netcdf</span></span><br><span class="line"><span class="string">variable</span>   <span class="string">=</span> <span class="string">uov</span></span><br><span class="line"><span class="string">dt</span>         <span class="string">=</span> <span class="number">300</span><span class="string">.</span></span><br><span class="line"></span><br><span class="line"><span class="string">&lt;time&gt;</span></span><br><span class="line"><span class="string">cfl_number</span> <span class="string">=</span> <span class="number">0.9</span>          <span class="comment"># The Courant, Friedrichs, &amp; Lewy (CFL) Number</span></span><br><span class="line"><span class="string">nlim</span>       <span class="string">=</span> <span class="number">-1</span>           <span class="comment"># cycle limit</span></span><br><span class="line"><span class="string">tlim</span>       <span class="string">=</span> <span class="number">900</span>          <span class="comment"># time limit</span></span><br><span class="line"><span class="string">xorder</span>     <span class="string">=</span> <span class="number">5</span>            <span class="comment"># horizontal reconstruction order</span></span><br><span class="line"><span class="string">integrator</span> <span class="string">=</span> <span class="string">rk3</span>          <span class="comment"># integration method</span></span><br><span class="line"><span class="string">ncycle_out</span> <span class="string">=</span> <span class="number">10</span>           <span class="comment"># output frequency</span></span><br><span class="line"></span><br><span class="line"><span class="string">&lt;mesh&gt;</span></span><br><span class="line"><span class="string">nx1</span>        <span class="string">=</span> <span class="number">64</span>           <span class="comment"># Number of zones in X1-direction</span></span><br><span class="line"><span class="string">x1min</span>      <span class="string">=</span> <span class="number">0</span><span class="string">.</span>           <span class="comment"># minimum value of X1</span></span><br><span class="line"><span class="string">x1max</span>      <span class="string">=</span> <span class="number">6.4E3</span>        <span class="comment"># maximum value of X1</span></span><br><span class="line"><span class="string">ix1_bc</span>     <span class="string">=</span> <span class="string">reflecting</span>   <span class="comment"># inner-X1 boundary flag</span></span><br><span class="line"><span class="string">ox1_bc</span>     <span class="string">=</span> <span class="string">reflecting</span>   <span class="comment"># outer-X1 boundary flag</span></span><br><span class="line"></span><br><span class="line"><span class="string">nx2</span>        <span class="string">=</span> <span class="number">256</span>          <span class="comment"># Number of zones in X2-direction</span></span><br><span class="line"><span class="string">x2min</span>      <span class="string">=</span> <span class="number">0</span><span class="string">.</span>           <span class="comment"># minimum value of X2</span></span><br><span class="line"><span class="string">x2max</span>      <span class="string">=</span> <span class="number">25.6E3</span>       <span class="comment"># maximum value of X2</span></span><br><span class="line"><span class="string">ix2_bc</span>     <span class="string">=</span> <span class="string">reflecting</span>   <span class="comment"># inner-X2 boundary flag</span></span><br><span class="line"><span class="string">ox2_bc</span>     <span class="string">=</span> <span class="string">reflecting</span>   <span class="comment"># outer-X2 boundary flag</span></span><br><span class="line"></span><br><span class="line"><span class="string">nx3</span>        <span class="string">=</span> <span class="number">1</span>            <span class="comment"># Number of zones in X3-direction</span></span><br><span class="line"><span class="string">x3min</span>      <span class="string">=</span> <span class="number">-0.5</span>         <span class="comment"># minimum value of X3</span></span><br><span class="line"><span class="string">x3max</span>      <span class="string">=</span> <span class="number">0.5</span>          <span class="comment"># maximum value of X3</span></span><br><span class="line"><span class="string">ix3_bc</span>     <span class="string">=</span> <span class="string">periodic</span>     <span class="comment"># inner-X3 boundary flag</span></span><br><span class="line"><span class="string">ox3_bc</span>     <span class="string">=</span> <span class="string">periodic</span>     <span class="comment"># outer-X3 boundary flag</span></span><br><span class="line"></span><br><span class="line"><span class="string">&lt;hydro&gt;</span></span><br><span class="line"><span class="string">grav_acc1</span>   <span class="string">=</span> <span class="number">-9.8</span></span><br><span class="line"><span class="string">gamma</span>       <span class="string">=</span> <span class="number">1.4</span>         <span class="comment"># gamma = C_p/C_v</span></span><br><span class="line"></span><br><span class="line"><span class="string">&lt;thermodynamics&gt;</span></span><br><span class="line"><span class="string">Rd</span>          <span class="string">=</span> <span class="number">287</span><span class="string">.</span></span><br><span class="line"></span><br><span class="line"><span class="string">&lt;problem&gt;</span></span><br><span class="line"><span class="string">dT</span>    <span class="string">=</span> <span class="number">-15</span><span class="string">.</span></span><br><span class="line"><span class="string">xc</span>    <span class="string">=</span> <span class="number">0</span><span class="string">.</span></span><br><span class="line"><span class="string">xr</span>    <span class="string">=</span> <span class="number">4.E3</span></span><br><span class="line"><span class="string">zc</span>    <span class="string">=</span> <span class="number">3.E3</span></span><br><span class="line"><span class="string">zr</span>    <span class="string">=</span> <span class="number">2.E3</span></span><br><span class="line"><span class="string">p0</span>    <span class="string">=</span> <span class="number">1.E5</span></span><br><span class="line"><span class="string">Ts</span>    <span class="string">=</span> <span class="number">300</span><span class="string">.</span></span><br><span class="line"><span class="string">K</span>     <span class="string">=</span> <span class="number">75</span><span class="string">.</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="TODO-LIST"><a href="#TODO-LIST" class="headerlink" title="TODO LIST"></a>TODO LIST</h2><ul><li><input disabled="" type="checkbox"> Athena++ Mesh网格介绍；</li><li><input disabled="" type="checkbox"> 模式的大气热力学基础；</li><li><input disabled="" type="checkbox"> 大气流体力学基础</li></ul>]]></content>
      
      
      <categories>
          
          <category> Research </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Canoe </tag>
            
            <tag> Hydrodynamics </tag>
            
            <tag> Thermodynaics </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>TELSEM Emissivity Atlas的离线使用</title>
      <link href="/blog/research/rttov/rttov132-telsem2-atlas/"/>
      <url>/blog/research/rttov/rttov132-telsem2-atlas/</url>
      
        <content type="html"><![CDATA[<h2 id="Intro"><a href="#Intro" class="headerlink" title="Intro"></a>Intro</h2><p>在Direct Forward的晴空模拟的章节，我们介绍过使用TELSEM2 Atlas进行RTTOV模拟，这里单开一节对这个数据集的离线使用进行介绍。<br>TELSEM 由CNRS的F.Aires和C. Priegent 在<a href="#References">《A Tool to Estimate Land-Surface Emissivities at Microwave frequencies (TELSEM) for use in numerical weather prediction》</a> 中提出。TELSEM基于SSM&#x2F;I地表发射率数据集(<a href="#References">C. Prigent, 1997</a>)的19V&amp;H, 22V, 37V&amp;H, 85V&amp;H等通道的Emissivity进行频率插值，得到月平均的，具有一定空间分辨率的（或固定经纬度）的全球陆面微波发射率，其适用频段为10 – 700 GHz.<br>本节只介绍单独使用TELSEM进行气候态地表发射率估算的方法，不会涉及如何在RTTOV的模拟中使用TEMSEM。</p><h2 id="下载TELSEM2-Atlas"><a href="#下载TELSEM2-Atlas" class="headerlink" title="下载TELSEM2 Atlas"></a>下载TELSEM2 Atlas</h2><p>下载页：<a href="https://nwp-saf.eumetsat.int/site/software/rttov/download/#Emissivity_BRDF_atlas_data">https://nwp-saf.eumetsat.int/site/software/rttov/download/#Emissivity_BRDF_atlas_data</a><br>下载telsem2_mw_atlas.tar.bz2解压在<code>/home/hjh/rttov13/emis_data/</code>目录下：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> /home/hjh/rttov13/emis_data</span><br><span class="line">$ tar -xvf telsem2_mw_atlas.tar.bz2</span><br><span class="line">├── ssmi_mean_emis_climato_01_cov_interpol_M2</span><br><span class="line">├── ssmi_mean_emis_climato_02_cov_interpol_M2</span><br><span class="line">├── ssmi_mean_emis_climato_03_cov_interpol_M2</span><br><span class="line">├── ssmi_mean_emis_climato_04_cov_interpol_M2</span><br><span class="line">├── ssmi_mean_emis_climato_05_cov_interpol_M2</span><br><span class="line">├── ssmi_mean_emis_climato_06_cov_interpol_M2</span><br><span class="line">├── ssmi_mean_emis_climato_07_cov_interpol_M2</span><br><span class="line">├── ssmi_mean_emis_climato_08_cov_interpol_M2</span><br><span class="line">├── ssmi_mean_emis_climato_09_cov_interpol_M2</span><br><span class="line">├── ssmi_mean_emis_climato_10_cov_interpol_M2</span><br><span class="line">├── ssmi_mean_emis_climato_11_cov_interpol_M2</span><br><span class="line">├── ssmi_mean_emis_climato_12_cov_interpol_M2</span><br><span class="line">├── telsem2</span><br><span class="line">│   ├── Makefile</span><br><span class="line">│   ├── mod_mwatlas_m2.F90</span><br><span class="line">│   ├── README_TELSEM2.pdf</span><br><span class="line">│   ├── readme.txt</span><br><span class="line">│   └── test_telsem2.F90</span><br><span class="line">└── correlations</span><br></pre></td></tr></table></figure><p>telsem包含了ASCII方式存储的Atlas和独立的Fortran读取代码，可以在别的地方使用。RTTOV内置了针对TELSEM2的发射率地图和相应的插值工具的支持。</p><h2 id="离线使用Atlas"><a href="#离线使用Atlas" class="headerlink" title="离线使用Atlas"></a>离线使用Atlas</h2><p><code>mod_mwatlas_m2.F90</code>提供了使用telsem的接口，<code>test_telsem2.F90</code>提供了示例脚本：<br>较为核心的设定包括，经纬度，频率，月份和分辨率</p><figure class="highlight fortran"><table><tr><td class="code"><pre><span class="line">resol    = <span class="number">0.25</span></span><br><span class="line">theta    = <span class="number">15.</span></span><br><span class="line"></span><br><span class="line">lat      = -<span class="number">30.</span></span><br><span class="line">lon      = <span class="number">302.</span></span><br><span class="line">freq     = <span class="number">30.</span>                          <span class="comment">! For single frequency experiment</span></span><br><span class="line">freq2(:) = (/<span class="number">30.</span>, <span class="number">25.</span>, <span class="number">38.</span>, <span class="number">60.</span>, <span class="number">90.</span> /) <span class="comment">! For multiple frequency experiment</span></span><br><span class="line">i        = <span class="number">1</span>                            <span class="comment">! Index of freq in freq2 array</span></span><br></pre></td></tr></table></figure><p>运行如下：</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[hjh@node05] ~/rttov13/emis_data/telsem2 $ make -f Makefile </span><br><span class="line">[hjh@node05] ~/rttov13/emis_data/telsem2 $ ./test_telsem2 </span><br></pre></td></tr></table></figure><p>stdout&gt;&gt;</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Reading atlas for month   9</span><br><span class="line">Reading number of data in atlas...</span><br><span class="line">Nb data=    233959</span><br><span class="line">reading classes...</span><br><span class="line"> </span><br><span class="line">Inputs:</span><br><span class="line">lat   =   -30.00</span><br><span class="line">lon   =   302.00</span><br><span class="line">theta =    15.00</span><br><span class="line">freq  =    30.00</span><br><span class="line"> </span><br><span class="line">The first four sets of output are identical:</span><br><span class="line"> </span><br><span class="line">Single freq, no spatial averaging</span><br><span class="line">Emis V-pol, H-pol   =   0.954829  0.954446</span><br><span class="line">Stddev V-pol, H-pol =   0.020591  0.021068</span><br><span class="line">Covariance V-/H-pol =   0.000372</span><br><span class="line"> </span><br><span class="line">Multiple freq, no spatial averaging</span><br><span class="line">Emis V-pol, H-pol   =   0.954829  0.954446</span><br><span class="line">Stddev V-pol, H-pol =   0.020591  0.021068</span><br><span class="line">Covariance V-/H-pol =   0.000372</span><br><span class="line"> </span><br><span class="line">Single freq, with spatial averaging, native resol.</span><br><span class="line">Emis V-pol, H-pol   =   0.954829  0.954446</span><br><span class="line">Stddev V-pol, H-pol =   0.020591  0.021068</span><br><span class="line">Covariance V-/H-pol =   0.000372</span><br><span class="line"> </span><br><span class="line">Multiple freq, with spatial averaging, native resol.</span><br><span class="line">Emis V-pol, H-pol   =   0.954829  0.954446</span><br><span class="line">Stddev V-pol, H-pol =   0.020591  0.021068</span><br><span class="line">Covariance V-/H-pol =   0.000372</span><br><span class="line"> </span><br><span class="line">Now the spatial averaging is active and results are different to those above:</span><br><span class="line"> </span><br><span class="line">Single freq, with spatial averaging, non-native resol.</span><br><span class="line">Emis V-pol, H-pol   =   0.952811  0.952665</span><br><span class="line">Stddev V-pol, H-pol =   0.020790  0.023314</span><br><span class="line">Covariance V-/H-pol =   0.000406</span><br><span class="line"> </span><br><span class="line">Multiple freq, with spatial averaging, non-native resol.</span><br><span class="line">Emis V-pol, H-pol   =   0.952811  0.952665</span><br><span class="line">Stddev V-pol, H-pol =   0.020790  0.023314</span><br><span class="line">Covariance V-/H-pol =   0.000406</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">Now only return emissivities and print them for all frequencies:</span><br><span class="line"> </span><br><span class="line">Multiple freq, with spatial averaging, non-native resol.</span><br><span class="line">Freq (GHz) :     30.000    25.000    38.000    60.000    90.000</span><br><span class="line">Emis V-pol =   0.952811  0.954156  0.951043  0.953123  0.955559</span><br><span class="line">Emis H-pol =   0.952665  0.954065  0.950784  0.952975  0.955488</span><br></pre></td></tr></table></figure><h2 id="Global-0-25°-MLSE"><a href="#Global-0-25°-MLSE" class="headerlink" title="Global 0.25° MLSE"></a>Global 0.25° MLSE</h2><p>按照示例脚本，我们可以对经纬度进行循环，制作全球格点平均的地表发射率产品。<br>这里分享一下清扬师弟写的脚本，直接输出ascii文件，对于没有安装NETCDF和HDF扩展的同学比较实用友好：</p><figure class="highlight fortran"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">PROGRAM</span></span> globe_mlse_telsem</span><br><span class="line"><span class="comment">! call TELSEM2 atlas and interpolator to generate global 0.25 degree land surface emissivity on monthly basis</span></span><br><span class="line"><span class="comment">! By Qingyang Liu, Aug, 2023, USTC</span></span><br><span class="line"><span class="comment">! adapted from test_telsem.F90</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">USE</span> mod_mwatlas_m2</span><br><span class="line"></span><br><span class="line">  <span class="keyword">IMPLICIT</span> <span class="keyword">NONE</span></span><br><span class="line">  <span class="keyword">INTEGER</span>       :: m,n</span><br><span class="line">  <span class="keyword">CHARACTER</span>(len=<span class="number">130</span>) fout</span><br><span class="line">  <span class="keyword">CHARACTER</span>(len=<span class="number">2</span>) mm</span><br><span class="line"></span><br><span class="line">  <span class="keyword">INTEGER</span>(jpim) :: error_status</span><br><span class="line"></span><br><span class="line">  <span class="keyword">LOGICAL</span>(jplm) :: verbose   <span class="comment">! For atlas reading subroutine</span></span><br><span class="line">  <span class="keyword">INTEGER</span>(jpim) :: verb      <span class="comment">!=1 for TRUE and 0 for FALSE - for emissivity routines</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">INTEGER</span>(jpim) :: month     <span class="comment">! (1-&gt;12)</span></span><br><span class="line">  <span class="keyword">CHARACTER</span>(LEN=<span class="number">256</span>) :: dir  <span class="comment">! directory of emis database</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">REAL</span>(jprb)    :: resol     <span class="comment">! horizontal resolution for the user</span></span><br><span class="line">  <span class="keyword">REAL</span>(jprb)    :: lat       <span class="comment">! (-90-&gt;90)</span></span><br><span class="line">  <span class="keyword">REAL</span>(jprb)    :: lon       <span class="comment">! (0-&gt;360)</span></span><br><span class="line">  <span class="keyword">REAL</span>(jprb)    :: theta     <span class="comment">! (0-&gt;60�)</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">! For individual freq interpolations</span></span><br><span class="line">  <span class="keyword">REAL</span>(jprb)    :: ev, eh, stdv, stdh, covvh</span><br><span class="line">  <span class="keyword">REAL</span>(jprb)    :: freq      <span class="comment">! (19-&gt;85GHz)</span></span><br><span class="line">  <span class="keyword">INTEGER</span>(jpim) :: i</span><br><span class="line"></span><br><span class="line">  <span class="comment">! For multiple freq interpolations</span></span><br><span class="line">  <span class="keyword">INTEGER</span>(jpim), <span class="keyword">PARAMETER</span> :: nchan = <span class="number">5</span></span><br><span class="line">  <span class="keyword">REAL</span>(jprb)    :: ev2(nchan), eh2(nchan), std(<span class="number">2</span>*nchan,<span class="number">2</span>*nchan)</span><br><span class="line">  <span class="keyword">REAL</span>(jprb)    :: freq2(nchan)</span><br><span class="line"></span><br><span class="line">  <span class="comment">! Structure containing atlas data</span></span><br><span class="line">  <span class="keyword">TYPE</span>(telsem2_atlas_data) :: atlas</span><br><span class="line">  <span class="comment">!--- End of header ----------------------------------</span></span><br><span class="line">  verbose = .TRUE.  <span class="comment">! Verbose output for reading subroutine</span></span><br><span class="line">  verb = <span class="number">0</span>          <span class="comment">! No verbose output for emissivity subroutines</span></span><br><span class="line">  <span class="comment">!====================================================</span></span><br><span class="line">  <span class="comment">! Read the atlas</span></span><br><span class="line">  <span class="comment">!====================================================</span></span><br><span class="line">  dir = <span class="string">&#x27;../&#x27;</span></span><br><span class="line">  month = <span class="number">6</span> <span class="comment">!! modify or do loop to simulate other months</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">! WRITE(0,&#x27;(a,i3)&#x27;) &#x27;Reading atlas for month &#x27;,month</span></span><br><span class="line">  <span class="keyword">CALL</span> rttov_readmw_atlas(<span class="built_in">TRIM</span>(dir), month, atlas, verbose, error_status)</span><br><span class="line">  <span class="keyword">IF</span> (error_status /= <span class="number">0</span>) <span class="keyword">THEN</span></span><br><span class="line">    <span class="built_in">WRITE</span>(<span class="number">0</span>,<span class="string">&#x27;(a)&#x27;</span>) <span class="string">&#x27;Error reading atlas&#x27;</span></span><br><span class="line">    <span class="keyword">STOP</span> <span class="number">1</span></span><br><span class="line">  <span class="keyword">ENDIF</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">!====================================================</span></span><br><span class="line">  <span class="comment">! Calculate emissivities</span></span><br><span class="line">  <span class="comment">!====================================================</span></span><br><span class="line">  <span class="comment">! Multiple frequencies, spatially averaged, return emissivities only</span></span><br><span class="line">  <span class="built_in">write</span>(mm,<span class="string">&quot;%0.2i&quot;</span>) month <span class="comment">!!  to the form &#x27;06&#x27;</span></span><br><span class="line"><span class="comment">!   yue = (/&quot;01&quot;,&quot;02&quot;,&quot;03&quot;,&quot;04&quot;,&quot;05&quot;,&quot;06&quot;,&quot;07&quot;,&quot;08&quot;,&quot;09&quot;,&quot;10&quot;,&quot;11&quot;,&quot;12&quot;/)</span></span><br><span class="line">  fout     =<span class="string">&#x27;SSMI&#x27;</span>//mm//<span class="string">&#x27;.txt&#x27;</span></span><br><span class="line">  resol    = <span class="number">0.25</span></span><br><span class="line">  theta    = <span class="number">53.1</span></span><br><span class="line">  freq     = <span class="number">10.65</span></span><br><span class="line">  freq2(:) = (/<span class="number">10.65</span>, <span class="number">18.7</span>, <span class="number">23.8</span>, <span class="number">36.5</span>, <span class="number">89.0</span>/) <span class="comment">! For multiple frequency experiment</span></span><br><span class="line">  i        = <span class="number">0</span>                          <span class="comment">! Index of freq in freq2 array</span></span><br><span class="line"></span><br><span class="line">  open(<span class="number">15</span>,<span class="keyword">file</span>= <span class="built_in">trim</span>(<span class="built_in">adjustl</span>(fout)))       <span class="comment">!!final product</span></span><br><span class="line">  lat      = -<span class="number">90.</span></span><br><span class="line">  <span class="keyword">do</span> m     = <span class="number">1</span>,<span class="number">720</span></span><br><span class="line">    lon  = <span class="number">0.</span></span><br><span class="line">    <span class="keyword">do</span> n = <span class="number">1</span>,<span class="number">1440</span></span><br><span class="line">      <span class="keyword">CALL</span> emis_interp_int_mult(lat, lon, resol, theta, freq2, nchan, atlas, ev2, eh2, verb = verb)</span><br><span class="line">      <span class="built_in">WRITE</span>(<span class="number">15</span>,<span class="number">100</span>) lat,lon,(ev2(i),i=<span class="number">1</span>,<span class="number">5</span>),(eh2(i),i=<span class="number">1</span>,<span class="number">5</span>)</span><br><span class="line">      lon = lon+<span class="number">0.25</span></span><br><span class="line">    <span class="keyword">end</span> <span class="keyword">do</span></span><br><span class="line">    lat = lat+<span class="number">0.25</span></span><br><span class="line">    <span class="built_in">print</span>*, m</span><br><span class="line">  <span class="keyword">end</span> <span class="keyword">do</span></span><br><span class="line"></span><br><span class="line"> CLOSE(<span class="number">15</span>)</span><br><span class="line"><span class="number">100</span> <span class="keyword">FORMAT</span>(<span class="number">12</span>(<span class="number">1</span>x,f14<span class="number">.6</span>))</span><br><span class="line"></span><br><span class="line">  <span class="comment">!====================================================</span></span><br><span class="line">  <span class="comment">! Close the atlas</span></span><br><span class="line">  <span class="comment">!====================================================</span></span><br><span class="line">  <span class="keyword">CALL</span> rttov_closemw_atlas(atlas)</span><br><span class="line"></span><br><span class="line"><span class="keyword">END</span> <span class="function"><span class="keyword">PROGRAM</span></span> globe_mlse_telsem</span><br></pre></td></tr></table></figure><p>使用其他语言转换成NC文件，或者直接绘图：<br>TELSEM2 6月份地表发射率估算：<br><img src="/blog/research/rttov/rttov132-mw-scat/mlse_in_telsem2_mlse_SSMI_06.png" alt="地表发射率"></p><h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><ol><li>Aires, F., Prigent, C., Bernardo, F., Jiménez, C., Saunders, R. and Brunel, P. (2011), A Tool to Estimate Land-Surface Emissivities at Microwave frequencies (TELSEM) for use in numerical weather prediction. Q.J.R. Meteorol. Soc., 137: 690-699. <a href="https://doi.org/10.1002/qj.803">https://doi.org/10.1002/qj.803</a>.</li><li>Prigent, C., Rossow, W. B., and Matthews, E. (1997), Microwave land surface emissivities estimated from SSM&#x2F;I observations, J. Geophys. Res., 102(D18), 21867–21890. <a href="https://doi.org/10.1029/97JD01360">https://doi.org/10.1029/97JD01360</a>.</li></ol>]]></content>
      
      
      <categories>
          
          <category> Research </category>
          
      </categories>
      
      
        <tags>
            
            <tag> RTM </tag>
            
            <tag> RTTOV </tag>
            
            <tag> TELSEM </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Canoe模式的环境准备</title>
      <link href="/blog/research/canoe-athena/canoe-env/"/>
      <url>/blog/research/canoe-athena/canoe-env/</url>
      
        <content type="html"><![CDATA[<h2 id="What-is-Canoe"><a href="#What-is-Canoe" class="headerlink" title="What is Canoe?"></a>What is Canoe?</h2><blockquote><p>Canoe is an light-weighted extension of an astrophysical code Athena++ to enable atmospheric simulations. We utilize the static&#x2F;adaptive mesh-refinement, parallelization, curvilinear geometry, and dynamic task scheduling innate to the Athena++ code and augment it with a multi-fluid hydrodynamic solver that is specially designed for atmospheric flows involving condensible gases, clouds, hazes and precipitation. The purpose of the model is to fascilitate fundamental atmospheric research while maintaining a certain degree of sophistication and reality to explain the real world observation and phenomena.</p></blockquote><ul><li>CANOE 文档地址：<a href="https://snap.chengcli.io/index.html">https://snap.chengcli.io/index.html</a>；</li><li>CANOE 仓库地址：<a href="https://github.com/chengcli/canoe.git">https://github.com/chengcli/canoe.git</a></li><li>ATHENA++仓库地址：<a href="https://github.com/PrincetonUniversity/athena.git">https://github.com/PrincetonUniversity/athena.git</a></li></ul><h2 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h2><p>本安装环境是RedHat商用系统，如果你用的是其他linux系统，请尝试做对应的依赖库的替换，请参考Canoe仓库的readme文件。</p><h3 id="GitHub仓库拉取源码，安装依赖。"><a href="#GitHub仓库拉取源码，安装依赖。" class="headerlink" title="GitHub仓库拉取源码，安装依赖。"></a>GitHub仓库拉取源码，安装依赖。</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&gt; git <span class="built_in">clone</span> https://github.com/chengcli/canoe</span><br><span class="line">&gt; sudo yum -y install $(<span class="built_in">cat</span> packages_centos.txt) <span class="comment">## 安装必要的依赖</span></span><br></pre></td></tr></table></figure><p>根据版本不同，如果package文件中没有包括mpich，就需要手动下载</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&gt; sudo yum install mpich-devel  <span class="comment">## 安装 MPICH，支持并行</span></span><br><span class="line">&gt; vim ~/bash_profile  <span class="comment">#  添加如下内容</span></span><br><span class="line"> <span class="comment">#/home/jiehnghu/.bash_profile</span></span><br><span class="line"> <span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:/usr/lib64/mpich/bin</span><br><span class="line">&gt; <span class="built_in">source</span> ~/.bash_profile <span class="comment">## 执行生效</span></span><br></pre></td></tr></table></figure><h3 id="科学格式读写相关依赖库"><a href="#科学格式读写相关依赖库" class="headerlink" title="科学格式读写相关依赖库"></a>科学格式读写相关依赖库</h3><p>安装支持NETCDF格式IO的库</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&gt; <span class="built_in">cd</span> external/</span><br><span class="line">&gt; ./fetch_pnetcdf.sh </span><br><span class="line">&gt; ./install_pnetcdf.sh</span><br></pre></td></tr></table></figure><p>安装FITS格式IO库</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&gt; sudo yum install cfitsio-devel</span><br></pre></td></tr></table></figure><h3 id="安装后期处理的python和相关库"><a href="#安装后期处理的python和相关库" class="headerlink" title="安装后期处理的python和相关库"></a>安装后期处理的python和相关库</h3><p>安装python3.9，虚拟环境和开机默认进入</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&gt; <span class="built_in">cd</span></span><br><span class="line">&gt; sudo yum install python39</span><br><span class="line">&gt; python3.9 -m venv <span class="built_in">env</span>  <span class="comment">## 创建虚拟环境env</span></span><br><span class="line">&gt; <span class="built_in">source</span> <span class="built_in">env</span>/bin/activate <span class="comment">## 进入env</span></span><br><span class="line">(<span class="built_in">env</span>)&gt; <span class="built_in">echo</span> <span class="string">&#x27;source /home/jihenghu/env/bin/activate&#x27;</span>&gt;&gt; ~/.bash_profile <span class="comment">## 追加到开机执行</span></span><br></pre></td></tr></table></figure><p>安装requirements文件中的依赖：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">(<span class="built_in">env</span>)&gt; <span class="built_in">cd</span> canoe/</span><br><span class="line">(<span class="built_in">env</span>)&gt; pip3 install -r requirements.txt</span><br><span class="line"><span class="comment"># Astropy</span></span><br><span class="line"><span class="comment"># Black</span></span><br><span class="line"><span class="comment"># Cmakelang</span></span><br><span class="line"><span class="comment"># Cpplint</span></span><br><span class="line"><span class="comment"># Netcdf4</span></span><br><span class="line"><span class="comment"># Numpy</span></span><br><span class="line"><span class="comment"># pre-commit</span></span><br><span class="line"><span class="comment"># Tqdm</span></span><br></pre></td></tr></table></figure><p>安装格式检查：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">(<span class="built_in">env</span>)&gt; pre-commit install</span><br></pre></td></tr></table></figure><p>这样，canoe编译和运行，后期处理相关的环境就准备好了。</p><h2 id="项目编译"><a href="#项目编译" class="headerlink" title="项目编译"></a>项目编译</h2><p>Canoe源码已经内置了一些构建好的项目，可以直接编译和运行:<br>&#96;&#96;内列举了这些内置项目的名称，这些项目的源码位于canoe&#x2F;examples&#x2F;路径下。<br>你可以使用如下命令尽心项目的编译、安装和运行：<br>例如，对于straka项目：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">(<span class="built_in">env</span>)&gt; <span class="built_in">cd</span> ; <span class="built_in">mkdir</span> -p strakaProj/build</span><br><span class="line">(<span class="built_in">env</span>)&gt; <span class="built_in">cd</span> strakeProj/build/</span><br><span class="line">(<span class="built_in">env</span>)&gt; cmake ~/canoe -DTASK=straka  <span class="comment">## 编译</span></span><br><span class="line">(<span class="built_in">env</span>)&gt; make -j8 <span class="comment">## 安装</span></span><br></pre></td></tr></table></figure><p>运行</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> ..</span><br><span class="line">(<span class="built_in">env</span>)&gt; <span class="built_in">ln</span> -s build/bin/straka.release .</span><br><span class="line">(<span class="built_in">env</span>)&gt; <span class="built_in">ln</span> -s build/bin/combine.py .  </span><br><span class="line">(<span class="built_in">env</span>)&gt; <span class="built_in">cp</span> build/bin/straka.inp .    <span class="comment">## 输入的namelist</span></span><br><span class="line">(<span class="built_in">env</span>)&gt; ./straka.release -i straka.inp <span class="comment">## 运行</span></span><br><span class="line">(<span class="built_in">env</span>)&gt; python combine.py -o <span class="built_in">test</span>  <span class="comment">## 合并输出文件</span></span><br></pre></td></tr></table></figure><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul><li><a href="https://github.com/chengcli/canoe">https://github.com/chengcli/canoe</a></li><li><a href="https://snap.chengcli.io/">https://snap.chengcli.io</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Research </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Canoe </tag>
            
            <tag> Model </tag>
            
            <tag> RTM </tag>
            
            <tag> Physics </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>专栏：Canoe模式学习</title>
      <link href="/blog/research/canoe-athena/canoe-column/"/>
      <url>/blog/research/canoe-athena/canoe-column/</url>
      
        <content type="html"><![CDATA[<h3 id="Intro"><a href="#Intro" class="headerlink" title="Intro"></a>Intro</h3><p>本专栏是我在学习Canoe模式时整理的笔记，But, Perfect is the enemy of the Good. 写出来不是目的，组织自己的思维加深理解才是最大的收获，所以不会花很多精力去完善和勘误。</p><p>Canoe(大气海洋物理引擎)是在Princeton University 的Athena++模型基础上开发的轻量化大气模式，目的是应用于行星大气的探测研究。</p><h3 id="文章列表"><a href="#文章列表" class="headerlink" title="文章列表"></a>文章列表</h3><p>本笔记属于<a href="/tags/Canoe/">Canoe模式笔记</a> 专栏，包含以下文章，持续更新：<br>&copy; 2023-2030, Jiheng Hu. 本专栏内容禁止转载。</p><div class="gallery-group-main">  <figure class="gallery-group">  <img class="gallery-group-img no-lightbox" src='https://s2.loli.net/2023/11/24/1IfNYXbvdTOywMJ.png' alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">Canoe环境准备</div>  <p>Canoe的运行环境和依赖安装</p>  <a href='/blog/research/canoe-athena/canoe-env/'></a>  </figcaption>  </figure>    <figure class="gallery-group">  <img class="gallery-group-img no-lightbox" src='https://s2.loli.net/2023/11/24/1IfNYXbvdTOywMJ.png' alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">Canoe模拟#1：Straka问题</div>  <p>Straka问题的模拟</p>  <a href='/blog/research/canoe-athena/canoe-example-straka/'></a>  </figcaption>  </figure>    <figure class="gallery-group">  <img class="gallery-group-img no-lightbox" src='https://s2.loli.net/2023/11/24/1IfNYXbvdTOywMJ.png' alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">Canoe模拟#2：Robert问题</div>  <p>Robert问题的模拟</p>  <a href='/blog/research/canoe-athena/canoe-example-robert/'></a>  </figcaption>  </figure>    <figure class="gallery-group">  <img class="gallery-group-img no-lightbox" src='https://s2.loli.net/2023/11/24/1IfNYXbvdTOywMJ.png' alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">Canoe模拟#3：Bryan问题</div>  <p>Bryan问题的模拟</p>  <a href='/blog/research/canoe-athena/canoe-example-bryan/'></a>  </figcaption>  </figure>    <figure class="gallery-group">  <img class="gallery-group-img no-lightbox" src='https://s2.loli.net/2023/11/24/1IfNYXbvdTOywMJ.png' alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">Canoe模拟#4：Juno MWR辐射传输模拟</div>  <p>基于Juno_MWR通道的正向微波辐射传输模拟。</p>  <a href='/blog/research/canoe-athena/canoe-example-juno_mwr_eq/'></a>  </figcaption>  </figure>    <figure class="gallery-group">  <img class="gallery-group-img no-lightbox" src='https://s2.loli.net/2023/11/24/1IfNYXbvdTOywMJ.png' alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">Canoe Basis：Markov Chain Mont Carlo</div>  <p>基于MCMC方法的样本抽样和参数反演一般方法。</p>  <a href='/blog/research/canoe-athena/canoe-basis-mcmc/'></a>  </figcaption>  </figure>    <figure class="gallery-group">  <img class="gallery-group-img no-lightbox" src='https://s2.loli.net/2023/11/24/1IfNYXbvdTOywMJ.png' alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">Canoe Source：诊断量输出</div>  <p>介绍如何自定义输出诊断量及其工作原理。</p>  <a href='/blog/research/canoe-athena/canoe-source-output/'></a>  </figcaption>  </figure>  </div>]]></content>
      
      
      <categories>
          
          <category> Research </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Canoe </tag>
            
            <tag> Model </tag>
            
            <tag> RTM </tag>
            
            <tag> Physics </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>专栏：运维日常</title>
      <link href="/blog/devops/devops-column/"/>
      <url>/blog/devops/devops-column/</url>
      
        <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>本专栏收录了一些我的运维日常记录和总结，我搞运维更多的是解决了问题就行，写的记录既有重复，又不全面，总之没有整理起来。<br>技术更新太快了，从系统到软件，硬件，各种技术日新月异，没有哪个攻略完全经得住时间推敲，所以我尽量描述清楚场景和环境信息，为以后类似问题提供参考。希望大家多多交流，共同进步。</p><h3 id="文章列表"><a href="#文章列表" class="headerlink" title="文章列表"></a>文章列表</h3><p>本笔记属于<a href="../../categories/Dev-Ops/">运维日常</a>专栏，包含以下文章，持续更新：<br>&copy; 2023-2030, Jiheng Hu. 本专栏内容禁止转载。</p><div class="gallery-group-main">  <figure class="gallery-group">  <img class="gallery-group-img no-lightbox" src='https://i.loli.net/2020/12/24/z6BOQmnLUICt7pl.jpg' alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">Name or service not known问题解决</div>  <p>ping: www.baidu.com: Name or service not known</p>  <a href='/blog/devops/resolve-ip-address/'></a>  </figcaption>  </figure>    <figure class="gallery-group">  <img class="gallery-group-img no-lightbox" src='https://i.loli.net/2020/12/24/z6BOQmnLUICt7pl.jpg' alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">集群节点用户系统同步-NIS</div>  <p>NIS(Network Information Service)是一种用于在计算机网络上的计算机之间分发系统配置数据（例如用户名和主机名）的服务。</p>  <a href='/blog/devops/nis-config-node-core/'></a>  </figcaption>  </figure>    <figure class="gallery-group">  <img class="gallery-group-img no-lightbox" src='https://i.loli.net/2020/12/24/z6BOQmnLUICt7pl.jpg' alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">集群节点文件共享-Node02更新系统</div>  <p>node2的系统崩溃了，需要安装新系统，决定更换成ubuntu，但是替换后的兼容稳定性，运算效率等都是未知数，并且我没有配置集群的经验。这次使用node02实践一下，争取可以形成生产力</p>  <a href='/blog/devops/node02-nis-handlebook/'></a>  </figcaption>  </figure>    <figure class="gallery-group">  <img class="gallery-group-img no-lightbox" src='https://i.loli.net/2020/12/24/z6BOQmnLUICt7pl.jpg' alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">集群节点文件系统共享NFS设置</div>  <p>集群节点文件系统共享NFS设置</p>  <a href='/blog/devops/nfs-file-share-in-nodes/'></a>  </figcaption>  </figure>    <figure class="gallery-group">  <img class="gallery-group-img no-lightbox" src='https://i.loli.net/2021/02/19/F6maQivARUoKOYf.jpg' alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">从零开始挂载磁盘阵列</div>  <p>从零开始挂载磁盘阵列</p>  <a href='/blog/devops/data04-nfs-mountage/'></a>  </figcaption>  </figure>    <figure class="gallery-group">  <img class="gallery-group-img no-lightbox" src='https://i.loli.net/2020/12/24/z6BOQmnLUICt7pl.jpg' alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">libgfortran.so.3 动态库缺失</div>  <p>libgfortran.so.3 动态库缺失</p>  <a href='/blog/devops/missing-libgfortran.so.3/'></a>  </figcaption>  </figure>  </div>]]></content>
      
      
      <categories>
          
          <category> Dev&amp;Ops </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Server </tag>
            
            <tag> NFS </tag>
            
            <tag> Ubuntu </tag>
            
            <tag> NIS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>集群节点用户系统同步-NIS</title>
      <link href="/blog/devops/nis-config-node-core/"/>
      <url>/blog/devops/nis-config-node-core/</url>
      
        <content type="html"><![CDATA[<h3 id="资源"><a href="#资源" class="headerlink" title="资源"></a>资源</h3><p>目前课题组的服务器一共分两组：</p><ul><li>node00-node05组成的Node算力序列,简称Node组; node组的算力为 12cpu*6 node&#x3D;72CPU, 满负荷进程数144个(单节点提交&lt;&#x3D;24进程）, 内存:128 GB&#x2F;node * 6 node </li><li>Core01,Core01组成的Intel Core算力序列, 简称Core组。core组的算力为 24cpu*2core&#x3D;48CPU, 满负荷96进程(单节点提交&lt;&#x3D;48进程）, 内存：512 GB&#x2F;Core *2 core<br>两个组的算力差异不大，但是后者更适用于高并行的模拟任务，开销的内存较小；node更适合大批量的数据处理，如反演等数据产品的制备，需要大的内存开销。所以在使用上，我们决定按照任务类型将及其分配给不同的用户组。也就是两个不同的集群，共享一套磁盘存储。</li></ul><p>目前，8台机器的操作系统已经全部更新，如下：</p><table><thead><tr><th>Hosts</th><th>系统</th><th>内存</th><th>子网ip</th></tr></thead><tbody><tr><td>node00</td><td>Ubuntu 22.04.3 LTS</td><td>256 GB</td><td>192.168.1.100<span style="color:red">*</span></td></tr><tr><td>node01</td><td>Ubuntu 22.04.3 LTS</td><td>256 GB</td><td>192.168.1.101</td></tr><tr><td>node02</td><td>Ubuntu 22.04.<span style="color:red">2</span> LTS</td><td>256 GB</td><td>192.168.1.102</td></tr><tr><td>node03</td><td>Ubuntu 22.04.3 LTS</td><td>256 GB</td><td>192.168.1.103</td></tr><tr><td>node04</td><td>Ubuntu 22.04.3 LTS</td><td>256 GB</td><td>192.168.1.104</td></tr><tr><td>node05</td><td>Ubuntu 22.04.<span style="color:red">5</span> LTS</td><td>256 GB</td><td>192.168.1.105<span style="color:red">*</span></td></tr><tr><td></td><td></td><td></td><td></td></tr><tr><td>core00</td><td>Ubuntu 22.04.3 LTS</td><td>512 GB</td><td>192.168.1.210<span style="color:red">*</span></td></tr><tr><td>core01</td><td>Ubuntu 22.04.3 LTS</td><td>512 GB</td><td>192.168.1.211<span style="color:red">*</span></td></tr><tr><td><span style="color:red">*</span> public network connected</td><td></td><td></td><td></td></tr></tbody></table><p>两台磁盘阵列服务器的信息如下：</p><table><thead><tr><th>Hosts</th><th>系统</th><th>挂载点</th><th>子网ip</th></tr></thead><tbody><tr><td>dataserver1</td><td>Ubuntu 20.04.1 LTS</td><td>&#x2F;data00  131T</td><td>192.168.1.201*</td></tr><tr><td>dataserver2</td><td>Ubuntu 20.04.1 LTS</td><td>&#x2F;data04  328T</td><td>192.168.1.106*</td></tr></tbody></table><p>上述所有的节点通过<code>nfs-kernel-server</code>服务挂在磁盘阵列上的两个盘：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ df -h </span><br><span class="line">...</span><br><span class="line">dataserver1:/data00  131T  121T  3.7T  98% /data00</span><br><span class="line">dataserver2:/data04  328T  277T   51T  85% /data04</span><br></pre></td></tr></table></figure><p>以上内容（别名系统和网络设置）已经在之前的博客中设置好了。</p><h3 id="方案"><a href="#方案" class="headerlink" title="方案"></a>方案</h3><p>在架构上，我们计划使用node05作为Node集群的主节点（以前是node01,最近经常崩溃），所有node节点都从这里共享用户信息；core01作为Core集群的主节点，为core01,core02提供用户信息的同步。<br>但是，两个集群之间还是可以通讯的，对应用户的UID和GID一致，就可以在俩个集群上都能成功访问自己在磁盘阵列上的文件。因此，我们需要使用NIS+NFS服务，将磁盘和用户信息同步到各个从属节点。</p><h3 id="NIS服务"><a href="#NIS服务" class="headerlink" title="NIS服务"></a>NIS服务</h3><p>NIS(Network Information Service)是一种用于在计算机网络上的计算机之间分发系统配置数据（例如用户名和主机名）的服务。 </p><h4 id="NIS-服务端（Server）设置"><a href="#NIS-服务端（Server）设置" class="headerlink" title="NIS 服务端（Server）设置"></a>NIS 服务端（Server）设置</h4><p>登录core01节点，安装NIS</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@core01:~<span class="comment"># apt install nis</span></span><br></pre></td></tr></table></figure><p>设置core01为master，设置ypserver的IP，设置域名：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@core01:~<span class="comment"># vim /etc/default/nis </span></span><br><span class="line"><span class="comment"># /etc/default/nis </span></span><br><span class="line">NISSERVER=master</span><br><span class="line">NISMASTER=core01</span><br><span class="line"></span><br><span class="line">root@core01:~<span class="comment"># vim /etc/yp.conf  ## 设定服务端ip或别名</span></span><br><span class="line"><span class="comment"># /etc/yp.conf</span></span><br><span class="line">ypserver core01</span><br><span class="line"></span><br><span class="line">root@core01:~<span class="comment"># ypdomainname core01 #设定domainname</span></span><br><span class="line">root@core01:~<span class="comment"># ypdomainname ## 查看</span></span><br><span class="line">core01</span><br><span class="line"></span><br><span class="line">root@core01:~<span class="comment"># vim /etc/defaultdomain ## 新建文件</span></span><br><span class="line"><span class="comment"># /etc/defaultdomain</span></span><br><span class="line">core01  <span class="comment">## 添加</span></span><br><span class="line"></span><br><span class="line">root@core01:~<span class="comment"># vim /etc/nsswitch.conf </span></span><br><span class="line"><span class="comment"># /etc/nsswitch.conf</span></span><br><span class="line">passwd:         files systemd sss nis</span><br><span class="line">group:          files systemd sss nis</span><br><span class="line">shadow:         files sss nis</span><br><span class="line">gshadow:        files nis</span><br></pre></td></tr></table></figure><p>开启服务</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@core01:~<span class="comment"># systemctl restart ypserv ypbind yppasswdd ## 启动服务</span></span><br><span class="line">root@core01:/etc<span class="comment"># systemctl enable ypserv ypbind yppasswdd ## 开启启动服务</span></span><br><span class="line">Synchronizing state of ypserv.service with SysV service script with /lib/systemd/systemd-sysv-install.</span><br><span class="line">Executing: /lib/systemd/systemd-sysv-install <span class="built_in">enable</span> ypserv</span><br><span class="line">Synchronizing state of ypbind.service with SysV service script with /lib/systemd/systemd-sysv-install.</span><br><span class="line">Executing: /lib/systemd/systemd-sysv-install <span class="built_in">enable</span> ypbind</span><br><span class="line">Synchronizing state of yppasswdd.service with SysV service script with /lib/systemd/systemd-sysv-install.</span><br><span class="line">Executing: /lib/systemd/systemd-sysv-install <span class="built_in">enable</span> yppasswdd</span><br><span class="line">Created symlink /etc/systemd/system/multi-user.target.wants/ypserv.service → /lib/systemd/system/ypserv.service.</span><br><span class="line">Created symlink /etc/systemd/system/multi-user.target.wants/ypbind.service → /lib/systemd/system/ypbind.service.</span><br><span class="line">Created symlink /etc/systemd/system/multi-user.target.wants/yppasswdd.service → /lib/systemd/system/yppasswdd.service.</span><br></pre></td></tr></table></figure><p>初始化服务端：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@core01:/etc<span class="comment"># /usr/lib/yp/ypinit -m</span></span><br><span class="line"></span><br><span class="line">At this point, we have to construct a list of the hosts <span class="built_in">which</span> will run NIS</span><br><span class="line">servers.  core01 is <span class="keyword">in</span> the list of NIS server hosts.  Please <span class="built_in">continue</span> to add</span><br><span class="line">the names <span class="keyword">for</span> the other hosts, one per line.  When you are <span class="keyword">done</span> with the</span><br><span class="line">list, <span class="built_in">type</span> a &lt;control D&gt;.</span><br><span class="line">next host to add:  core01</span><br><span class="line">next host to add:  &lt;control D&gt;</span><br><span class="line">The current list of NIS servers looks like this:</span><br><span class="line"></span><br><span class="line">core01</span><br><span class="line"></span><br><span class="line">Is this correct?  [y/n: y]  y</span><br><span class="line">We need a few minutes to build the databases...</span><br><span class="line">Building /var/yp/core01/ypservers...</span><br><span class="line">Running /var/yp/Makefile...</span><br><span class="line">gmake[1]: Entering directory <span class="string">&#x27;/var/yp/core01&#x27;</span></span><br><span class="line">Updating passwd.byname...</span><br><span class="line">Updating passwd.byuid...</span><br><span class="line">Updating group.byname...</span><br><span class="line">Updating group.bygid...</span><br><span class="line">Updating hosts.byname...</span><br><span class="line">Updating hosts.byaddr...</span><br><span class="line">Updating rpc.byname...</span><br><span class="line">Updating rpc.bynumber...</span><br><span class="line">Updating services.byname...</span><br><span class="line">Updating services.byservicename...</span><br><span class="line">Updating netid.byname...</span><br><span class="line">Updating protocols.bynumber...</span><br><span class="line">Updating protocols.byname...</span><br><span class="line">Updating netgroup...</span><br><span class="line">Updating netgroup.byhost...</span><br><span class="line">Updating netgroup.byuser...</span><br><span class="line">Updating shadow.byname...</span><br><span class="line">gmake[1]: Leaving directory <span class="string">&#x27;/var/yp/core01&#x27;</span></span><br><span class="line"></span><br><span class="line">core01 has been <span class="built_in">set</span> up as a NIS master server.</span><br><span class="line"></span><br><span class="line">Now you can run ypinit -s core01 on all slave server</span><br></pre></td></tr></table></figure><p>这里提示可以在客户端运行<code>ypinit -s core01</code>来建立通信。</p><p>测试：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@core01:/etc<span class="comment"># yptest</span></span><br><span class="line">Test 1: domainname</span><br><span class="line">Configured domainname is <span class="string">&quot;core01&quot;</span></span><br><span class="line"></span><br><span class="line">Test 2: ypbind</span><br><span class="line">Use Protocol V1: Used NIS server: 192.168.1.210</span><br><span class="line">Use Protocol V2: Used NIS server: 192.168.1.210</span><br><span class="line">Use Protocol V3:</span><br><span class="line">ypbind_nconf:</span><br><span class="line">nc_netid: udp</span><br><span class="line">nc_semantics: 1</span><br><span class="line">nc_flag: 1</span><br><span class="line">nc_protofmly: <span class="string">&#x27;inet&#x27;</span></span><br><span class="line">nc_proto: <span class="string">&#x27;udp&#x27;</span></span><br><span class="line">nc_device: <span class="string">&#x27;-&#x27;</span></span><br><span class="line">nc_nlookups: 0</span><br><span class="line">ypbind_svcaddr: 192.168.1.210:1010</span><br><span class="line">ypbind_servername: core01</span><br><span class="line">ypbind_hi_vers: 2</span><br><span class="line">ypbind_lo_vers: 2</span><br><span class="line"></span><br><span class="line">Test 3: yp_match</span><br><span class="line">nobody:x:65534:65534:nobody:/nonexistent:/usr/sbin/nologin</span><br><span class="line"></span><br><span class="line">Test 4: yp_first</span><br><span class="line">ncl ncl:x:1001:1001::/home/ncl:/bin/bash</span><br><span class="line"></span><br><span class="line">Test 5: yp_next</span><br><span class="line">rli7 rli7:x:1000:1000:rli7:/home/rli7:/bin/bash</span><br><span class="line">nobody nobody:x:65534:65534:nobody:/nonexistent:/usr/sbin/nologin</span><br><span class="line"></span><br><span class="line">Test 6: yp_master</span><br><span class="line">core01</span><br><span class="line"></span><br><span class="line">Test 7: yp_order</span><br><span class="line">1700325739</span><br><span class="line"></span><br><span class="line">Test 8: yp_maplist</span><br><span class="line">netgroup.byuser</span><br><span class="line">group.bygid</span><br><span class="line">shadow.byname</span><br><span class="line">services.byname</span><br><span class="line">rpc.byname</span><br><span class="line">netid.byname</span><br><span class="line">passwd.byname</span><br><span class="line">hosts.byname</span><br><span class="line">rpc.bynumber</span><br><span class="line">protocols.byname</span><br><span class="line">protocols.bynumber</span><br><span class="line">group.byname</span><br><span class="line">netgroup.byhost</span><br><span class="line">passwd.byuid</span><br><span class="line">hosts.byaddr</span><br><span class="line">netgroup</span><br><span class="line">services.byservicename</span><br><span class="line">ypservers</span><br><span class="line"></span><br><span class="line">Test 9: yp_all</span><br><span class="line">ncl ncl:x:1001:1001::/home/ncl:/bin/bash</span><br><span class="line">rli7 rli7:x:1000:1000:rli7:/home/rli7:/bin/bash</span><br><span class="line">nobody nobody:x:65534:65534:nobody:/nonexistent:/usr/sbin/nologin</span><br><span class="line">All tests passed</span><br></pre></td></tr></table></figure><p>可以看出，服务端已经通过了全部的测试，并且有三条用户信息被载入到数据库。现在，就可以设置客户端了。</p><h4 id="NIS-客户端"><a href="#NIS-客户端" class="headerlink" title="NIS 客户端"></a>NIS 客户端</h4><p>这里使用core02这台机器作为客户端（salve）：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@core02:~<span class="comment"># sudo apt install nis</span></span><br><span class="line">root@core02:~<span class="comment"># vim /etc/yp.conf </span></span><br><span class="line"><span class="comment"># /etc/yp.conf </span></span><br><span class="line">ypserver core01</span><br><span class="line">root@core02:~<span class="comment"># vim /etc/defaults/nis</span></span><br><span class="line"><span class="comment"># /etc/defaults/nis     </span></span><br><span class="line"><span class="comment"># Are we a NIS server and if so what kind (values: false, slave, master)?</span></span><br><span class="line">NISSERVER=<span class="literal">false</span></span><br><span class="line"><span class="comment"># Are we a NIS client?</span></span><br><span class="line">NISCLIENT=slave</span><br><span class="line">NISMASTER=core01</span><br><span class="line"></span><br><span class="line">root@core02:~<span class="comment"># domainname core01</span></span><br><span class="line">root@core02:~<span class="comment"># domainname</span></span><br><span class="line">core01</span><br><span class="line">root@core02:~<span class="comment"># vim /etc/defaultdomain</span></span><br><span class="line">core01</span><br></pre></td></tr></table></figure><p>开启服务</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@core02:~<span class="comment"># systemctl restart ypserv ypbind yppasswdd</span></span><br><span class="line">root@core02:~<span class="comment"># systemctl enable ypserv ypbind yppasswdd</span></span><br><span class="line">Synchronizing state of ypserv.service with SysV service script with /lib/systemd/systemd-sysv-install.</span><br><span class="line">Executing: /lib/systemd/systemd-sysv-install <span class="built_in">enable</span> ypserv</span><br><span class="line">Synchronizing state of ypbind.service with SysV service script with /lib/systemd/systemd-sysv-install.</span><br><span class="line">Executing: /lib/systemd/systemd-sysv-install <span class="built_in">enable</span> ypbind</span><br><span class="line">Synchronizing state of yppasswdd.service with SysV service script with /lib/systemd/systemd-sysv-install.</span><br><span class="line">Executing: /lib/systemd/systemd-sysv-install <span class="built_in">enable</span> yppasswdd</span><br><span class="line">Created symlink /etc/systemd/system/multi-user.target.wants/ypserv.service → /lib/systemd/system/ypserv.service.</span><br><span class="line">Created symlink /etc/systemd/system/multi-user.target.wants/ypbind.service → /lib/systemd/system/ypbind.service.</span><br><span class="line">Created symlink /etc/systemd/system/multi-user.target.wants/yppasswdd.service → /lib/systemd/system/yppasswdd.service.</span><br></pre></td></tr></table></figure><p>建立通信：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@core02:~<span class="comment"># /usr/lib/yp/ypinit -s core01</span></span><br><span class="line">root@core02:~<span class="comment"># yptest</span></span><br><span class="line">Test 1: domainname</span><br><span class="line">Configured domainname is <span class="string">&quot;core01&quot;</span></span><br><span class="line"></span><br><span class="line">Test 2: ypbind</span><br><span class="line">Use Protocol V1: Used NIS server: 192.168.1.210</span><br><span class="line">Use Protocol V2: Used NIS server: 192.168.1.210</span><br><span class="line">Use Protocol V3:</span><br><span class="line">ypbind_nconf:</span><br><span class="line">nc_netid: udp</span><br><span class="line">nc_semantics: 1</span><br><span class="line">nc_flag: 1</span><br><span class="line">nc_protofmly: <span class="string">&#x27;inet&#x27;</span></span><br><span class="line">nc_proto: <span class="string">&#x27;udp&#x27;</span></span><br><span class="line">nc_device: <span class="string">&#x27;-&#x27;</span></span><br><span class="line">nc_nlookups: 0</span><br><span class="line">ypbind_svcaddr: 192.168.1.210:1010</span><br><span class="line">ypbind_servername: core01</span><br><span class="line">ypbind_hi_vers: 2</span><br><span class="line">ypbind_lo_vers: 2</span><br><span class="line"></span><br><span class="line">Test 3: yp_match</span><br><span class="line">nobody:x:65534:65534:nobody:/nonexistent:/usr/sbin/nologin</span><br><span class="line"></span><br><span class="line">Test 4: yp_first</span><br><span class="line">ncl ncl:x:1001:1001::/home/ncl:/bin/bash</span><br><span class="line"></span><br><span class="line">Test 5: yp_next</span><br><span class="line">rli7 rli7:x:1000:1000:rli7:/home/rli7:/bin/bash</span><br><span class="line">nobody nobody:x:65534:65534:nobody:/nonexistent:/usr/sbin/nologin</span><br><span class="line"></span><br><span class="line">Test 6: yp_master</span><br><span class="line">core01</span><br><span class="line"></span><br><span class="line">Test 7: yp_order</span><br><span class="line">1700331328</span><br><span class="line"></span><br><span class="line">Test 8: yp_maplist</span><br><span class="line">netgroup.byuser</span><br><span class="line">group.bygid</span><br><span class="line">shadow.byname</span><br><span class="line">services.byname</span><br><span class="line">rpc.byname</span><br><span class="line">netid.byname</span><br><span class="line">passwd.byname</span><br><span class="line">hosts.byname</span><br><span class="line">rpc.bynumber</span><br><span class="line">protocols.byname</span><br><span class="line">protocols.bynumber</span><br><span class="line">group.byname</span><br><span class="line">netgroup.byhost</span><br><span class="line">passwd.byuid</span><br><span class="line">hosts.byaddr</span><br><span class="line">netgroup</span><br><span class="line">services.byservicename</span><br><span class="line">ypservers</span><br><span class="line"></span><br><span class="line">Test 9: yp_all</span><br><span class="line">ncl ncl:x:1001:1001::/home/ncl:/bin/bash</span><br><span class="line">rli7 rli7:x:1000:1000:rli7:/home/rli7:/bin/bash</span><br><span class="line">nobody nobody:x:65534:65534:nobody:/nonexistent:/usr/sbin/nologin</span><br><span class="line">All tests passed</span><br></pre></td></tr></table></figure><p>可以看到，core01中的ncl等用户被同步过来了，切换用户：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@core02:~<span class="comment"># su ncl</span></span><br><span class="line">ncl@core02:/root$ <span class="built_in">ls</span></span><br><span class="line"><span class="built_in">ls</span>: cannot open directory <span class="string">&#x27;.&#x27;</span>: Permission denied</span><br><span class="line">ncl@core02:/root$ <span class="built_in">cd</span></span><br><span class="line">bash: <span class="built_in">cd</span>: /home/ncl: No such file or directory</span><br></pre></td></tr></table></figure><p>这里显示找不到core01用户的主目录&#x2F;home&#x2F;ncl，这是因为虽然用户同步过来了，但是文件系统并没有共享，core02的&#x2F;home&#x2F;下面并没有该用户的主目录。<br>这时候就需要共享主目录了： core01:&#x2F;home - &gt; core02:&#x2F;home</p><h4 id="home目录的共享"><a href="#home目录的共享" class="headerlink" title="/home目录的共享"></a><code>/home</code>目录的共享</h4><p>和之前磁盘共享挂载一样，我们需要先将<code>core01</code>上的<code>/home</code>共享出去</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">## 安装nfs-kernel-server </span></span><br><span class="line">root@core01:/etc<span class="comment"># apt install nfs-kernel-server </span></span><br><span class="line">root@core01:/etc<span class="comment"># vim /etc/exports</span></span><br><span class="line"><span class="comment"># /etc/exports: the access control list for filesystems which may be exported</span></span><br><span class="line"></span><br><span class="line"><span class="comment">### 添加 /home在 192.168.1.0网段内共享权限</span></span><br><span class="line">/home 192.168.1.0/24(rw,no_root_squash,async,no_subtree_check)  </span><br><span class="line"><span class="comment">## 广播出去</span></span><br><span class="line">root@core01:/etc<span class="comment"># exportfs -ra</span></span><br></pre></td></tr></table></figure><p><code>core02</code>挂载<code>core01:/home</code>,替换掉<code>core01:/home</code>:</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">## 安装</span></span><br><span class="line">root@core02:~<span class="comment"># apt install nfs-kernel-server </span></span><br><span class="line"></span><br><span class="line"><span class="comment">## 添加磁盘挂载 </span></span><br><span class="line">root@core02:/home<span class="comment"># vim  /etc/fstab</span></span><br><span class="line"><span class="comment"># /etc/fstab: static file system information.</span></span><br><span class="line">...</span><br><span class="line"><span class="comment">## 注释掉自己的/home</span></span><br><span class="line"><span class="comment"># /home was on /dev/sda3 during curtin installation</span></span><br><span class="line"><span class="comment">#/dev/disk/by-uuid/6662f49f-df4d-43cc-8838-0767d131ec26 /home ext4 defaults 0 1</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## 挂载core01:/home</span></span><br><span class="line">core01:/home /home nfs default 0 0</span><br><span class="line"></span><br><span class="line"><span class="comment">## 挂载</span></span><br><span class="line">root@core02:/home<span class="comment"># mount -a</span></span><br></pre></td></tr></table></figure><p>查看磁盘</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">root@core02:/home# df -h</span><br><span class="line">Filesystem           Size  Used Avail Use% Mounted on</span><br><span class="line">tmpfs                 51G  4.4M   51G   1% /run</span><br><span class="line">/dev/sda3            313G  6.3G  290G   3% /</span><br><span class="line">tmpfs                252G     0  252G   0% /dev/shm</span><br><span class="line">tmpfs                5.0M     0  5.0M   0% /run/lock</span><br><span class="line">/dev/sda1            1.1G  6.1M  1.1G   1% /boot/efi</span><br><span class="line">tmpfs                 51G   80K   51G   1% /run/user/131</span><br><span class="line">tmpfs                 51G   64K   51G   1% /run/user/1000</span><br><span class="line">dataserver1:/data00  131T  121T  3.7T  98% /data00</span><br><span class="line">dataserver2:/data04  328T  277T   51T  85% /data04</span><br><span class="line">core01:/home         313G   15G  282G   5% /home</span><br></pre></td></tr></table></figure><p>切换到<code>ncl</code>用户，发现可以取到主目录&#x2F;home&#x2F;ncl</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@core02:~<span class="comment"># su ncl</span></span><br><span class="line">ncl@core02:/root$ <span class="built_in">cd</span></span><br><span class="line">ncl@core02:~$ <span class="built_in">ls</span></span><br><span class="line">bin  include  lib  ncl_ncarg-6.4.0-Debian7.11_64bit_nodap_gnu472.tar.gz</span><br></pre></td></tr></table></figure><h3 id="更新用户信息"><a href="#更新用户信息" class="headerlink" title="更新用户信息"></a>更新用户信息</h3><p><code>core01</code> 下新建一个用户jiheng (uid&#x3D;1516, gid&#x3D;1516):</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@core01:/etc<span class="comment"># useradd jiheng -u 1516 -g 1516 -m -c &quot;Jiheng Hu&quot;</span></span><br><span class="line">root@core01:/etc<span class="comment"># passwd jiheng</span></span><br><span class="line">New password: </span><br><span class="line">Retype new password: </span><br><span class="line">passwd: password updated successfully</span><br><span class="line">root@core01:/etc<span class="comment"># ll /home</span></span><br><span class="line">drwxr-x--- 15 hjh    hjh   4096 Aug 30 12:33 hjh/</span><br><span class="line">drwxr-x---  2 jiheng jiheng   4096 Nov 18 19:06 jiheng/</span><br><span class="line">drwxr-x--- 15 rli7  rli7 4096 Nov 18 19:04 rli7/</span><br><span class="line">drwxr-x---  5 ncl    ncl   4096 Nov 18 19:02 ncl/</span><br></pre></td></tr></table></figure><p>那么，core02上不会有jiheng的用户信息：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">rli7@core02:/home$ su jiheng</span><br><span class="line">su: user jiheng does not exist or the user entry does not contain all the required fields</span><br><span class="line"></span><br><span class="line">rli7@core02:/home$ ll</span><br><span class="line">drwxr-x--- 15   516   516 4096 Aug 30 12:33 hjh/</span><br><span class="line">drwxr-x---  2  1516   1516 4096 Nov 18 19:06 jiheng/</span><br><span class="line">drwxr-x--- 15 rli7 rli7 4096 Nov 18 19:04 rli7/</span><br><span class="line">drwxr-x---  5 ncl   ncl   4096 Nov 18 19:02 ncl/</span><br></pre></td></tr></table></figure><p>此时，需要在core01打包用户信息：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@core01:/etc<span class="comment"># make -C /var/yp</span></span><br><span class="line">make: Entering directory <span class="string">&#x27;/var/yp&#x27;</span></span><br><span class="line">gmake[1]: Entering directory <span class="string">&#x27;/var/yp/core01&#x27;</span></span><br><span class="line">Updating passwd.byname...</span><br><span class="line">Updating passwd.byuid...</span><br><span class="line">Updating netid.byname...</span><br><span class="line">Updating shadow.byname...</span><br><span class="line">gmake[1]: Leaving directory <span class="string">&#x27;/var/yp/core01&#x27;</span></span><br><span class="line">make: Leaving directory <span class="string">&#x27;/var/yp</span></span><br></pre></td></tr></table></figure><p>yptest发现jiheng已经进入数据库：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@core01:/etc<span class="comment"># yptest</span></span><br><span class="line">Test 9: yp_all</span><br><span class="line">ncl ncl:x:1001:1001::/home/ncl:/bin/bash</span><br><span class="line">jiheng jiheng:x:1516:516:Jiheng Hu:/home/jiheng:/bin/bash</span><br><span class="line">rli7 rli7:x:1000:1000:rli7:/home/rli7:/bin/bash</span><br><span class="line">nobody nobody:x:65534:65534:nobody:/nonexistent:/usr/sbin/nologin</span><br><span class="line">All tests passed</span><br></pre></td></tr></table></figure><p>此时，在core02可以登入jiheng新用户：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">rli7@core02:/home$ su jiheng</span><br><span class="line">Password: </span><br><span class="line"><span class="built_in">groups</span>: cannot find name <span class="keyword">for</span> group ID 516</span><br><span class="line">jiheng@core02:/home$ ll</span><br><span class="line">drwxr-x--- 15    516   516 4096 Aug 30 12:33 hjh/</span><br><span class="line">drwxr-x---  2 jiheng   jiheng 4096 Nov 18 19:06 jiheng/</span><br><span class="line">drwxr-x--- 15 rli7  rli7 4096 Nov 18 19:04 rli7/</span><br><span class="line">drwxr-x---  5 ncl    ncl   4096 Nov 18 19:02 ncl/</span><br></pre></td></tr></table></figure><p><strong>用户信息的改动，新建删除和修改密码，都需要使用<code>make -C /var/yp</code>进行同步</strong></p><h3 id="Issues"><a href="#Issues" class="headerlink" title="Issues"></a>Issues</h3><ol><li><p>1 tests failed<br>在某些机器上，yptest时会有 Test 3：yp_match 有告警导致在最一行yp_all出现了 1 tests failed 报错，但是这个报错是可以忽略的。根据告警信息来看，是指在 passwd.byname 数据文件中没有找到 nobody 的记录，这是因为早期 nobody 用户的 UID 被设置为 65534，而现在 nobody 用户的 UID 被设置为 99（可以通过 id nobody 进行查看），所以没有被记录。在本个例中没有出现这一报错，因为可以找到nobody。</p></li><li><p>部分用户无法同步<br>uid&lt;1000的用户无法同步，如’core01’下的真实用户有：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">rli7:x:1000:1000:rli7:/home/rli7:/bin/bash</span><br><span class="line">hjh:x:516:516:Jiheng Hu:/home/hjh:/bin/bash</span><br><span class="line">ncl:x:1001:1001::/home/ncl:/bin/bash</span><br></pre></td></tr></table></figure><p>但是core01和core02下都无法同步获取hjh（uid&#x3D;516）这个用户的信息：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Test 9: yp_all</span><br><span class="line">ncl ncl:x:1001:1001::/home/ncl:/bin/bash</span><br><span class="line">rli7 rli7:x:1000:1000:rli7:/home/rli7:/bin/bash</span><br><span class="line">nobody nobody:x:65534:65534:nobody:/nonexistent:/usr/sbin/nologin</span><br><span class="line">All tests passed</span><br></pre></td></tr></table></figure><p>在客户端无法用<code>ncl@core02:~$ su hjh</code>的方法切换。并且，共享文件加下的资源不会显示用户hjh，只显示其uid 516，因为用户不存在：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ncl@core02:~$ ll /home</span><br><span class="line">total 20</span><br><span class="line">drwxr-xr-x  5 root  root  4096 Aug 29 12:59 ./</span><br><span class="line">drwxr-xr-x 21 root  root  4096 Nov 18 18:32 ../</span><br><span class="line">drwxr-x--- 15   516   516 4096 Aug 30 12:33 hjh/</span><br><span class="line">drwxr-x--- 15 rli7 rli7 4096 Nov 18 15:25 rli7/</span><br><span class="line">drwxr-x---  5 ncl   ncl   4096 Aug 29 13:15 ncl/</span><br></pre></td></tr></table></figure></li></ol><p><strong>推测原因</strong>：<br>因为Ubuntu默认1000一下的uid均为虚拟账户，useradd 添加的用户会默认uid&#x3D;1000+，除非指定了uid。NIS服务会默认不对虚拟账户进行同步，否则会导致系统错乱，只对普通权限的用户进行同步。所以我们还是按照规则来</p><p>解决方法：usermod -u 1516 hjh<br>groupmod -g 1516 hjh<br>这样麻烦在于，需要对所有磁盘文件进行归属人变更:<code>chown</code>命令。</p><h3 id="关于LDAP"><a href="#关于LDAP" class="headerlink" title="关于LDAP"></a>关于LDAP</h3><p>ChatGPT推荐了另外一个选项LDAP轻型服务，可以替代比较老旧的Yellow Page服务，记录在这里，以后维护考虑一下：</p><h4 id="LDAP-Overview"><a href="#LDAP-Overview" class="headerlink" title="LDAP Overview"></a>LDAP Overview</h4><p>LDAP, or Lightweight Directory Access Protocol, is an open and cross-platform protocol for accessing and maintaining distributed directory information services over a network. LDAP directories are often used for centralized storage of information like user accounts, group memberships, and network configurations.</p><p>LDAP directories consist of entries organized in a hierarchical tree structure. Each entry represents an object, and each object has attributes with values. The entries can represent users, groups, devices, and other types of entities.</p><h5 id="Setting-up-LDAP-on-Ubuntu-Cluster"><a href="#Setting-up-LDAP-on-Ubuntu-Cluster" class="headerlink" title="Setting up LDAP on Ubuntu Cluster"></a>Setting up LDAP on Ubuntu Cluster</h5><h6 id="1-Install-LDAP-Server"><a href="#1-Install-LDAP-Server" class="headerlink" title="1. Install LDAP Server"></a>1. Install LDAP Server</h6><p>On each node in your cluster, install the LDAP server. For OpenLDAP, you can use the following:</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt update</span><br><span class="line">sudo apt install slapd ldap-utils</span><br></pre></td></tr></table></figure><h6 id="2-Configure-LDAP"><a href="#2-Configure-LDAP" class="headerlink" title="2. Configure LDAP"></a>2. Configure LDAP</h6><p>Follow the configuration steps outlined below to configure the LDAP server. Pay attention to the organization name, domain name, and other parameters.</p><h6 id="3-Cluster-Considerations"><a href="#3-Cluster-Considerations" class="headerlink" title="3. Cluster Considerations"></a>3. Cluster Considerations</h6><p>If your cluster nodes need to share the LDAP data, you might need to set up replication or synchronization between LDAP servers on different nodes. OpenLDAP supports replication to keep data consistent across multiple servers. Consult the OpenLDAP documentation for details on setting up replication.</p><h6 id="4-Client-Configuration"><a href="#4-Client-Configuration" class="headerlink" title="4. Client Configuration"></a>4. Client Configuration</h6><p>On each node or client machine in your cluster, install LDAP client utilities:</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Copy code</span><br><span class="line">sudo apt install ldap-utils</span><br><span class="line">Configure the client to connect to the LDAP server(s) <span class="keyword">in</span> your cluster. Edit /etc/ldap/ldap.conf and /etc/nsswitch.conf to specify LDAP as a <span class="built_in">source</span> <span class="keyword">for</span> user information.</span><br></pre></td></tr></table></figure><h6 id="5-Test-Configuration"><a href="#5-Test-Configuration" class="headerlink" title="5. Test Configuration"></a>5. Test Configuration</h6><p>Use tools like ldapsearch to test the LDAP configuration on each node and ensure that LDAP clients can query the directory.</p><p>Please note that the specifics of setting up LDAP in a cluster may depend on the cluster type (e.g., Kubernetes, Hadoop, etc.) and your specific requirements. Always refer to the documentation of the LDAP server software you are using and any cluster management tools you have in place. Additionally, consider security aspects, such as encryption (SSL&#x2F;TLS), and access control policies for your LDAP deployment.</p>]]></content>
      
      
      <categories>
          
          <category> Dev&amp;Ops </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Server </tag>
            
            <tag> Ubuntu </tag>
            
            <tag> NIS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/blog/hello-world/"/>
      <url>/blog/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>安娜堡</title>
      <link href="/blog/essays/days-in-ann-arbor/"/>
      <url>/blog/essays/days-in-ann-arbor/</url>
      
        <content type="html"><![CDATA[<style>main.hide-aside {    max-width:1300px!important;}</style><div class="gallery">    <div class="fj-gallery  data" data-rowHeight="220" data-limit="10">    <span class="gallery-data">[{"url":"http://home.ustc.edu.cn/~hjh18305/filzoo/umich-engineering.jpg","alt":"20231114203429"},{"url":"https://s2.loli.net/2023/11/24/Dxl6vBEaj2JNntO.jpg","alt":"UM Law Library"},{"url":"https://s2.loli.net/2023/11/24/BqYbIveaTXANryH.jpg","alt":"Cross-road"},{"url":"https://s2.loli.net/2023/11/24/7XbYrHSn5wAJMO4.jpg","alt":"rainy-foggy"},{"url":"https://s2.loli.net/2023/11/15/YFs3NKRLzelnp4B.jpg","alt":"20231114203458"},{"url":"https://s2.loli.net/2023/11/15/G9fRqbvBET8iWyp.jpg","alt":"20231114203441"},{"url":"https://s2.loli.net/2023/11/15/2w4hOiQWHMucxDG.jpg","alt":"20231114203453"},{"url":"https://s2.loli.net/2023/11/15/2JFukOS4MmnaTf5.jpg","alt":"20231114203435"},{"url":"https://s2.loli.net/2023/11/15/VTO28FDqHx3Xzkp.jpg","alt":"20231114203503"},{"url":"https://s2.loli.net/2023/11/15/kJmQuOn5hXwYZ7o.jpg","alt":"20231114203402"},{"url":"https://s2.loli.net/2023/11/15/xZ5NpH3v6hQPoMg.jpg","alt":"20231114203447"},{"url":"https://s2.loli.net/2023/11/15/xUauIt6v13zA7wn.jpg","alt":"20231114203423"},{"url":"https://s2.loli.net/2023/11/15/XxABwLIVWu8oZYS.jpg","alt":"20231114203508"},{"url":"https://s2.loli.net/2023/11/15/pVyIrGNuCwHzP1U.jpg","alt":"20231114203429"}]</span>    </div>    <button class="gallery-load-more"><span>Load More</span><i class="fa-solid fa-arrow-down"></i></button>    </div>]]></content>
      
      
      <categories>
          
          <category> Essay </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Michigan </tag>
            
            <tag> Gallery </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>RTTOV模式笔记：(七) 全天气地表微波比辐射反演方案</title>
      <link href="/blog/research/rttov/rttov132-emissivity-retrieve/"/>
      <url>/blog/research/rttov/rttov132-emissivity-retrieve/</url>
      
        <content type="html"><![CDATA[<div class="note primary flat"><p>本笔记属于<a href="../rttov132-column">RTTOV辐射传输模式学习笔记</a>专栏，包含以下文章：</p><div class="btn-center" style="margin-bottom:0px"><a class="btn-beautify outline blue larger" href="/blog/research/rttov/rttov132-installlibs/"   title="(一) 依赖安装"><i class="far fa-hand-point-right"></i><span>(一) 依赖安装</span></a><a class="btn-beautify outline pink larger" href="/blog/research/rttov/rttov132-install/"   title="(二) RTTOV V13.2安装"><i class="far fa-hand-point-right"></i><span>(二) RTTOV V13.2安装</span></a><a class="btn-beautify outline red larger" href="/blog/research/rttov/rttov132-conventions/"   title="(三) 一些约定和特性"><i class="far fa-hand-point-right"></i><span>(三) 一些约定和特性</span></a><a class="btn-beautify outline purple larger" href="/blog/research/rttov/rttov132-variables/"   title="(四) RTTOV 变量和结构体"><i class="far fa-hand-point-right"></i><span>(四) RTTOV 变量和结构体</span></a><a class="btn-beautify outline green larger" href="/blog/research/rttov/rttov132-direct-fw/"   title="(五) 基于Direct Forward的晴空模拟"><i class="far fa-hand-point-right"></i><span>(五) 基于Direct Forward的晴空模拟</span></a><a class="btn-beautify outline orange larger" href="/blog/research/rttov/rttov132-mw-scat/"   title="(六) 基于MW-SCAT的水凝物模拟"><i class="far fa-hand-point-right"></i><span>(六) 基于MW-SCAT的水凝物模拟</span></a><a class="btn-beautify outline navy larger" href="/blog/research/rttov/rttov132-emissivity-retrieve/"   title="(七) 全天气地表微波比辐射反演方案"><i class="far fa-hand-point-right"></i><span>(七) 全天气地表微波比辐射反演方案</span></a></div>&copy; 2023-2030, Jiheng Hu. 本专栏内容禁止转载。</div><hr><p>本节将介绍RTTOV-SCATT模块内置的动态发射率反演的使用。这一部分源码中没有直接的example，但是文档和源码中已经提供了必备的接口，我们要做的就是把这些接口组合起来，实现反演流程。</p><h2 id="反演流程的构建"><a href="#反演流程的构建" class="headerlink" title="反演流程的构建"></a>反演流程的构建</h2><ol><li><p>流程框架<br><img src="/blog/research/rttov/rttov132-mw-scat/rttov-emiss-retrieve.png"></p></li><li><p>源码细节</p></li></ol><ul><li><p>引入必要的变量类型</p><figure class="highlight fortran"><table><tr><td class="code"><pre><span class="line"><span class="keyword">USE</span> rttov_types, <span class="keyword">ONLY</span> :     &amp;</span><br><span class="line">      ......</span><br><span class="line">rttov_scatt_emis_retrieval_type</span><br></pre></td></tr></table></figure></li><li><p>引用必要的接口</p><figure class="highlight fortran"><table><tr><td class="code"><pre><span class="line"><span class="keyword">include</span> <span class="string">&quot;rttov_alloc_emis_ret_terms.interface&quot;</span></span><br><span class="line"># <span class="keyword">include</span> <span class="string">&quot;rttov_scatt_emis_terms.interface&quot;</span>  <span class="comment">!! 实际上在rttov_scatt.F90内部引用使用，此处不需要引用</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">&quot;rttov_scatt_emis_retrieval.interface&quot;</span></span><br></pre></td></tr></table></figure></li><li><p>声明变量</p><figure class="highlight fortran"><table><tr><td class="code"><pre><span class="line"><span class="keyword">Type</span>(rttov_scatt_emis_retrieval_type) :: emis_retrieval_terms  <span class="comment">! radiance terms for emissivity retrieve</span></span><br><span class="line"> <span class="keyword">INTEGER</span>(<span class="keyword">KIND</span>=jpim) :: err_alloc</span><br><span class="line"> <span class="keyword">INTEGER</span>(<span class="keyword">KIND</span>=jpim)    :: asw</span><br><span class="line"> <span class="keyword">REAL</span>(<span class="keyword">kind</span>=jprb), <span class="keyword">ALLOCATABLE</span>  :: obs_tb (:)     <span class="comment">! Observed TB </span></span><br><span class="line"> <span class="keyword">REAL</span>(<span class="keyword">kind</span>=jprb), <span class="keyword">ALLOCATABLE</span>  :: land_emis (:)  <span class="comment">! Retrieved emissivity</span></span><br></pre></td></tr></table></figure></li><li><p>分配变量</p><figure class="highlight fortran"><table><tr><td class="code"><pre><span class="line"> <span class="comment">! --------------------------------------------------------------------------</span></span><br><span class="line"> <span class="comment">! 3. Allocate RTTOV input and output structures</span></span><br><span class="line"> <span class="comment">! --------------------------------------------------------------------------</span></span><br><span class="line"> nchanprof = nchannels * nprof</span><br><span class="line"></span><br><span class="line"> <span class="built_in">ALLOCATE</span>(obs_tb(nchanprof))</span><br><span class="line"> <span class="built_in">ALLOCATE</span>(land_emis(nchanprof))</span><br><span class="line"> obs_tb= (/<span class="number">122.978</span>, <span class="number">109.550</span>, <span class="number">145.061</span>, <span class="number">132.054</span>, <span class="number">168.257</span>, <span class="number">156.747</span>, <span class="number">183.278</span>, <span class="number">171.656</span>, <span class="number">239.429</span>, <span class="number">232.793</span>, &amp;</span><br><span class="line"><span class="number">124.568</span>, <span class="number">111.924</span>, <span class="number">147.515</span>, <span class="number">135.568</span>, <span class="number">170.754</span>, <span class="number">160.350</span>, <span class="number">188.391</span>, <span class="number">178.397</span>, <span class="number">243.950</span>, <span class="number">239.090</span>, &amp;</span><br><span class="line"><span class="number">119.652</span>, <span class="number">106.068</span>, <span class="number">136.334</span>, <span class="number">122.598</span>, <span class="number">154.660</span>, <span class="number">141.782</span>, <span class="number">164.872</span>, <span class="number">150.992</span>, <span class="number">213.784</span>, <span class="number">201.940</span>/)</span><br><span class="line"></span><br><span class="line"> <span class="comment">!! Allocate emis_retrieval_terms</span></span><br><span class="line"> <span class="comment">!! @param[out]    err                     status on exit</span></span><br><span class="line"> <span class="comment">!! @param[in]     nchanprof               size of the chanprof array (total number of channels being simulated)</span></span><br><span class="line"> <span class="comment">!! @param[in,out] emis_retrieval_terms    emissivity retrieval terms structure to allocate/deallocate</span></span><br><span class="line"> <span class="comment">!! @param[in]     asw                     1_jpim =&gt; allocate; 0_jpim =&gt; deallocate</span></span><br><span class="line"> <span class="keyword">Call</span> rttov_alloc_emis_ret_terms(err_alloc, nchanprof, emis_retrieval_terms, <span class="number">1_jpim</span>)</span><br><span class="line"> <span class="keyword">IF</span> (err_alloc /= errorstatus_success) <span class="keyword">THEN</span></span><br><span class="line"><span class="built_in">WRITE</span>(*,*) <span class="string">&#x27;allocation error for emis_retrieval_terms structures&#x27;</span></span><br><span class="line"><span class="keyword">CALL</span> rttov_exit(errorstatus)</span><br><span class="line"> <span class="keyword">ENDIF</span></span><br></pre></td></tr></table></figure></li><li><p>调用rttov_scatt，输入可选参数emis_retrieval_terms</p><figure class="highlight fortran"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CALL</span> rttov_scatt ( &amp;</span><br><span class="line">    errorstatus,         &amp;<span class="comment">! out   error flag</span></span><br><span class="line">    ......</span><br><span class="line">    radiance,            &amp;<span class="comment">! inout computed radiances</span></span><br><span class="line">    emis_retrieval_terms=emis_retrieval_terms)  </span><br></pre></td></tr></table></figure></li><li><p>调用反演接口</p><figure class="highlight fortran"><table><tr><td class="code"><pre><span class="line"><span class="comment">! --------------------------------------------------------------------------</span></span><br><span class="line"><span class="comment">! 8. Call Emssivity retrieval interface</span></span><br><span class="line"><span class="comment">! --------------------------------------------------------------------------</span></span><br><span class="line"><span class="comment">!! @param[in]     chanprof      channels and profiles simulated by RTTOV-SCATT</span></span><br><span class="line"><span class="comment">!! @param[in]     coefs         RTTOV coefficients structure</span></span><br><span class="line"><span class="comment">!! @param[in]     emis_terms    output radiances and corresponding BTs</span></span><br><span class="line"><span class="comment">!! @param[in]     obs_tb        observed BTs corresponding to simulated BTs</span></span><br><span class="line"><span class="comment">!! @param[out]    land_emis     output retrieved emissivities</span></span><br><span class="line"><span class="keyword">call</span> rttov_scatt_emis_retrieval(&amp;</span><br><span class="line">  chanprof,             &amp;</span><br><span class="line">  coefs,                &amp;</span><br><span class="line">  emis_retrieval_terms, &amp;</span><br><span class="line">  obs_tb,               &amp;</span><br><span class="line">  land_emis)</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>输出</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">DO iprof = 1, nprof</span><br><span class="line">  joff = (iprof-1_jpim) * nchannels</span><br><span class="line">  WRITE(ioout,*)&#x27; &#x27;</span><br><span class="line">  WRITE(ioout,*)&#x27;Observed TBs:&#x27;</span><br><span class="line">  WRITE(ioout,444) (obs_tb(j), j = 1+joff, nchannels+joff)</span><br><span class="line">  WRITE(ioout,*)&#x27;Retrieved SURFACE EMISSIVITIES:&#x27;</span><br><span class="line">  WRITE(ioout,444) (land_emis(j), j = 1+joff, nchannels+joff)</span><br><span class="line">ENDDO</span><br></pre></td></tr></table></figure></li><li><p>释放结构体</p><figure class="highlight fortran"><table><tr><td class="code"><pre><span class="line"> <span class="keyword">Call</span> rttov_alloc_emis_ret_terms(err_alloc, nchanprof, emis_retrieval_terms, <span class="number">0_jpim</span>)</span><br><span class="line"> <span class="keyword">IF</span> (err_alloc /= errorstatus_success) <span class="keyword">THEN</span></span><br><span class="line"><span class="built_in">WRITE</span>(*,*) <span class="string">&#x27;deallocation error for emis_retrieval_terms structures&#x27;</span></span><br><span class="line"><span class="keyword">CALL</span> rttov_exit(errorstatus)</span><br><span class="line"> <span class="keyword">ENDIF</span></span><br><span class="line"> <span class="built_in">deallocate</span>(obs_tb)</span><br><span class="line"> <span class="built_in">deallocate</span>(land_emis)</span><br></pre></td></tr></table></figure></li></ul><h2 id="理想个例模拟"><a href="#理想个例模拟" class="headerlink" title="理想个例模拟"></a>理想个例模拟</h2><p>如上一章的理想模拟所诉，我们进行了三条廓线，十个通道的模拟，结果如下：</p><figure class="highlight plaintext"><figcaption><span>output_ideal_rttovscatt_retri.dat</span></figcaption><table><tr><td class="code"><pre><span class="line">廓线一：</span><br><span class="line"> CALCULATED BRIGHTNESS TEMPERATURES (K):</span><br><span class="line">  122.978 109.550 145.061 132.054 168.257 156.747 183.278 171.656 239.429 232.793</span><br><span class="line"> CALCULATED SURFACE EMISSIVITIES:</span><br><span class="line">    0.408   0.358   0.444   0.391   0.467   0.413   0.520   0.461   0.660   0.597</span><br><span class="line"></span><br><span class="line"> Observed TBs:</span><br><span class="line">  122.978 109.550 145.061 132.054 168.257 156.747 183.278 171.656 239.429 232.793</span><br><span class="line"> Retrieved SURFACE EMISSIVITIES:</span><br><span class="line">    0.409   0.359   0.447   0.394   0.473   0.419   0.527   0.469   0.668   0.606</span><br><span class="line">---------------------------------------------------------------------------------</span><br><span class="line">廓线二：</span><br><span class="line"> CALCULATED BRIGHTNESS TEMPERATURES (K):</span><br><span class="line">  124.568 111.924 147.515 135.568 170.754 160.350 188.391 178.397 243.950 239.090</span><br><span class="line"> CALCULATED SURFACE EMISSIVITIES:</span><br><span class="line">    0.411   0.364   0.448   0.398   0.471   0.420   0.523   0.470   0.663   0.606</span><br><span class="line"></span><br><span class="line"> Observed TBs:</span><br><span class="line">  124.568 111.924 147.515 135.568 170.754 160.350 188.391 178.397 243.950 239.090</span><br><span class="line"> Retrieved SURFACE EMISSIVITIES:</span><br><span class="line">    0.413   0.365   0.453   0.403   0.480   0.430   0.535   0.483   0.677   0.624</span><br><span class="line">-----------------------------------------------------------------------------------</span><br><span class="line">廓线三：</span><br><span class="line"> CALCULATED BRIGHTNESS TEMPERATURES (K):</span><br><span class="line">  119.652 106.068 136.334 122.598 154.660 141.782 164.872 150.992 213.784 201.940</span><br><span class="line"> CALCULATED SURFACE EMISSIVITIES:</span><br><span class="line">    0.407   0.358   0.445   0.392   0.468   0.414   0.522   0.463   0.662   0.599</span><br><span class="line">   </span><br><span class="line"> Observed TBs:</span><br><span class="line">  119.652 106.068 136.334 122.598 154.660 141.782 164.872 150.992 213.784 201.940</span><br><span class="line"> Retrieved SURFACE EMISSIVITIES:</span><br><span class="line">    0.408   0.358   0.447   0.393   0.472   0.417   0.525   0.467   0.667   0.604</span><br></pre></td></tr></table></figure><p>可以看出，我们将正向模拟的TB当作观测输入，成功地反演出来了surface emissivity, 这几个都是洋面样本。</p><h2 id="敏感性"><a href="#敏感性" class="headerlink" title="敏感性"></a>敏感性</h2><p>对emissivity%emis_in进行控制，检查敏感性。</p><figure class="highlight fortran"><figcaption><span>sensivitive_to_mlseinit.f90</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="comment">!! enable self-specified MLSE</span></span><br><span class="line">calcemis(:)= .false.</span><br><span class="line"></span><br><span class="line"><span class="comment">!!! controls</span></span><br><span class="line"><span class="keyword">do</span> iprof=<span class="number">1</span>,nprof</span><br><span class="line">joff = (iprof-<span class="number">1_jpim</span>) * nchannels</span><br><span class="line">emissivity(<span class="number">1</span>+joff: nchannels+joff)% emis_in = <span class="number">0.7</span> + iprof*<span class="number">0.002</span></span><br><span class="line">obs_tb(<span class="number">1</span>+joff: nchannels+joff)= (/ <span class="number">253.503</span>, <span class="number">253.503</span>, <span class="number">256.027</span>, <span class="number">256.023</span>, <span class="number">259.301</span>, <span class="number">259.296</span>, <span class="number">259.640</span>, <span class="number">259.634</span> ,<span class="number">264.946</span>, <span class="number">264.809</span>/)</span><br><span class="line"><span class="keyword">end</span> <span class="keyword">do</span></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"> Profile            1</span><br><span class="line">Specified SURFACE EMISSIVITIES:</span><br><span class="line">   0.702   0.702   0.702   0.702   0.702   0.702   0.702   0.702   0.702   0.702</span><br><span class="line">CALCULATED BRIGHTNESS TEMPERATURES (K):</span><br><span class="line"> 202.148 202.150 211.126 211.124 223.599 223.596 225.980 225.982 250.287 250.164</span><br><span class="line">Observed TBs:</span><br><span class="line"> 253.503 253.503 256.027 256.023 259.301 259.296 259.640 259.634 264.946 264.809</span><br><span class="line">Retrieved SURFACE EMISSIVITIES:</span><br><span class="line">   0.900   0.900   0.900   0.900   0.900   0.900   0.900   0.900   0.901   0.901</span><br><span class="line"> </span><br><span class="line"> Profile            2</span><br><span class="line">Specified SURFACE EMISSIVITIES:</span><br><span class="line">   0.704   0.704   0.704   0.704   0.704   0.704   0.704   0.704   0.704   0.704</span><br><span class="line">CALCULATED BRIGHTNESS TEMPERATURES (K):</span><br><span class="line"> 202.667 202.668 211.580 211.578 223.960 223.956 226.320 226.322 250.435 250.312</span><br><span class="line">Observed TBs:</span><br><span class="line"> 253.503 253.503 256.027 256.023 259.301 259.296 259.640 259.634 264.946 264.809</span><br><span class="line">Retrieved SURFACE EMISSIVITIES:</span><br><span class="line">   0.900   0.900   0.900   0.900   0.900   0.900   0.900   0.900   0.901   0.901</span><br></pre></td></tr></table></figure><p>结果表明，初始设定的emissivity不会影响MLSE的反演。完整的输出结果：<a href="../rttov132-mw-scat/output_sensivitive_to_mlseini.dat">output_sensivitive_to_mlseini.dat</a></p><h2 id="个例模拟"><a href="#个例模拟" class="headerlink" title="个例模拟"></a>个例模拟</h2><p>如上一章的个例，采用TELSEM2作为初始输入，考虑水凝物的RTTOV-SACTT模拟，同时嵌入本章所述的反演方案：<br>结果如下：<br><img src="/blog/research/rttov/rttov132-mw-scat/Retrieved_Emissivity_20230627.jpg"></p>]]></content>
      
      
      <categories>
          
          <category> Research </category>
          
      </categories>
      
      
        <tags>
            
            <tag> RTM </tag>
            
            <tag> RTTOV </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>RTTOV模式学习笔记：(六) 基于MW-SCATT的水凝物模拟</title>
      <link href="/blog/research/rttov/rttov132-mw-scat/"/>
      <url>/blog/research/rttov/rttov132-mw-scat/</url>
      
        <content type="html"><![CDATA[<div class="note primary flat"><p>本笔记属于<a href="../rttov132-column">RTTOV辐射传输模式学习笔记</a>专栏，包含以下文章：</p><div class="btn-center" style="margin-bottom:0px"><a class="btn-beautify outline blue larger" href="/blog/research/rttov/rttov132-installlibs/"   title="(一) 依赖安装"><i class="far fa-hand-point-right"></i><span>(一) 依赖安装</span></a><a class="btn-beautify outline pink larger" href="/blog/research/rttov/rttov132-install/"   title="(二) RTTOV V13.2安装"><i class="far fa-hand-point-right"></i><span>(二) RTTOV V13.2安装</span></a><a class="btn-beautify outline red larger" href="/blog/research/rttov/rttov132-conventions/"   title="(三) 一些约定和特性"><i class="far fa-hand-point-right"></i><span>(三) 一些约定和特性</span></a><a class="btn-beautify outline purple larger" href="/blog/research/rttov/rttov132-variables/"   title="(四) RTTOV 变量和结构体"><i class="far fa-hand-point-right"></i><span>(四) RTTOV 变量和结构体</span></a><a class="btn-beautify outline green larger" href="/blog/research/rttov/rttov132-direct-fw/"   title="(五) 基于Direct Forward的晴空模拟"><i class="far fa-hand-point-right"></i><span>(五) 基于Direct Forward的晴空模拟</span></a><a class="btn-beautify outline orange larger" href="/blog/research/rttov/rttov132-mw-scat/"   title="(六) 基于MW-SCATT的水凝物模拟"><i class="far fa-hand-point-right"></i><span>(六) 基于MW-SCATT的水凝物模拟</span></a><a class="btn-beautify outline navy larger" href="/blog/research/rttov/rttov132-emissivity-retrieve/"   title="(七) 全天气地表微波比辐射反演方案"><i class="far fa-hand-point-right"></i><span>(七) 全天气地表微波比辐射反演方案</span></a></div>&copy; 2023-2030, Jiheng Hu. 本专栏内容禁止转载。</div><hr><p> 本节主要介绍RTTOV MW-SCATT模块对于水凝物散射和全天气微波辐射模拟。</p><h2 id="MW-SCATT原理"><a href="#MW-SCATT原理" class="headerlink" title="MW-SCATT原理"></a>MW-SCATT原理</h2><ol><li><p>水凝物方案<br>根据源码和<a href="baordo.pdf">Baordo的文献</a>，SCATT模块采用的方案如下：</p><blockquote><p>The observation operator designed for assimilating microwave radiances in clear, cloudy and precipitating scenes is RTTOV-SCATT (Bauer et al., 2006), which uses the delta-Eddington approximation (Joseph et al., 1976) to solve the radiative transfer equation including scattering. The bulk optical properties for cloud water, cloud ice and rain are pre-tabulated for each hydrometeor type as a function of temperature, frequency and water content. Cloud water, cloud ice and rain are modelled as spherical particles using Mie theory and a constant density: the first two hydrometeors use a gamma size distribution (e.g. Petty and Huang, 2011), while a Marshall and Palmer (1948) size distribution is used for rain.   </p></blockquote><p> 总结来说，采用了：</p><ul><li>水凝物的球形粒子mie散射计算；</li><li>预先计算的水凝物光学系数表；</li><li>云滴谱采用gamma DSD分布；</li><li>雨滴谱采用marshall-palmer分布；</li><li>雪花的形状和散射采用刘国胜的方案。</li></ul></li><li><p>双模计算<br>MW-SCATT模块内部引用了rttov_direct()进行晴空模拟；对水凝物的散射计算使用了Hydrotable参数表来实现快速计算，采用了Eddington近似进行散射计算；<br><img src="/blog/home.ustc.edu.cn/~hjh18305/space/research/rttov/rttov132-mw-scat/rttov-scat-xminder.png" alt="RTTOV-SCATT Flow Chart"></p></li><li><p>亮温加权<br>MW-SCATT分别计算晴空气体吸收和阴天的水凝物的散射吸收，再使用云分数进行辐射的加权平均。<br>$$<br>\begin{align}<br>Tb_{all sky} &#x3D; (1 − CC)* Tb_{clr} + CC * Tb_{cld}<br>\end{align}<br>$$<br>按照<a href="baordo.pdf">Baordo的文献</a>介绍，CC(cloud cover)在陆地上时被赋予了所有层中最大的那层的Cmax，而在海面上，采用多种水凝物含量的多层加权Cav。</p><blockquote><p>Over ocean surfaces, C is computed as a hydrometeor-weighted average of cloud, convective and large-scale precipitation fractions across all vertical levels, providing an approximate but computationally efficient solution to account for the effects of subgrid variability in cloud and precipitation (Geer et al., 2009a,2009b, the ‘Cav’ approach).<br>Over land surfaces, C is computed as the largest cloud fraction in the model profile (the ‘Cmax’ approach.) This is essentially a tuning measure to compensate for a relative lack of deep convection over land in the model, compared with over the ocean.</p></blockquote></li></ol><h2 id="理想模拟"><a href="#理想模拟" class="headerlink" title="理想模拟"></a>理想模拟</h2><ol><li><p>简单个例</p><figure class="highlight fortran"><figcaption><span>ideal_rttovscatt_fw.f90</span></figcaption><table><tr><td class="code"><pre><span class="line">prof_filename=<span class="string">&#x27;./prof_rttovscatt.dat&#x27;</span></span><br><span class="line">hydrotable_filename=<span class="string">&#x27;/home/hjh/rttov13/rtcoef_rttov13/hydrotable/hydrotable_fy3_mwri.dat&#x27;</span></span><br><span class="line">coef_filename=<span class="string">&#x27;/home/hjh/rttov13/rtcoef_rttov13/rttov13pred54L/rtcoef_fy3_4_mwri.dat&#x27;</span></span><br><span class="line">nprof=<span class="number">3</span></span><br><span class="line">nlevels=<span class="number">61</span></span><br><span class="line">nchannels=<span class="number">10</span></span><br><span class="line"><span class="built_in">ALLOCATE</span>(channel_list(nchannels))</span><br><span class="line">channel_list=(/<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">10</span>/)</span><br><span class="line">nthreads=<span class="number">1</span></span><br></pre></td></tr></table></figure><p>一共三条廓线，存储在<a href="prof_rttovscatt.dat">prof_rttovscatt.dat</a>，每条廓线都是61层，包含大气温湿度参数和四种水凝物浓度，单位是ppmv:</p><figure class="highlight fortran"><table><tr><td class="code"><pre><span class="line"><span class="comment">! --- Profile 1 ---</span></span><br><span class="line"><span class="comment">! Vertical profiles:</span></span><br><span class="line"><span class="comment">!       p        ph         t         q        cc       clw       ciw      rain      snow</span></span><br><span class="line"><span class="comment">!   [hPa]     [hPa]       [K]    [ppmv]     [0-1]   [kg/kg]   [kg/kg]   [kg/kg]   [kg/kg]</span></span><br><span class="line"> <span class="number">0.498E-02</span> <span class="number">0.000E+00</span> <span class="number">0.225E+03</span> <span class="number">0.307E+01</span> <span class="number">0.000E+00</span> <span class="number">0.000E+00</span> <span class="number">0.000E+00</span> <span class="number">0.000E+00</span> <span class="number">0.000E+00</span></span><br><span class="line"> <span class="number">0.100E+00</span> <span class="number">0.100E-01</span> <span class="number">0.225E+03</span> <span class="number">0.614E+01</span> <span class="number">0.000E+00</span> <span class="number">0.000E+00</span> <span class="number">0.000E+00</span> <span class="number">0.000E+00</span> <span class="number">0.000E+00</span></span><br><span class="line"> ......省略......</span><br><span class="line"> <span class="number">0.986E+03</span> <span class="number">0.984E+03</span> <span class="number">0.279E+03</span> <span class="number">0.823E+04</span> <span class="number">0.000E+00</span> <span class="number">0.358E-06</span> <span class="number">0.000E+00</span> <span class="number">0.168E-04</span> <span class="number">0.000E+00</span></span><br><span class="line"> <span class="number">0.989E+03</span> <span class="number">0.988E+03</span> <span class="number">0.279E+03</span> <span class="number">0.831E+04</span> <span class="number">0.000E+00</span> <span class="number">0.119E-06</span> <span class="number">0.000E+00</span> <span class="number">0.165E-04</span> <span class="number">0.132E-07</span></span><br><span class="line"><span class="comment">! Near-surface variables:</span></span><br><span class="line"><span class="comment">!  2m T (K)    2m q (ppmv) 2m p (hPa) 10m wind u (m/s)  10m wind v (m/s)</span></span><br><span class="line">   <span class="number">279.638</span>    <span class="number">8507.6938</span>    <span class="number">990.138</span>      -<span class="number">2.69568</span>             <span class="number">3.88115</span></span><br><span class="line"><span class="comment">! Skin variables:</span></span><br><span class="line"><span class="comment">!  Skin T (K)  Salinity   FASTEM parameters for land surfaces</span></span><br><span class="line">   <span class="number">280.403</span>     <span class="number">35.0</span>       <span class="number">3.0</span> <span class="number">5.0</span> <span class="number">15.0</span> <span class="number">0.1</span> <span class="number">0.3</span></span><br><span class="line"><span class="comment">! Surface type (0=land, 1=sea, 2=sea-ice) and water type (0=fresh, 1=ocean)</span></span><br><span class="line">   <span class="number">1</span>         <span class="number">1</span></span><br><span class="line"><span class="comment">! Elevation (km), latitude and longitude (degrees)</span></span><br><span class="line">   <span class="number">0.</span>    <span class="number">0.</span>   <span class="number">0.</span></span><br><span class="line"><span class="comment">! Sat. zenith and azimuth angles(degrees)</span></span><br><span class="line">   <span class="number">23.</span>     <span class="number">0.</span></span><br></pre></td></tr></table></figure><p>输出<a href="output_ideal_rttovscatt_fwd.dat">output_ideal_rttovscatt_fwd.dat</a>。  </p></li><li><p>考虑CLW的吸收？<br>在晴空的条件的模拟（不考虑水凝物的散射情况下）， RTTOV可以考虑CLW的吸收效应：</p><blockquote><p>《user guide: P40》For MW simulations it is possible to supply a cloud liquid water (CLW) profile in the profiles(:)%clw(:) array which is treated as a purely absorbing medium. It is important to note that this is not the same as CLW supplied to RTTOVSCATT for scattering simulations (see section 8.7). If you wish to include CLW in the “clear-sky” simulations, you must set opts%rt_mw%clw_data to true. By default, RTTOV ignores any CLW content above 322hPa. This limit is specified in the opts%rt_mw%clw_cloud_top option allowing you to modify it if you wish.<br>按照文档的说明，如果你想把云水的吸收作用考虑进行，需要将<code>opts%rt_mw%clw_data = .true.</code>，源码是默认关闭的(rttov_scatt.F90: line 376)。注意这里不同与rttov-scatt模块，只进行云水的吸收计算。<br>这一选项使得RTTOV执行以下代码的片段：</p></blockquote><figure class="highlight fortran"><figcaption><span>rttov_direct.F90: line 676</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="comment">!--------------------------------------------------------------------------</span></span><br><span class="line"><span class="comment">! MW CLW absorption optical depths</span></span><br><span class="line"><span class="comment">!--------------------------------------------------------------------------</span></span><br><span class="line">  <span class="keyword">IF</span> (sensor_mw .AND. opts%rt_mw%clw_data) <span class="keyword">THEN</span></span><br><span class="line">    <span class="keyword">CALL</span> rttov_mw_clw_absorption( &amp;</span><br><span class="line">            opts,             &amp;</span><br><span class="line">            coefs%coef,       &amp;</span><br><span class="line">            chanprof,         &amp;</span><br><span class="line">            traj0%raytracing, &amp;</span><br><span class="line">            profiles,         &amp;</span><br><span class="line">            traj0%aux_prof,   &amp;</span><br><span class="line">            traj0%opdp_path)</span><br><span class="line">  <span class="keyword">ENDIF</span></span><br></pre></td></tr></table></figure><p>但是，RTTOV-SCATT模块在进行晴空column的模拟时，默认不考虑CLW-cloud liquid water的吸收效应。这在以下的两处代码块都可以体现：</p><figure class="highlight fortran"><figcaption><span>rttov_scatt.F90: line 367 和 example_fwd.F90: Line 181</span></figcaption><table><tr><td class="code"><pre><span class="line">opts%rt_mw%clw_data            = .false.</span><br><span class="line">......</span><br><span class="line"><span class="keyword">Call</span> rttov_direct(......) </span><br></pre></td></tr></table></figure><p>rttov_scatt.F90和 example_fwd.F90的差异在于，后者时晴空的模拟示例，我们可以直接修改<code>clw_data= .false.</code>以实现对CLW吸收的考虑（实际上毫无必要）。但是前者属于RTTOV-SCATT模块的源码，对<code>clw_data</code>设置被封装在rttov_scatt高级接口中，在模式编译安装时已经生成了动态库，直接修改rttov_scatt.F90的源码将不起任何作用。修改以后必须在’src&#x2F;main&#x2F;‘目录下执行make才能更新动态库<code>rttov13/obj/rttov_scatt.o</code>,<code>/lib/librttov_mw_scatt.a</code>。<br>注意！这里涉及到的改动较大，先新建rttov_scatt.F90的副本，再做探讨。<br>新建副本：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> /home/hjh/rttov13/src/mw_scatt</span><br><span class="line">$ <span class="built_in">cp</span> rttov_scatt.F90 rttov_scatt.F90_bak</span><br></pre></td></tr></table></figure><p>作为测试，修改上述代码块并添加一行打印信息：</p><figure class="highlight fortran"><figcaption><span>rttov_scatt.F90: line 367</span></figcaption><table><tr><td class="code"><pre><span class="line">opts%rt_mw%clw_data            = .true. <span class="comment">!! enable CLW as gass absorptor in SCATT module</span></span><br><span class="line"><span class="built_in">print</span>*, opts%rt_mw%clw_data  <span class="comment">!! print to screen the info</span></span><br></pre></td></tr></table></figure><p>编译rttov_scatt模块：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[hjh@node05] ~/rttov13/src/mw_scatt </span><br><span class="line"><span class="variable">$make</span></span><br><span class="line"><span class="built_in">cd</span> ../../tmp-gfortran-openmp/mw_scatt &amp;&amp; gfortran -I../..//include -D_RTTOV_NETCDF -I/home/hjh/netcdf/include  -D_RTTOV_HDF -I/home/hjh/hdf5/include       -fPIC -O3 -fopenmp -ffree-line-length-none -I../..//mod -c ../../src/mw_scatt/rttov_scatt.F90 -o ../..//obj/rttov_scatt.o</span><br><span class="line">...省略...</span><br><span class="line">ar: 正在创建 ../..//lib/librttov13_mw_scatt.a</span><br><span class="line">\<span class="built_in">ln</span> -s librttov13_mw_scatt.a ../..//lib/librttov_mw_scatt.a</span><br></pre></td></tr></table></figure><p>切换到个例模拟目录，编译执行模拟程序：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> /data04/1/hjh/rttov.mlse.algor/2.cloud.forward/ideal.simu.scatt</span><br><span class="line">$ make -f makefile_exaple</span><br><span class="line">$ ./ideal_rttovscatt_fwd.exe </span><br><span class="line">    coefficient file : /home/hjh/rttov13/rtcoef_rttov13/rttov13pred54L/rtcoef_fy3_4_mwri.dat</span><br><span class="line">    hydrotable file : /home/hjh/rttov13/rtcoef_rttov13/hydrotable/hydrotable_fy3_mwri.dat</span><br><span class="line">    profile file : ./prof_rttovscatt.dat</span><br><span class="line">    2023/08/18  23:10:35  Open scattering coefficient file /home/hjh/rttov13/rtcoef_rttov13/hydrotable/hydrotable_fy3_mwri.dat</span><br><span class="line">    T</span><br><span class="line">    2023/08/18  23:10:36  fatal error <span class="keyword">in</span> module ../../src/main/rttov_check_options.F90:0279</span><br><span class="line">        Profiles structure not allocated <span class="keyword">for</span> clw, but clw_data flag is <span class="literal">true</span>; opts%rt_mw%clw_data must be <span class="literal">true</span> when calling rttov_alloc_prof</span><br><span class="line">    2023/08/18  23:10:36  fatal error <span class="keyword">in</span> module ../../src/main/rttov_direct.F90:0257</span><br><span class="line">    2023/08/18  23:10:36  fatal error <span class="keyword">in</span> module rttov_scatt</span><br><span class="line">        error <span class="keyword">in</span> rttov_direct</span><br><span class="line">    rttov_scatt error</span><br><span class="line">    STOP 1</span><br></pre></td></tr></table></figure><p><code>T</code>打印出来了，说明修改生效。但是后续运行出错，报错信息很明确：在考虑CLW的同时没有将CLW廓线存放在profiles%clw结构体中，而是作为水凝物放在了<code>cld_profiles(iprof) % hydro(ilev,hydro_index_clw)</code>中，那么scatt_direct接口获取不到液态水的廓线。</p><figure class="highlight fortran"><figcaption><span>rttov_check_options.F90: line 279</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="keyword">IF</span> (opts%rt_mw%clw_data) <span class="keyword">THEN</span></span><br><span class="line">  <span class="keyword">IF</span> (.NOT. <span class="built_in">ASSOCIATED</span>(profiles(<span class="number">1</span>)%clw)) <span class="keyword">THEN</span></span><br><span class="line">    err = errorstatus_fatal</span><br><span class="line">    msg = <span class="string">&#x27;Profiles structure not allocated for clw, but clw_data flag is true; &#x27;</span>// &amp;</span><br><span class="line">          <span class="string">&#x27;opts%rt_mw%clw_data must be true when calling rttov_alloc_prof&#x27;</span></span><br><span class="line">    THROWM(err.NE<span class="number">.0</span>, msg)</span><br><span class="line">  <span class="keyword">ENDIF</span></span><br><span class="line"><span class="keyword">ENDIF</span></span><br></pre></td></tr></table></figure><p>所以此处如果考虑CLW的吸收，还必须要给profiles%clw赋值。做两个地方的改动：<br>个例代码，创建profile%clw：</p><figure class="highlight fortran"><figcaption><span>ideal_rttovscatt_fwd.f90: line 239</span></figcaption><table><tr><td class="code"><pre><span class="line">   <span class="comment">!! 添加以下一行代码</span></span><br><span class="line"> opts%rt_mw%clw_data=.true.  <span class="comment">!!! jiheng to enable CLW absorption</span></span><br><span class="line"><span class="comment">! Allocate structures for RTTOV direct model</span></span><br><span class="line"> <span class="keyword">CALL</span> rttov_alloc_direct(......)</span><br></pre></td></tr></table></figure><p>CLW廓线赋值</p><figure class="highlight fortran"><figcaption><span>ideal_rttovscatt_fwd.f90: line 338</span></figcaption><table><tr><td class="code"><pre><span class="line">   cld_profiles(iprof) % hydro(ilev,hydro_index_snow)     <span class="comment">! snow (kg/kg)</span></span><br><span class="line">   <span class="comment">!! 添加以下一行代码</span></span><br><span class="line">profiles(iprof) % clw(ilev)= cld_profiles(iprof) % hydro(ilev,hydro_index_clw)  <span class="comment">!!!  jiheng to enable CLW absorption</span></span><br><span class="line">   <span class="comment">! graupel (kg/kg) (not in data file)</span></span><br><span class="line">   cld_profiles(iprof) % hydro(ilev,hydro_index_graupel) = <span class="number">0.0_jprb</span></span><br></pre></td></tr></table></figure><p>修改rttov_scatt.F90源码：</p><figure class="highlight fortran"><figcaption><span>rttov_scatt.F90: line 376</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="comment">! opts%rt_mw%clw_data            = .false.</span></span><br><span class="line">opts%rt_mw%clw_data            = .true.  <span class="comment">!! jiheng to enable CLW absorption</span></span><br></pre></td></tr></table></figure><p>重复以上编译运行过程，发现运行成功，输出为<a href="output_ideal_rttovscatt_fwd-clw.dat">output_ideal_rttovscatt_fwd-clw.dat</a>。<br>大气廓线多了一类CLW，模拟的亮温和先前也有所增加：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">考虑CLW吸收前：</span><br><span class="line"> 122.978 109.550 145.061 132.054 168.257 156.747 183.278 171.656 239.429 232.793</span><br><span class="line">考虑CLW吸收后：</span><br><span class="line"> 125.531 112.312 151.449 139.065 176.342 165.698 197.658 187.871 254.956 251.438</span><br></pre></td></tr></table></figure><p>这是因为云液态水对低频微波的影响主要是吸收作用，为什么SCATT模块默认不考虑CLW吸收呢？那为什么留下opts%rt_mw%clw_data选项而不用呢？<br>我自己的认识：晴空模拟部分不需要考虑云水的吸收，因为是按照云盖分开的，所以是存粹的清空模拟；有云部分的云水散射和吸收（和为消光）由Eddington近似完成。如果再将CLW的吸收考虑进去，那么会多计算一次云水的吸收，结果自然偏大；<br>所以，opts%rt_mw%clw_data是用于无散射云水的模拟。所以针对这个的探讨导致为止，将代码回复到默认样式。建议不要修改任何默认配置。</p></li></ol><h2 id="Eddington近似"><a href="#Eddington近似" class="headerlink" title="Eddington近似"></a>Eddington近似</h2><p>源码看的十分费劲，所以推荐刊廖国男的《大气辐射导论》教程。</p><h2 id="云水的敏感性研究"><a href="#云水的敏感性研究" class="headerlink" title="云水的敏感性研究"></a>云水的敏感性研究</h2><p>略。有时间的话补充，也许会交给师妹练手。</p><h2 id="FY3G-MWRI个例模拟"><a href="#FY3G-MWRI个例模拟" class="headerlink" title="FY3G MWRI个例模拟"></a>FY3G MWRI个例模拟</h2><p>继续使用ERA5的大气廓线和水凝物廓线：</p><ul><li>云水、云冰和云分数如下：<br><img src="/blog/research/rttov/rttov132-mw-scat/era5-cloud.png" alt="云水含量剖面"></li><li>雨水和雪水：<br><img src="/blog/research/rttov/rttov132-mw-scat/era5-ice.png" alt="降水含量分布（850mb）"></li></ul><p>由于ERA5廓线在地形（如高原）以下的部分也是有效值，是地表层的填充。在输入RTTOV之前，我对水凝物廓线做了如下修正：</p><figure class="highlight fortran"><table><tr><td class="code"><pre><span class="line"><span class="keyword">where</span>(profiles(iprof)%p(:)&gt;profiles(iprof)%s2m%p)profiles(iprof)%q=<span class="number">1.E-9</span></span><br><span class="line"><span class="keyword">where</span>(profiles(iprof)%p(:)&gt;profiles(iprof)%s2m%p)cld_profiles(iprof)%hydro_frac(:,<span class="number">1</span>)=<span class="number">0.0</span></span><br><span class="line"><span class="keyword">where</span>(profiles(iprof)%p(:)&gt;profiles(iprof)%s2m%p)cld_profiles(iprof)%hydro(:,hydro_index_clw)=<span class="number">0.0</span></span><br><span class="line"><span class="keyword">where</span>(profiles(iprof)%p(:)&gt;profiles(iprof)%s2m%p)cld_profiles(iprof)%hydro(:,hydro_index_ciw)=<span class="number">0.0</span></span><br><span class="line"><span class="keyword">where</span>(profiles(iprof)%p(:)&gt;profiles(iprof)%s2m%p)cld_profiles(iprof)%hydro(:,hydro_index_rain)=<span class="number">0.0</span></span><br><span class="line"><span class="keyword">where</span>(profiles(iprof)%p(:)&gt;profiles(iprof)%s2m%p)cld_profiles(iprof)%hydro(:,hydro_index_snow)=<span class="number">0.0</span></span><br></pre></td></tr></table></figure><p>为了逃逸输入检查，将<code>opts_scatt%config%do_checkinput= .FALSE.</code></p><h3 id="亮温模拟结果"><a href="#亮温模拟结果" class="headerlink" title="亮温模拟结果"></a>亮温模拟结果</h3><p>考虑水凝物散射的模拟结果：<br><img src="/blog/research/rttov/rttov132-mw-scat/FY3G_TBs_simulation_20230627.jpg" alt="考虑水凝物散射的模拟结果"><br>卫星实时观测：<br><img src="/blog/research/rttov/rttov132-mw-scat/FY3G_TBs_obs_20230627.jpg" alt="卫星实时观测"><br>上一章中晴空假设的模拟结果：<br><img src="/blog/research/rttov/rttov132-mw-scat/FY3G_TBs_simu_clear_20230627.jpg" alt="三通道亮温模拟"></p><h2 id="使用Emissivity-Atlas的模拟"><a href="#使用Emissivity-Atlas的模拟" class="headerlink" title="使用Emissivity Atlas的模拟"></a>使用Emissivity Atlas的模拟</h2><p>同上一章一样，我们使用TELSEM2的atlas替换模式内部的emiss方案。模拟的结果如下：<br>使用TELSEM作为陆面发射率的all-weather模拟：<br><img src="/blog/research/rttov/rttov132-mw-scat/RTTOV-TELSEM_Cloudy_TB_20230627.jpg" alt="TELSEM+RTTOV_SCATT"></p><p>完整的运行日志如下<a href="screen-rttoc-scatt-telsem2.log">screen-rttoc-scatt-telsem2.log</a></p><h2 id="EFOV平均的水凝物廓线模拟"><a href="#EFOV平均的水凝物廓线模拟" class="headerlink" title="EFOV平均的水凝物廓线模拟"></a>EFOV平均的水凝物廓线模拟</h2>]]></content>
      
      
      <categories>
          
          <category> Research </category>
          
      </categories>
      
      
        <tags>
            
            <tag> RTM </tag>
            
            <tag> RTTOV </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>RTTOV模式笔记：(五) 基于Direct Forward的晴空模拟</title>
      <link href="/blog/research/rttov/rttov132-direct-fw/"/>
      <url>/blog/research/rttov/rttov132-direct-fw/</url>
      
        <content type="html"><![CDATA[<div class="note primary flat"><p>本笔记属于<a href="../rttov132-column">RTTOV辐射传输模式学习笔记</a>专栏，包含以下文章：</p><div class="btn-center" style="margin-bottom:0px"><a class="btn-beautify outline blue larger" href="/blog/research/rttov/rttov132-installlibs/"   title="(一) 依赖安装"><i class="far fa-hand-point-right"></i><span>(一) 依赖安装</span></a><a class="btn-beautify outline pink larger" href="/blog/research/rttov/rttov132-install/"   title="(二) RTTOV V13.2安装"><i class="far fa-hand-point-right"></i><span>(二) RTTOV V13.2安装</span></a><a class="btn-beautify outline red larger" href="/blog/research/rttov/rttov132-conventions/"   title="(三) 一些约定和特性"><i class="far fa-hand-point-right"></i><span>(三) 一些约定和特性</span></a><a class="btn-beautify outline purple larger" href="/blog/research/rttov/rttov132-variables/"   title="(四) RTTOV 变量和结构体"><i class="far fa-hand-point-right"></i><span>(四) RTTOV 变量和结构体</span></a><a class="btn-beautify outline green larger" href="/blog/research/rttov/rttov132-direct-fw/"   title="(五) 基于Direct Forward的晴空模拟"><i class="far fa-hand-point-right"></i><span>(五) 基于Direct Forward的晴空模拟</span></a><a class="btn-beautify outline orange larger" href="/blog/research/rttov/rttov132-mw-scat/"   title="(六) 基于MW-SCAT的水凝物模拟"><i class="far fa-hand-point-right"></i><span>(六) 基于MW-SCAT的水凝物模拟</span></a><a class="btn-beautify outline navy larger" href="/blog/research/rttov/rttov132-emissivity-retrieve/"   title="(七) 全天气地表微波比辐射反演方案"><i class="far fa-hand-point-right"></i><span>(七) 全天气地表微波比辐射反演方案</span></a></div>&copy; 2023-2030, Jiheng Hu. 本专栏内容禁止转载。</div><h2 id="晴空模拟流程"><a href="#晴空模拟流程" class="headerlink" title="晴空模拟流程"></a>晴空模拟流程</h2><ul><li>example_fwd例程<br><a href="https://public.websites.umich.edu/~jihenghu/filzoo/example_fwd.F90"><code>/src/test/example_fwd.F90</code></a>展示了对最通用简单的RTTOV晴空模拟案例，你只需要根据需求修改自己模拟输入即可。<br>RTTOV模拟通常包含以下步骤，这也是本例程的结构。<blockquote><p>  The usual steps to take when running RTTOV are as follows:</p></blockquote><ol><li>Specify required RTTOV options</li><li>Read coefficients</li><li>Allocate RTTOV input and output structures</li><li>Set up the chanprof array with the channels&#x2F;profiles to simulate</li><li>Read input profile(s)</li><li>Set up surface emissivity and&#x2F;or reflectance</li><li>Call rttov_direct and store results</li><li>Deallocate all structures and arrays</li></ol></li></ul><p>rttov coefficient输入字符串地址，例如可以输入54层FY3D MWRI应用先行数据集提供的coefficient参数表：<br><a href="https://public.websites.umich.edu/~jihenghu/filzoo/rtcoef_fy3_4_mwri.dat"><code>/home/hjh/rttov13/rtcoef_rttov13/rttov13pred54L/rtcoef_fy3_4_mwri.dat</code></a>。<br>rttov profile 输入，例程是按照格式化方式读入的，示例的廓线为:<br><a href="https://public.websites.umich.edu/~jihenghu/filzoo/prof.dat"><code>/home/hjh/rttov13/rttov_test/test_example.1/prof.dat</code></a>。</p><ul><li>跳过文件中的注释行：CALL rttov_skipcommentline(iup, errorstatus)</li><li>指定气体的单位:  <figure class="highlight fortran"><table><tr><td class="code"><pre><span class="line"><span class="comment">! 0 =&gt; ppmv over dry air</span></span><br><span class="line"><span class="comment">! 1 =&gt; kg/kg over moist air</span></span><br><span class="line"><span class="comment">! 2 =&gt; ppmv over moist air</span></span><br><span class="line">READ(iup,*) profiles(<span class="number">1</span>) % gas_units</span><br><span class="line">profiles(:) % gas_units = profiles(<span class="number">1</span>) % gas_units </span><br></pre></td></tr></table></figure>  如果使用ERA5的水汽混合比Q，其单位是kg&#x2F;kg，应当gas_units&#x3D;1；</li><li>随后依次是Pressure levels (hPa)Temperature profile (K)Water vapour profile (ppmv)的自上而下的51层廓线，Ozone profile (ppmv)的轮廓线没有考虑，在源码和廓线示例中都被注释了</li><li>最下面是近地表和surface的参数，仪器参数，分别被读进profiles(iprof)%s2m； profiles(iprof)%skin； profiles(iprof)%elevation等结构中；</li><li>这里还有一个simple cloud 参数，对于晴空，将cloud fraction设为0.0就可以忽略云的考虑：<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">! Cloud top pressure (hPa) and cloud fraction for simple cloud scheme</span><br><span class="line">   500.00    0.0</span><br></pre></td></tr></table></figure></li></ul><h2 id="个例实战-一-理想晴空单柱正向模拟"><a href="#个例实战-一-理想晴空单柱正向模拟" class="headerlink" title="个例实战(一) 理想晴空单柱正向模拟"></a>个例实战(一) 理想晴空单柱正向模拟</h2><p>设定：</p><ol><li>使用参考大气廓线；</li><li>使用理想的地表发射率</li><li>只考虑水汽的吸收，不考虑O3、云等水凝物的吸收和散射</li></ol><p>输入的设置如下：</p><figure class="highlight fortran"><figcaption><span>example_fwd.F90</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="comment">!========== Interactive inputs == start ==============</span></span><br><span class="line"><span class="comment">! coeff 文件</span></span><br><span class="line">coef_filename=<span class="string">&#x27;/home/hjh/rttov13/rtcoef_rttov13/rttov13pred54L/rtcoef_fy3_4_mwri.dat&#x27;</span></span><br><span class="line">prof_filename=<span class="string">&#x27;./prof.dat&#x27;</span> <span class="comment">! 理想廓线</span></span><br><span class="line">nprof=<span class="number">1</span>   <span class="comment">! 单柱模拟</span></span><br><span class="line">nlevels=<span class="number">51</span> </span><br><span class="line">dosolar=<span class="number">0</span>  <span class="comment">! 不考虑日光</span></span><br><span class="line">nchannels=<span class="number">10</span> <span class="comment">! 10个通道</span></span><br><span class="line">channel_list=(/<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">10</span>/)  <span class="comment">! 通道列表</span></span><br><span class="line">nthreads=<span class="number">1</span>  <span class="comment">! 单线程</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ make -f Makefile_examples <span class="comment"># 编译</span></span><br><span class="line">$ ./example_fwd.exe <span class="comment">## 执行</span></span><br><span class="line">path of coefficient file   --------------  </span><br><span class="line">        /home/hjh/rttov13/rtcoef_rttov13/rttov13pred54L/rtcoef_fy3_4_mwri.dat                                                                                                                                                                                       </span><br><span class="line">path of file containing profile data ------------ ./prof.dat                                                                                                                                                                                                                                                      </span><br><span class="line">number of profiles ---------------           1</span><br><span class="line">number of profile levels -------------          51</span><br><span class="line">turn on solar simulations? (0=no, 1=<span class="built_in">yes</span>)  --------       0</span><br><span class="line">number of channels to simulate per profile -----------      10</span><br><span class="line">enter space-separated channel list ---------------</span><br><span class="line"> 1    2    3    4    5    6    7    8     9    10</span><br><span class="line">number of threads to use  --------------------       1</span><br></pre></td></tr></table></figure><h3 id="洋面模拟结果"><a href="#洋面模拟结果" class="headerlink" title="洋面模拟结果"></a>洋面模拟结果</h3><p>这里是洋面的模拟结果（Surface type&#x3D;1）:</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">CALCULATED BRIGHTNESS TEMPERATURES (K):</span><br><span class="line">  114.68  114.71  133.38  133.23  159.48  159.25  158.36  157.81  215.07  213.82</span><br><span class="line"> </span><br><span class="line">CALCULATED SURFACE TO SPACE TRANSMITTANCE:</span><br><span class="line">  0.9867  0.9867  0.9530  0.9530  0.8799  0.8799  0.9214  0.9214  0.7887  0.7887</span><br><span class="line"> </span><br><span class="line">CALCULATED SURFACE EMISSIVITIES:</span><br><span class="line">   0.379   0.379   0.408   0.407   0.427   0.426   0.472   0.470   0.606   0.599</span><br></pre></td></tr></table></figure><p>这里可以看出，洋面的模拟emissivity在0.5以下，这是一个非常典型的洋面发射率值，并且随着频率升高，这是由Debye方程决定的，并且由于洋面的spacular特性，发射率存在极化差。<br>在如此低的背景输出情况下，模拟得到的天顶亮温在200K以下，对于晴空洋面，也较为合理。如果这时候出现云（240K以上），那么对比度会非常高，所以洋面云和降水反演算法的精度较高。</p><blockquote><p>关于表面发射率的模拟<br>洋面的发射率模拟会考虑海温、盐度、洋面风速等物理量。一般来说，先计算海水的节点常数，随后进行Fresnel反射率计算，最后还要进行风速作用下的表面粗糙洋面的反射率修正。这个思想和陆面发射率模拟的思想是相通的，只不过陆面考虑的介质更复杂，表面的粗糙和风速也无关。所以，整个RTTOV模式只考虑了近地面风场，并且只有在进行洋面发射率模拟时才用到，在进行发射率反演及陆面模拟时，风速的输入是可选的。</p></blockquote><h3 id="陆面模拟结果"><a href="#陆面模拟结果" class="headerlink" title="陆面模拟结果"></a>陆面模拟结果</h3><p>我们修改一下Surface type&#x3D;0,可以进行陆面上空的辐射传输模拟。<br>输出结果如下：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">CALCULATED BRIGHTNESS TEMPERATURES (K):</span><br><span class="line">  256.79  256.79  253.56  253.56  256.05  256.05  252.24  252.24  261.27  261.27</span><br><span class="line"> </span><br><span class="line">CALCULATED SURFACE TO SPACE TRANSMITTANCE:</span><br><span class="line">  0.9867  0.9867  0.9530  0.9530  0.8799  0.8799  0.9214  0.9214  0.7887  0.7887</span><br><span class="line"> </span><br><span class="line">CALCULATED SURFACE EMISSIVITIES:</span><br><span class="line">   0.893   0.893   0.875   0.875   0.869   0.869   0.864   0.864   0.874   0.874</span><br></pre></td></tr></table></figure><p>可以看出，RTTOV的MEM模块算出来的陆面emissivity在0.9左右，相应的TB模拟在250K以上，这个结果对于陆面理想模拟来说，较为合理。</p><h3 id="自定义Emissivity"><a href="#自定义Emissivity" class="headerlink" title="自定义Emissivity"></a>自定义Emissivity</h3><p>除了把Emissivity交给表面模块来计算，我们还可以手动设定输入，以服务于敏感性研究或变分反演方法：</p><figure class="highlight fortran"><table><tr><td class="code"><pre><span class="line">...... </span><br><span class="line">  <span class="comment">! --------------------------------------------------------------------------</span></span><br><span class="line">  <span class="comment">! 6. Specify surface emissivity and reflectance</span></span><br><span class="line">  <span class="comment">! --------------------------------------------------------------------------</span></span><br><span class="line">.......</span><br><span class="line">  <span class="comment">! Calculate emissivity within RTTOV where the input emissivity value is</span></span><br><span class="line">  <span class="comment">! zero or less (all channels in this case)</span></span><br><span class="line">  <span class="comment">! 不进行地表发射率计算</span></span><br><span class="line">  calcemis(:) = .false.</span><br><span class="line">  <span class="comment">! calcemis(:) = (emissivity(:) % emis_in &lt;= 0._jprb)</span></span><br><span class="line">  <span class="comment">! 为所有通道指定0.9的发射率</span></span><br><span class="line">  emissivity(:) % emis_in=<span class="number">0.9</span></span><br></pre></td></tr></table></figure><p>输出的亮温模拟结果如下：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">CALCULATED BRIGHTNESS TEMPERATURES (K):</span><br><span class="line">  258.71  258.71  260.13  260.13  262.91  262.91  261.00  261.00  265.89  265.89</span><br><span class="line"> </span><br><span class="line">CALCULATED SURFACE TO SPACE TRANSMITTANCE:</span><br><span class="line">  0.9867  0.9867  0.9530  0.9530  0.8799  0.8799  0.9214  0.9214  0.7887  0.7887</span><br><span class="line"> </span><br><span class="line">CALCULATED SURFACE EMISSIVITIES:</span><br><span class="line">   0.900   0.900   0.900   0.900   0.900   0.900   0.900   0.900   0.900   0.900</span><br></pre></td></tr></table></figure><p>这里可以看出，天顶亮温模拟的极化差为0，这是因为手动设定的Emissivity忽略了地表几何特征引起的反射率的极化差。而大气辐射传输则不会考虑偏振差异，因此有这样的结果；</p><p>除了以上方法，发射率还可以使用Emissivity Atlas作为输入，这个前面讲过，后面用到了会做相应介绍。</p><blockquote><p>注意到上述三种情形：洋面、陆面和手动陆面情形下的大气透过率是一样的，也就是说，大气的辐射传输贡献和地表本身的辐射背景输入无关，基于这一原理，我们可以实现自上而下的反演计算。<br>辐射传输模式也表明了这一点：<br>$$<br>\begin{align}<br>Tb_{v,p}&#x3D;T_u+Γ_v [e_{v,p} T_s+(1-e_{v,p}) T_d]<br>\\<br>e_{v,p}&#x3D;(Tb_{v,p} - T_u - \tau_v T_d)&#x2F;(τ_v (T_s-T_d))<br>\end{align}<br>$$</p></blockquote><h2 id="个例实战-二-晴空轨道模拟"><a href="#个例实战-二-晴空轨道模拟" class="headerlink" title="个例实战(二) 晴空轨道模拟"></a>个例实战(二) 晴空轨道模拟</h2><p>本个例将使用再分析资料进行2023.06.27日的FY上行轨道进行模拟, 模拟卫星观测到的轨道天顶亮温</p><h3 id="试验设置"><a href="#试验设置" class="headerlink" title="试验设置"></a>试验设置</h3><p>使用ERA5相关资料为RTTOV提供输入量，并使用风云的轨道经纬度信息模拟出卫星的实时观测。模拟设定如下：</p><ol><li>不涉及像斑卷积和频率运算；</li><li>不考虑积雪、海冰和云的存在；</li><li>采用最邻近匹配廓线和地表近地表参数；</li><li>廓线取50GHz以下诸层，共29层；</li><li>2m比湿取廓线最底层的值；</li><li>洋面发射率和地表发射率交给模式模拟；</li><li>逐轨道模拟。</li></ol><h3 id="主要步骤："><a href="#主要步骤：" class="headerlink" title="主要步骤："></a>主要步骤：</h3><ul><li>读取卫星Swath的观测几何参数<figure class="highlight fortran"><table><tr><td class="code"><pre><span class="line"><span class="keyword">call</span> read_FY_Vars(FY_FILENAME,nscan,npix,FYlon,FYlat,FYtbs,minsec,igbp,lsmask,dem,retcode)</span><br><span class="line"><span class="keyword">call</span> read_FY_Geometry(FY_FILENAME,nscan,npix,sea,sez,soa,soz,retcode)</span><br></pre></td></tr></table></figure></li><li>匹配和下载ERA5资料<figure class="highlight fortran"><table><tr><td class="code"><pre><span class="line"><span class="keyword">call</span> system(<span class="string">&quot;python3 &quot;</span>//<span class="built_in">trim</span>(<span class="built_in">adjustl</span>(pwd))//<span class="string">&quot;ERA5/era5-pl-download.py &quot;</span>//yyyymmdd//<span class="string">&quot; &quot;</span>//UTC_str )</span><br><span class="line"><span class="keyword">call</span> system(<span class="string">&quot;python3 &quot;</span>//<span class="built_in">trim</span>(<span class="built_in">adjustl</span>(pwd))//<span class="string">&quot;ERA5/era5-land-download.py &quot;</span>//yyyymmdd//<span class="string">&quot; &quot;</span>//UTC_str )</span><br><span class="line"><span class="keyword">call</span> system(<span class="string">&quot;python3 &quot;</span>//<span class="built_in">trim</span>(<span class="built_in">adjustl</span>(pwd))//<span class="string">&quot;ERA5/era5-single-download.py &quot;</span>//yyyymmdd//<span class="string">&quot; &quot;</span>//UTC_str )</span><br></pre></td></tr></table></figure></li><li>读取ERA5参数<figure class="highlight fortran"><table><tr><td class="code"><pre><span class="line"><span class="keyword">call</span> read_ERA5_profs(req_era5,lon,lat,qw,rh,ta,zg)</span><br><span class="line"><span class="keyword">call</span> read_ERA5_surfs(req_surf,lst,psrf,t2m)        <span class="comment">!! K, hPa, K     !!  1 (top) -&gt; 29 (bottom)</span></span><br><span class="line"><span class="keyword">call</span> read_ERA5_sigls(req_sigl,sst,psrf,t2m,u10,v10)</span><br></pre></td></tr></table></figure></li><li>调用RTTOV <figure class="highlight fortran"><table><tr><td class="code"><pre><span class="line"><span class="keyword">call</span> rttov_clearsky_fwd(npix,FYlon,FYlat,plevel,&amp;</span><br><span class="line"> qw,ta,skt,psrf,t2m,u10,v10,dem,lsmask,sea,sez,soa,soz,simu) </span><br></pre></td></tr></table></figure></li><li>写出亮温模拟<figure class="highlight fortran"><table><tr><td class="code"><pre><span class="line"><span class="keyword">call</span> write_hdf5_var(fileout,nscan,npix,nchn,simu,FYlon,FYlat,retcode)</span><br></pre></td></tr></table></figure></li></ul><h3 id="编译运行"><a href="#编译运行" class="headerlink" title="编译运行"></a>编译运行</h3><p>连接网络（服务器环境）</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="variable">$wlt</span>&gt;wlt.log</span><br><span class="line">  --2023-08-16 16:52:18--  http://wlt.ustc.edu.cn/cgi-bin/ip</span><br><span class="line">  正在解析主机 wlt.ustc.edu.cn (wlt.ustc.edu.cn)... 202.38.64.59</span><br><span class="line">  正在连接 wlt.ustc.edu.cn (wlt.ustc.edu.cn)|202.38.64.59|:80... 已连接。</span><br><span class="line">  已发出 HTTP 请求，正在等待回应... 200 OK</span><br><span class="line">  长度： 未指定 [text/html]</span><br><span class="line">  正在保存至: “STDOUT”</span><br><span class="line">  -   [ &lt;=&gt;                   ]   4.74K  --.-KB/s    用时 0s    </span><br><span class="line">  2023-08-16 16:52:18 (18.8 MB/s) - 已写入标准输出 [4858]</span><br></pre></td></tr></table></figure><p>编译。这里可能会出现一类似<code>The following floating-point exceptions are signalling: IEEE_UNDERFLOW_FLAG</code>和<code>stack overflow</code>的报错或warning，你可以适当使用<code>-mcmodel=large</code>、<code>-ffpe-summary=none</code>的编译选项来解决问题。</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="variable">$sh</span> bash.sh </span><br><span class="line"><span class="variable">$tree</span></span><br><span class="line">.</span><br><span class="line">├── bash.sh                     <span class="comment">## 编译脚本</span></span><br><span class="line">├── ERA5                        <span class="comment">## 存放下载的ERA5文件目录</span></span><br><span class="line">│   ├── 20230626</span><br><span class="line">│   ├── era5-land-download.py      <span class="comment">## 下载脚本</span></span><br><span class="line">│   ├── era5-pl-download.py</span><br><span class="line">│   └── era5-single-download.py</span><br><span class="line">├── fyxx_mwri_fwd_clear.f90        <span class="comment">## main prgram</span></span><br><span class="line">├── fyxx_mwri_fwd_clear.o          <span class="comment">## 编译生成的动态库</span></span><br><span class="line">├── fyxx_mwri_fwd_clear_swath.exe  <span class="comment">## 编译生成的可执行文件</span></span><br><span class="line">├── output                         <span class="comment">## 模拟输出文件夹</span></span><br><span class="line">├── rttov_clearsky_fwd.f90         <span class="comment">## RTTOV调用接口</span></span><br><span class="line">├── rttov_clearsky_fwd.o           <span class="comment">## RTTOV调用接口的动态库</span></span><br><span class="line">├── subs                           <span class="comment">## 读写子程序NETCDF, HDF5</span></span><br><span class="line">│   ├── read_ERA5_vars.f90</span><br><span class="line">│   ├── read_FY_vars.f90</span><br><span class="line">│   └── write_hdf5_var.f90</span><br><span class="line">└── wlt.log                        <span class="comment">## 网络日志</span></span><br></pre></td></tr></table></figure><p>运行。运行的时候可能会出现大量的limits超出的判断，可以再源码中使用<code>opts%config%apply_reg_limits= .false.</code>来禁用这些廓线和地表参数的检查。</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$./fyxx_mwri_fwd_clear_swath.exe 20230627</span><br><span class="line"> ├──Start proc. - /data04/0/MWRI/FYxx_IOT/ASCEND/20230627/FYxx_MWRI-_ORBA_L1_20230627_0048_7000M_V0.HDF</span><br><span class="line"> │├── FYxx vars <span class="built_in">read</span> <span class="keyword">done</span>!   </span><br><span class="line"> │├──  ERA5 file Not Found, calling Python downloading script</span><br><span class="line">download- ERA5 20230626  UTC:  01</span><br><span class="line">2023-08-16 16:52:52,406 INFO Welcome to the CDS</span><br><span class="line">2023-08-16 16:52:52,407 INFO Sending request to https://cds.climate.coperni........e-levels</span><br><span class="line">2023-08-16 16:52:52,920 INFO Request is queued</span><br><span class="line">2023-08-16 16:52:55,960 INFO Request is running</span><br><span class="line">2023-08-16 16:53:15,341 INFO Request is completed</span><br><span class="line">2023-08-16 16:53:15,341 INFO Downloading https://download-0010-clon.....65.nc to ERA5/20230626/xxxxx-xxx-20230626-0100.nc (373.5M)</span><br><span class="line">2023-08-16 16:55:30,643 INFO Download rate 2.8M/s </span><br><span class="line"> │├── ERA5 vars <span class="built_in">read</span> <span class="keyword">done</span>!  </span><br><span class="line"> │├── Start RTTOV simulations</span><br><span class="line"> │└── Write down: output/RTTOV_CLEAR_SIMU_Swath_FYxx_MWRI-_ORBA_L1_20230627_0048_7000M_V0.HDF</span><br><span class="line"> ├──Start proc. - /data04/0/MWRI/FYxx_IOT/ASCEND/20230627/FYxx_MWRI-_ORBA_L1_20230627_0221_7000M_V0.HDF</span><br><span class="line"> .......</span><br><span class="line"> │└── Write down: output/RTTOV_CLEAR_SIMU_Swath_FYxx_MWRI-_ORBA_L1_20230627_2357_7000M_V0.HDF</span><br><span class="line"> └── 20230627: process <span class="keyword">done</span></span><br></pre></td></tr></table></figure><p>程序会自动根据需要下载ERA5文件。</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="variable">$tree</span></span><br><span class="line">.</span><br><span class="line">├── ERA5</span><br><span class="line">│   └── 20230627</span><br><span class="line">│      └── ERA5-xxx-xxx-20230627-0100.nc      <span class="comment">## 自动下载的ERA5</span></span><br><span class="line">├── FY_filelist_20230627.txt                  <span class="comment">## 轨道表 </span></span><br><span class="line">├── output                                    <span class="comment">## 输出文件</span></span><br><span class="line">│   └── RTTOV_CLEAR_SIMU_Swath_FYxx_MWRI-_ORBA_L1_20230627_0048_7000M_V0.HDF  </span><br><span class="line">└── output_clearsky_fw.dat                    <span class="comment">## RTTOV样式输出</span></span><br></pre></td></tr></table></figure><h3 id="结果"><a href="#结果" class="headerlink" title="结果"></a>结果</h3><p>模拟和观测的比较：<br><img src="https://s2.loli.net/2024/03/30/eShjiYv8m9aIcbo.jpg" alt="三通道亮温模拟"><br><img src="https://s2.loli.net/2024/03/30/QqCvL3wR4XZNfsY.jpg" alt="三通道亮温观测"><br>可以看出，两者在海陆、森林、沙漠、草地等区域的分布格局是一致的，比如亚马逊雨林中等，沙漠是高值，青藏高原是低值。<br>但是，两者在细节上存在较为明显的差异：陆面上模拟值显著偏低；洋面和漠北存在细节没有模拟出来。这可能的原因包括地表温度、地表发射率的模拟误差和以及没有考虑云的影响。在后面的章节我们会作这方面的模拟。</p><hr><h2 id="个例实战-三-使用Emissvity-Atlas"><a href="#个例实战-三-使用Emissvity-Atlas" class="headerlink" title="个例实战(三) 使用Emissvity Atlas"></a>个例实战(三) 使用Emissvity Atlas</h2><p>本个例个例二的设置和假设基本一致，只不过我们会使用TELSEM2的EmissivityAtlas来替换原有的模拟自己计算的emissivtity。</p><h3 id="下载TELSEM2-Atlas"><a href="#下载TELSEM2-Atlas" class="headerlink" title="下载TELSEM2 Atlas"></a>下载TELSEM2 Atlas</h3><p>下载页：<a href="https://nwp-saf.eumetsat.int/site/software/rttov/download/#Emissivity_BRDF_atlas_data">https://nwp-saf.eumetsat.int/site/software/rttov/download/#Emissivity_BRDF_atlas_data</a><br>下载telsem2_mw_atlas.tar.bz2解压在<code>/home/hjh/rttov13/emis_data/</code>目录下：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> /home/hjh/rttov13/emis_data</span><br><span class="line">$ tar -xvf telsem2_mw_atlas.tar.bz2</span><br><span class="line">├── ssmi_mean_emis_climato_01_cov_interpol_M2</span><br><span class="line">├── ssmi_mean_emis_climato_02_cov_interpol_M2</span><br><span class="line">├── ssmi_mean_emis_climato_03_cov_interpol_M2</span><br><span class="line">├── ssmi_mean_emis_climato_04_cov_interpol_M2</span><br><span class="line">├── ssmi_mean_emis_climato_05_cov_interpol_M2</span><br><span class="line">├── ssmi_mean_emis_climato_06_cov_interpol_M2</span><br><span class="line">├── ssmi_mean_emis_climato_07_cov_interpol_M2</span><br><span class="line">├── ssmi_mean_emis_climato_08_cov_interpol_M2</span><br><span class="line">├── ssmi_mean_emis_climato_09_cov_interpol_M2</span><br><span class="line">├── ssmi_mean_emis_climato_10_cov_interpol_M2</span><br><span class="line">├── ssmi_mean_emis_climato_11_cov_interpol_M2</span><br><span class="line">├── ssmi_mean_emis_climato_12_cov_interpol_M2</span><br><span class="line">├── telsem2</span><br><span class="line">│   ├── Makefile</span><br><span class="line">│   ├── mod_mwatlas_m2.F90</span><br><span class="line">│   ├── README_TELSEM2.pdf</span><br><span class="line">│   ├── readme.txt</span><br><span class="line">│   └── test_telsem2.F90</span><br><span class="line">└── correlations</span><br></pre></td></tr></table></figure><p>telsem包含了ASCII方式存储的Atlas和独立的Fortran读取代码，可以在别的地方使用。RTTOV内置了针对TELSEM2的发射率地图和相应的插值工具的支持。</p><h3 id="使用Atlas"><a href="#使用Atlas" class="headerlink" title="使用Atlas"></a>使用Atlas</h3><p><img src="/blog/research/rttov/rttov132-mw-scat/rttov-atlas-xminder.png"></p><figure class="highlight fortran"><figcaption><span>根据提供的月份读取emissivity</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="comment">! Use emissivity atlas</span></span><br><span class="line"><span class="keyword">CALL</span> rttov_get_emis(             &amp;</span><br><span class="line">          errorstatus,           &amp;</span><br><span class="line">          opts,                  &amp;</span><br><span class="line">          chanprof,              &amp;</span><br><span class="line">          profiles,              &amp;</span><br><span class="line">          coefs,                 &amp;</span><br><span class="line">          emis_atlas,            &amp;</span><br><span class="line">          emissivity(:) % emis_in)</span><br></pre></td></tr></table></figure><p>如果是海洋或者没有telsem2 atlas的地方，使用RTTOV地表模式进行计算:</p><figure class="highlight fortran"><figcaption><span>example_atlas_fwd.F90</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="comment">! Calculate emissivity within RTTOV where the atlas emissivity value is zero or less</span></span><br><span class="line">calcemis(:) = (emissivity(:) % emis_in &lt;= <span class="number">0._jprb</span>)</span><br><span class="line"><span class="comment">! Use the RTTOV emissivity calculations over sea surfaces</span></span><br><span class="line"><span class="keyword">DO</span> j = <span class="number">1</span>, <span class="built_in">SIZE</span>(chanprof)</span><br><span class="line">  <span class="keyword">IF</span> (profiles(chanprof(j)%prof) % skin % surftype == surftype_sea) <span class="keyword">THEN</span></span><br><span class="line">    calcemis(j) = .TRUE.</span><br><span class="line">  <span class="keyword">ENDIF</span></span><br><span class="line"><span class="keyword">ENDDO</span></span><br></pre></td></tr></table></figure><p>调用RTTOV进行计算：</p><figure class="highlight fortran"><figcaption><span>example_atlas_fwd.F90</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="keyword">CALL</span> rttov_direct(                &amp;</span><br><span class="line">        errorstatus,              &amp;<span class="comment">! out   error flag</span></span><br><span class="line">        chanprof,                 &amp;<span class="comment">! in    channel and profile index structure</span></span><br><span class="line">        opts,                     &amp;<span class="comment">! in    options structure</span></span><br><span class="line">        profiles,                 &amp;<span class="comment">! in    profile array</span></span><br><span class="line">        coefs,                    &amp;<span class="comment">! in    coefficients structure</span></span><br><span class="line">        transmission,             &amp;<span class="comment">! inout computed transmittances</span></span><br><span class="line">        radiance,                 &amp;<span class="comment">! inout computed radiances</span></span><br><span class="line">        calcemis    = calcemis,   &amp;<span class="comment">! in    flag for internal emissivity calcs</span></span><br><span class="line">        emissivity  = emissivity, &amp;<span class="comment">! inout input/output emissivities per channel</span></span><br><span class="line">        calcrefl    = calcrefl,   &amp;<span class="comment">! in    flag for internal BRDF calcs</span></span><br><span class="line">        reflectance = reflectance) <span class="comment">! inout input/output BRDFs per channel</span></span><br></pre></td></tr></table></figure><p>RTTOV计算的地表发射率：<br><img src="/blog/research/rttov/rttov132-mw-scat/RTTOV_Modeled_Emiss_20230627.jpg" alt="RTTOV计算的地表发射率"></p><p>Fastem海表发射率模拟+TELSEM2地表发射率<br><img src="/blog/research/rttov/rttov132-mw-scat/TELSEM2_FASTEM_Emiss_20230627.jpg" alt="RTTOV计算的地表发射率"></p><p>晴空亮温模拟（TELSEM2 Atlas提供地表发射率）<br><img src="/blog/research/rttov/rttov132-mw-scat/FYxx_TBs_RTTOV-TELSEM2_20230627.png"></p><h2 id="参数的敏感性研究"><a href="#参数的敏感性研究" class="headerlink" title="参数的敏感性研究"></a>参数的敏感性研究</h2><p>略。有时间的话补充，计划交给师妹练手。</p><h2 id="经验"><a href="#经验" class="headerlink" title="经验"></a>经验</h2><ol><li>在进行轨道模拟的时候，如果内存允许，应当将模拟样本一次性输入RTTOV中,这比循环每次样本并调用一次接口快很多。RTTOV的每次运行需要先inital，allocate, deallocate, check profile, check coefficents,等一系列的流程。频繁的结构体的创建、检查、赋值、释放，消耗绝大部分的时间；并且Fortran（formula transform）的优势就是进行快速的矩阵运算，所以大批量的数据一次性计算效率非常高。<br>在本个例中，单个样本的循环模拟的方案下，完成一轨的模拟[294,1640]需要消耗约3小时；而逐Scan的模拟只需要3~4分钟，这其中约有2分钟用来下载数据。当然了，还可以整轨一次模拟（需要转成一维），这样会更快，但是需要恢复输出值的轨道形状，比较麻烦。如果后续速度成为卡脖子问题（目前已经很快了，不做循环迭代的情况下），再进行优化。</li></ol>]]></content>
      
      
      <categories>
          
          <category> Research </category>
          
      </categories>
      
      
        <tags>
            
            <tag> RTM </tag>
            
            <tag> RTTOV </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Go Blue!</title>
      <link href="/blog/essays/road-to-umich/"/>
      <url>/blog/essays/road-to-umich/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="648b4306b1425faa604120a1dbc838bf823b34b228fbd68d80becac48640e54f">0ba4b93477422924b49e47ce7afa3c55061f3510094be3188b87176b41c850920a6edc928218413200746b722333eca9787c915e6bfce66cc62a47935b311e8f034e6fa01873826357872ebe38ad0fa318754abf601ba8697ae0ac3cf5ff4aee1ba03cc8a746aa5371ca222b6c9492701b80f4f08c290fefa97b7144e3ab3af339dc52fe483bd528661cc9595ccfabbc2fd24b74891bd3f93abd9de4d0626690d69f218bc72bc1f1f8ffd0851022ba663bf320ff156d6591d56739d12ef09c62029f541b1499c43135103268d2c926e670feec92b8b2e3291adcf6cc80717b076f4d8a16c89a412194336266eb2e94fa6bc18b55c2a48dc11a95b3bc0b6412b60529f7f7cc63e3053b05f6493ecb10e006e86e97abd006b4e68617f9e44f71751bb2c44d1218dce72faa8626479a0be3c10dcaf0f2822618cbfb6ed089085a3645210943deb55022642cea0f59dce6e723d78d194559e01d401860bdb579785f1026c6b9c17d80fa07db9e0d2a69a3c7e894c296a621c65743696e25caf911cfefd7dc6e265a63fe0fbad1213fe5c5a100b8a3abf5002503a8fcfd39d4ab37d8db43e39f119ccdfa8f3ce464a3a3c334dc60c15e0a60d9685d8922d6dad2b8875465caa381c8df03351e708629a77a7aa9650d9729a63e71c30e5e9274b9bea2c79a92c355cecf2e7c2e6815e8c4c0dae8886f1d9694cd3528d08b15e2f59cf05c0e1419e7f9be2856256af52daca798f41382064cbfd83f947a4b5f31600593f48eecd78db1d61bedf09d6c7ae9a70ca390a06e311dea249cd0b3b338752de46b2de3df53faaf6c135862cbc759ec066cd98099b894247d31dbf4d3087f65faf5b2eb3e49f6c6be26c34993cf169830d97d1b48e6e448c443c469fab622ee62e0fa1237f2367ff831a4083cdc66d0138c4e1bfc6053264fa8208032999e8452f89a5726f96de58afe631565e2a35507b750be128d20001fcf79dd4a6902da4e0482d471e07ebc68576d121e08411b00821d8a421ae82fae5b9b8801443feba7c30cf046be867a9f856d5329617bde60b9e0daa7f9369e5d8276ea9c9460ab3cf74283d224dd4c3a4977fc9fc4286b2b35edbb0f7330d73cc7f1618ec6cc894ff64027249990a6dec867834162f6d883ef9bbf59ddc652de7eb61e227fdd850cd7b55405781e2a3f25f2a337065e9d5671c3eb3242c293cc00a11b2c1a1174389cb4ff5892ece3be986628b1d22d2fff4ac220c43d312c8e7ef7ae4fae35862d19dd74603decbd9f0561160c2d30e8213b499743a49b9dc1db672c1b0e716d29a07aa3c3e6f62852c70913c6413f30ab91cfdd884b78dc65828d19c0e6741e0db028da7065872ea56c54fa66e2ddcce9c8296bd67fda317e16eb3ffef7a15c7e95aefe992b56f21492cc9f1af7805062323278e0418cfa650207497f4e20e3e5cacb871512aa126f8fc07effdf11b12030022ba917fb3015340c3c13e4a7b07b87c8712ca88fc033a4a972be87b93dfa136bfb6a0a6eb4789a8d923702961c5d57288857b9006a97dc05dc106da621db9871eb298cb3869bc4ebe753d9f2231eedcf490d13c6f993caefad3bffded2c0df3f1581c4caec73414b760ffb3c499be8706e04f6754cc5e9178f26984ecd8eeeea9ba772ae93970407f3fd7e27e954596e0f8bd34fab918f5b8179329f220209151c4f63eaaed815c8f92952388936e4d4b1ceaa65c1451284075cfb7af0d3cfc14a91ae5b775f662bc9d56c841383d683a89b533524bd6d7f92ad4946a8c5cba2170ec5fd2bf696a282d8a72128e588f42485757090224409907fcb4527e06881819ad6f2ba98180dd68e5ac2fadbda3be4312a9e6ebd975e1eaed3fe979f99b16c193ea263fb8ef18b1319c4c0fe42f57b632ec53900e3990c35129c6c2cb73829ad1afd31550688be2622b50a7d30aadc57cfaf5202ccee6196f21d1f67d12e33c95509e05adc567d09f17b25013494d6edfc51fe1e2821453206519b9f73c4c4d1071c3037098915006c92801a529a4d4c8c9c12ad3f35ed95eee64e0cf2b60a177a9bdd7cb7bc362b9573d335f7fa7f906bece7d745ccfacd00e6149dc81d5b0bc6d3ab732212722276957be0bb8966d903c37b9db6f366d70cc562bb4d0b8d3d430f8ec1b219627cd9e41d9683bc73f3e83cfe1b24200379184b38656c9f9074d6cce467a9d7bd648e005f69ad69ad616d5ae5674925a2f9671c19dae14b4a5047d2c4ee30af4714df46e21afbda885e3f9432f8d112fa1d8b51034a018acba7beeba36db43da8cf996dd76e214c091e549742cf731be1091969d9a46e713ac5b01614a6b7ccc6cf2ed9ce8f36908f4abf106a9ad565cd08483f722e3462ec7e7696de157dc16deebdab8a3691e2ae359498f7d9609b9bb2393bc1e4feac9993ea856eac4c941e87c4e7c80485710f75cf607b2ebf49fbeada5ec0ed9d4df0b70242ed50a06df04dffcbda7b657cde81b722592f65df9001d15fe3aab38dda6ea4c06f2116757a7e8e118090fdad161444d1fab810308cb49795acd02e559630ab866130fddcc28fc862296e85f3e80fb60ed242b20db125a0b91cbd2a0526869e46c096d511afbf1e628beabb7b91b74054357b7682bc3abd4bc9ab7fd2fe59afbd701981b04801a4ffbbce06ff1520193de3ef113a4a32624b4a2d285afcf77d0e084a4fc1f7cc4f87c1e1dcbafe4eb5dff9eb79419ee0fea1df2ff749b6ca77c2b72f8f60f71fa1cf79f4fa66afb55d3aa78af5138953b5b3cbebf5d9caaa4ef73f57fcc835626d77506e0214b5dac8dfdfeedb1aa740a89c0f6db05a36bb36f1dc2f6f28ef945745bd2d78e5fd4bc54b8afbd738f83ff8a7896b6dcb2c663963e9a6426ee717a1724e699191cb2aa4fd977d40b4659ed201b9fb7612d3965c6e22bd4ec2b42bf80555d135cced7a3f4ec516cf5fa409fc7616808df28f7fd24d6093068649ff3d98a38c3bbe49f5fef8d91ac3fe2ffd5c849e6c49fc1104a4a67e1c87358de0faf7e37d49ce3cf9b17eb6b420006eabd576f387945acc1083b3beb79d55f0fcfb39c56acbc98cb8ddc2c5d9217991e4162f5c52a1e1d6b7b37636cb0b9801b7501aed38ea36afe0de2ab44710717204804d0ca27231c09457ef594ba7882e10e979af2841b92b78993e7dfd69f4842fa089529de6ff1701bd319e07dd3f1163e074787517d362a25027afa24ab61b181f915d1146feae74a53aa3ebb6a189f2ff659cda23afe9f7fc8e2ab21f3ca5959001bf1f0b4d167b1c959110a38b56e88f25e35969354c230cc1dafed70fd7eaa293d2d0e54357c8b77db27fa5caf7ec98cc587084fb522f5ec103d3e00760256bfffb022417703bec78210cb321664d423c4cc904a6d83c56694da98272b90bfd712721cbec8439c615636caf665339bf1620a2bf680c871fcd0d53f4f082a8558a0632f6b742db0ac8bb7782229229ca792c653dc15baa868e37acf154c5bf5e00d33c473df925c1be1541ce08679ee840d51969965a064db6ac108badb1d73e8bf4473199d0ad8c5937b125af33b51919e28e7f35a80584cea7ce26ac1dce40d5ad1d3e966477b98be9842d199519976861abc33c7dd3604f8cd99ec4719475b6012dcd90ee520ef2a757b2d06dbad589e4fc</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">这是一篇加密博客，请输入口令或者直接联系Jiheng吧！</span>      </label>    </div>  </div></div><script data-pjax src="/blog/lib/hbe.js"></script><link href="/blog/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> Essay </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Postdoc </tag>
            
            <tag> Career </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>RTTOV模式学习笔记：(四) RTTOV 变量和结构体</title>
      <link href="/blog/research/rttov/rttov132-variables/"/>
      <url>/blog/research/rttov/rttov132-variables/</url>
      
        <content type="html"><![CDATA[<div class="note primary flat"><p>本笔记属于<a href="../rttov132-column">RTTOV辐射传输模式学习笔记</a>专栏，包含以下文章：</p><div class="btn-center" style="margin-bottom:0px"><a class="btn-beautify outline blue larger" href="/blog/research/rttov/rttov132-installlibs/"   title="(一) 依赖安装"><i class="far fa-hand-point-right"></i><span>(一) 依赖安装</span></a><a class="btn-beautify outline pink larger" href="/blog/research/rttov/rttov132-install/"   title="(二) RTTOV V13.2安装"><i class="far fa-hand-point-right"></i><span>(二) RTTOV V13.2安装</span></a><a class="btn-beautify outline red larger" href="/blog/research/rttov/rttov132-conventions/"   title="(三) 一些约定和特性"><i class="far fa-hand-point-right"></i><span>(三) 一些约定和特性</span></a><a class="btn-beautify outline purple larger" href="/blog/research/rttov/rttov132-variables/"   title="(四) RTTOV 变量和结构体"><i class="far fa-hand-point-right"></i><span>(四) RTTOV 变量和结构体</span></a><a class="btn-beautify outline green larger" href="/blog/research/rttov/rttov132-direct-fw/"   title="(五) 基于Direct Forward的晴空模拟"><i class="far fa-hand-point-right"></i><span>(五) 基于Direct Forward的晴空模拟</span></a><a class="btn-beautify outline orange larger" href="/blog/research/rttov/rttov132-mw-scat/"   title="(六) 基于MW-SCAT的水凝物模拟"><i class="far fa-hand-point-right"></i><span>(六) 基于MW-SCAT的水凝物模拟</span></a><a class="btn-beautify outline navy larger" href="/blog/research/rttov/rttov132-emissivity-retrieve/"   title="(七) 全天气地表微波比辐射反演方案"><i class="far fa-hand-point-right"></i><span>(七) 全天气地表微波比辐射反演方案</span></a></div>&copy; 2023-2030, Jiheng Hu. 本专栏内容禁止转载。</div><p>理解和熟悉RTTOV的工程结构和变量含义是我们使用模型的第一步。RTTOV的示例和源码可以帮助我们快速搭建起自己的模拟项目。</p><h2 id="RTTOV工程结构"><a href="#RTTOV工程结构" class="headerlink" title="RTTOV工程结构"></a>RTTOV工程结构</h2><p>这里介绍一下最重要的源码和示例文件，这是使用RTTOV的基础。</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ tree </span><br><span class="line">|- bin/  <span class="comment">## 存放编译产生的可执行文件，其源码来自于/src/test/下的代码示例</span></span><br><span class="line">|- rtcoef_rttov13/ <span class="comment">##存放大气吸收系数和散射系数的文件夹</span></span><br><span class="line">|- rttov_test/     <span class="comment">##测试脚本，调用bin/下的可执行文件和预置的相关大气廓线，水凝物和大气系数以完成模式安装的测试；</span></span><br><span class="line">|- src/  <span class="comment">##源码路径</span></span><br><span class="line">  |- main/  RTTOV的F90源码路径包括 正向模拟的接口，</span><br><span class="line">  |     |- rttov_k.F90    <span class="comment">## 雅可比矩阵计算</span></span><br><span class="line">  |     |- rttov_ad.F90   <span class="comment">## 伴随矩阵计算</span></span><br><span class="line">  |     |- rttov_tl.F90   <span class="comment">## tangent linear计算</span></span><br><span class="line">  |     |- rttov_direct.F90  <span class="comment">## 正向模拟-晴空</span></span><br><span class="line">  |     |- rttov_const.F90 <span class="comment">## 常量定义</span></span><br><span class="line">  |     |- rttov_types.F90 <span class="comment">## 类型定义</span></span><br><span class="line">  |- mw_scatt/  <span class="comment">## 微波散射模型-主要用于云、降水情形的模拟 </span></span><br><span class="line">  |     |- rttov_scatt.F90 </span><br><span class="line">  |     |- rttov_scatt_ad.F90 </span><br><span class="line">  |     |- rttov_scatt_tl.F90 </span><br><span class="line">  |     |- rttov_scatt_emis_retrieval.F90 <span class="comment">## Computes all-sky retrieved emissivities (Baordo and Geer, 2016, DOI:10.1002/qj.2873)</span></span><br><span class="line">  |- <span class="built_in">test</span>/   <span class="comment">## 模式调用示例</span></span><br><span class="line">  |     |- example_fwd.F90   <span class="comment">## 调用模式进行正向传输的示例，晴空</span></span><br><span class="line">  |     |- example_rttovscatt_fwd.F90   <span class="comment">## 调用模式进行正向传输的示例，水凝物</span></span><br><span class="line">  |     |- Makefile_examples  <span class="comment">##  Makefile example，生成bin/下的可执行文件，按照rttov_test/ 下的shell脚本示例来运行。 </span></span><br></pre></td></tr></table></figure><h2 id="RTTOV变量及其结构"><a href="#RTTOV变量及其结构" class="headerlink" title="RTTOV变量及其结构"></a>RTTOV变量及其结构</h2><h3 id="类型定义"><a href="#类型定义" class="headerlink" title="类型定义"></a>类型定义</h3><p>模式的运行需要提前声明和创建一系列变量来作为输入量和输出量。这些变量和结构体在使用时需要先声明其类型，形式为：</p><figure class="highlight fortran"><figcaption><span>src/test/example_fwd.F90</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="comment">! RTTOV variables/structures</span></span><br><span class="line"><span class="comment">!====================</span></span><br><span class="line"><span class="keyword">TYPE</span>(rttov_options)              :: opts                     <span class="comment">! Options structure</span></span><br><span class="line"><span class="keyword">TYPE</span>(rttov_coefs)                :: coefs                    <span class="comment">! Coefficients structure</span></span><br><span class="line"><span class="keyword">TYPE</span>(rttov_chanprof),    <span class="keyword">POINTER</span> :: chanprof(:)    <span class="comment">! Input channel/profile list</span></span><br><span class="line"><span class="keyword">LOGICAL</span>(<span class="keyword">KIND</span>=jplm),      <span class="keyword">POINTER</span> :: calcemis(:)    <span class="comment">! Flag to indicate calculation of emissivity within RTTOV</span></span><br><span class="line"><span class="keyword">TYPE</span>(rttov_emissivity),  <span class="keyword">POINTER</span> :: emissivity(:)  <span class="comment">! Input/output surface emissivity</span></span><br><span class="line"><span class="keyword">LOGICAL</span>(<span class="keyword">KIND</span>=jplm),      <span class="keyword">POINTER</span> :: calcrefl(:)    <span class="comment">! Flag to indicate calculation of BRDF within RTTOV</span></span><br><span class="line"><span class="keyword">TYPE</span>(rttov_reflectance), <span class="keyword">POINTER</span> :: reflectance(:) <span class="comment">! Input/output surface BRDF</span></span><br><span class="line"><span class="keyword">TYPE</span>(rttov_profile),     <span class="keyword">POINTER</span> :: profiles(:)    <span class="comment">! Input profiles</span></span><br><span class="line"><span class="keyword">TYPE</span>(rttov_transmission)         :: transmission             <span class="comment">! Output transmittances</span></span><br><span class="line"><span class="keyword">TYPE</span>(rttov_radiance)             :: radiance                 <span class="comment">! Output radiances</span></span><br><span class="line"></span><br><span class="line">nchanprof = nchannels * nprof</span><br><span class="line"></span><br><span class="line"><span class="comment">! Allocate structures for rttov_direct</span></span><br><span class="line"><span class="keyword">CALL</span> rttov_alloc_direct( &amp;</span><br><span class="line">      errorstatus,             &amp;</span><br><span class="line">      <span class="number">1_jpim</span>,                  &amp;  <span class="comment">! 1 =&gt; allocate</span></span><br><span class="line">      nprof,                   &amp;</span><br><span class="line">      nchanprof,               &amp;</span><br><span class="line">      nlevels,                 &amp;</span><br><span class="line">      chanprof,                &amp;</span><br><span class="line">      opts,                    &amp;</span><br><span class="line">      profiles,                &amp;</span><br><span class="line">      coefs,                   &amp;</span><br><span class="line">      transmission,            &amp;</span><br><span class="line">      radiance,                &amp;</span><br><span class="line">      calcemis=calcemis,       &amp;</span><br><span class="line">      emissivity=emissivity,   &amp;</span><br><span class="line">      calcrefl=calcrefl,       &amp;</span><br><span class="line">      reflectance=reflectance, &amp;</span><br><span class="line">      init=.TRUE._jplm)</span><br></pre></td></tr></table></figure><p>这些TYPE在<code>rttov_types.F90</code>中被定义，我们特别看一下这些结构体的内容。<br>首先，<code>nchanels</code>和<code>nprof</code>分别为模拟的通道数和廓线条数，<code>nchanprof = nchannels * nprof</code> 指定了进行模拟的次数。</p><h4 id="rttov-options-RT方案、插值开关"><a href="#rttov-options-RT方案、插值开关" class="headerlink" title="rttov_options RT方案、插值开关"></a>rttov_options RT方案、插值开关</h4><figure class="highlight fortran"><table><tr><td class="code"><pre><span class="line"><span class="comment">!&gt; RTTOV options structure</span></span><br><span class="line"><span class="keyword">TYPE</span> rttov_options</span><br><span class="line">  <span class="keyword">TYPE</span>(rttov_opts_config)  :: config          <span class="comment">!&lt; General configuration options</span></span><br><span class="line">  <span class="keyword">TYPE</span>(rttov_opts_rt_all)  :: rt_all          <span class="comment">!&lt; General RT options</span></span><br><span class="line">  <span class="keyword">TYPE</span>(rttov_opts_rt_ir)   :: rt_ir           <span class="comment">!&lt; VIS/IR RT options</span></span><br><span class="line">  <span class="keyword">TYPE</span>(rttov_opts_rt_mw)   :: rt_mw           <span class="comment">!&lt; MW RT options</span></span><br><span class="line">  <span class="keyword">TYPE</span>(rttov_opts_interp)  :: interpolation   <span class="comment">!&lt; Interpolation options</span></span><br><span class="line">  <span class="keyword">TYPE</span>(rttov_opts_htfrtc)  :: htfrtc_opts     <span class="comment">!&lt; HTFRTC options</span></span><br><span class="line">  <span class="keyword">TYPE</span>(rttov_opts_dev)     :: dev             <span class="comment">!&lt; Developer-only options</span></span><br><span class="line"><span class="keyword">END</span> <span class="keyword">TYPE</span></span><br></pre></td></tr></table></figure><p>其中：</p><ul><li><code>rt_all</code>结构体设定了RT的算法大气和地表设定方案开关；(参见 TYPE rttov_opts_rt_all的定义)；</li><li><code>rt_mw</code>结构体设定了MWRT的算法选项，如算法版本，云参数化方案等(参见 TYPE rttov_opts_rt_mw的定义)；  <figure class="highlight fortran"><table><tr><td class="code"><pre><span class="line"><span class="comment">!&gt; MW-only radiative transfer options</span></span><br><span class="line"><span class="keyword">TYPE</span> rttov_opts_rt_mw</span><br><span class="line">  ......</span><br><span class="line">  <span class="keyword">LOGICAL</span>(jplm) :: clw_data   = .FALSE.   <span class="comment">!&lt; Switch to enable input of cloud liquid water profile</span></span><br><span class="line">  <span class="keyword">INTEGER</span>(jpim) :: clw_scheme = <span class="number">2</span>         <span class="comment">!&lt; MW CLW scheme: 1 =&gt; Liebe, 2 =&gt; Rosenkranz, 3 =&gt; TKC</span></span><br><span class="line">  ......</span><br><span class="line"><span class="keyword">END</span> <span class="keyword">TYPE</span></span><br></pre></td></tr></table></figure>默认的MW模拟时不考虑cloud liquid water的吸收作用的。</li><li><code>interpolation</code>结构体定义了廓线插值的设定，包括插值开关<code>opts%interpolation%addinterp = .True.</code> (参见rttov_opts_interp的定义)；</li></ul><h4 id="rttov-chanprof-模拟量"><a href="#rttov-chanprof-模拟量" class="headerlink" title="rttov_chanprof 模拟量"></a>rttov_chanprof 模拟量</h4><figure class="highlight fortran"><figcaption><span>rttov_types.F90</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="keyword">TYPE</span> rttov_chanprof</span><br><span class="line">  <span class="keyword">INTEGER</span>(jpim) :: chan              <span class="comment">!&lt; Channel index</span></span><br><span class="line">  <span class="keyword">INTEGER</span>(jpim) :: prof              <span class="comment">!&lt; Profile index</span></span><br><span class="line"><span class="keyword">END</span> <span class="keyword">TYPE</span></span><br></pre></td></tr></table></figure><p>包含两个一维integer数组变量：<code>chan</code>,<code>prof</code>，其size决定于nchanels*nprof，也就是说，对于每个通道和每条廓线，都要定义其channe index和profile index，注意，这里的变量存储的应该是RTTOV内置的卫星表对应的通道表中的通道序号，而不是实际的频率。<br>赋值示例：</p><figure class="highlight fortran"><figcaption><span>example_fwd.F90</span></figcaption><table><tr><td class="code"><pre><span class="line">nch = <span class="number">0_jpim</span></span><br><span class="line"><span class="keyword">DO</span> j = <span class="number">1</span>, nprof</span><br><span class="line">  <span class="keyword">DO</span> jch = <span class="number">1</span>, nchannels</span><br><span class="line">    nch = nch + <span class="number">1_jpim</span></span><br><span class="line">    chanprof(nch)%prof = j</span><br><span class="line">    chanprof(nch)%chan = channel_list(jch)</span><br><span class="line">  <span class="keyword">ENDDO</span></span><br><span class="line"><span class="keyword">ENDDO</span></span><br></pre></td></tr></table></figure><h4 id="rttov-coefs-大气参数"><a href="#rttov-coefs-大气参数" class="headerlink" title="rttov_coefs 大气参数"></a>rttov_coefs 大气参数</h4><p>coefs是用来读取和缓存RTTOV的核心–internal Optical depth coefs的变量类型。</p><figure class="highlight fortran"><table><tr><td class="code"><pre><span class="line"><span class="comment">!&gt; @internal Optical depth coefs</span></span><br><span class="line"><span class="keyword">TYPE</span> rttov_coef</span><br><span class="line">    <span class="comment">! Structure for the storage of RTTOV coefficients</span></span><br><span class="line">    <span class="comment">! this may differ from what is stored in the coefficient files especially</span></span><br><span class="line">    <span class="comment">! for the units (ie kg/kg to ppmv)</span></span><br><span class="line">    <span class="comment">! Gases are separated in MxG WV O3</span></span><br><span class="line">    <span class="comment">! Number of levels is the same for all gases (taken from MxG).</span></span><br><span class="line">    <span class="keyword">INTEGER</span>(jpim)       :: id_platform   <span class="comment">! platform   (see user guide or rttov_const)</span></span><br><span class="line">    <span class="keyword">INTEGER</span>(jpim)       :: id_sat        <span class="comment">! satellite  (.....)</span></span><br><span class="line">    <span class="keyword">INTEGER</span>(jpim)       :: id_inst       <span class="comment">! instrument (.....)</span></span><br><span class="line">    <span class="keyword">INTEGER</span>(jpim)       :: id_sensor     <span class="comment">! 1 = Infrared, 2 = Microwave, 3 = High-resolution, 4 = Polarimeter</span></span><br><span class="line"></span><br><span class="line">    ......</span><br><span class="line"></span><br><span class="line">    <span class="comment">!FAST_COEFFICIENTS/SOLAR_FAST_COEFFICIENTS section</span></span><br><span class="line">    <span class="comment">! For non-PW instruments, &quot;solar&quot; will point to &quot;thermal&quot; coefs</span></span><br><span class="line">    <span class="comment">! For instruments with solar-affected PW channels, both thermal and solar</span></span><br><span class="line">    <span class="comment">! structures will be populated from coef file</span></span><br><span class="line">    <span class="comment">! Fast coefficients now grouped per channel rather than per gas (RTTOV12)</span></span><br><span class="line">    <span class="comment">! so thermal and solar are now arrays with size nchannels.</span></span><br><span class="line">    <span class="keyword">TYPE</span>(rttov_fast_coef), <span class="keyword">POINTER</span> :: thermal(:)      <span class="comment">! FAST_COEFFICIENTS for gas opdep prediction</span></span><br><span class="line">    <span class="keyword">TYPE</span>(rttov_fast_coef), <span class="keyword">POINTER</span> :: thermal_corr(:) <span class="comment">! Coefficients for correction term</span></span><br></pre></td></tr></table></figure><p><code>id_platform</code>,<code>id_sat</code>,<code>id_inst</code>确定了用来读取的快速辐射参数的文件名，这些ID见下一篇<a href="../rttov132-conventions">《RTTOV辐射传输模式实践：RTTOV V13.2 约定和方案》</a>的表格介绍，当然了你可直接看文档。<br><code>rttov_fast_coef</code>类型用来读取和缓存多种气体的快速辐射传输FAST RT系数廓线：</p><figure class="highlight fortran"><table><tr><td class="code"><pre><span class="line"><span class="comment">!&gt; @internal Actual storage for gas fast coefficients </span></span><br><span class="line"><span class="keyword">TYPE</span> rttov_fast_coef_gas</span><br><span class="line">  <span class="keyword">REAL</span>(jprb), <span class="keyword">POINTER</span> :: coef(:,:) =&gt; NULL()</span><br><span class="line"><span class="keyword">END</span> <span class="keyword">TYPE</span> rttov_fast_coef_gas</span><br><span class="line"></span><br><span class="line"><span class="comment">!&gt; @internal Fast coefficients</span></span><br><span class="line"><span class="comment">!  Separate structure to allow for non-PW and PW if necessary</span></span><br><span class="line"><span class="keyword">TYPE</span> rttov_fast_coef</span><br><span class="line">  <span class="comment">! SIZE is fmv_gas, i.e. one element per gas.</span></span><br><span class="line">  <span class="keyword">TYPE</span>(rttov_fast_coef_gas), <span class="keyword">POINTER</span>  :: gasarray(:) =&gt; NULL()</span><br><span class="line"></span><br><span class="line">  <span class="comment">! SHAPE is (ncoef, levels): these point to coefs within gasarray for ease of use</span></span><br><span class="line">  <span class="keyword">REAL</span>(jprb), <span class="keyword">POINTER</span> :: mixedgas(:,:)    =&gt; NULL()</span><br><span class="line">  <span class="keyword">REAL</span>(jprb), <span class="keyword">POINTER</span> :: watervapour(:,:) =&gt; NULL()</span><br><span class="line">  <span class="keyword">REAL</span>(jprb), <span class="keyword">POINTER</span> :: ozone(:,:)       =&gt; NULL()</span><br><span class="line">  <span class="keyword">REAL</span>(jprb), <span class="keyword">POINTER</span> :: wvcont(:,:)      =&gt; NULL()</span><br><span class="line">  <span class="keyword">REAL</span>(jprb), <span class="keyword">POINTER</span> :: co2(:,:)         =&gt; NULL()</span><br><span class="line">  <span class="keyword">REAL</span>(jprb), <span class="keyword">POINTER</span> :: n2o(:,:)         =&gt; NULL()</span><br><span class="line">  <span class="keyword">REAL</span>(jprb), <span class="keyword">POINTER</span> :: co(:,:)          =&gt; NULL()</span><br><span class="line">  <span class="keyword">REAL</span>(jprb), <span class="keyword">POINTER</span> :: ch4(:,:)         =&gt; NULL()</span><br><span class="line">  <span class="keyword">REAL</span>(jprb), <span class="keyword">POINTER</span> :: so2(:,:)         =&gt; NULL()</span><br><span class="line"><span class="keyword">END</span> <span class="keyword">TYPE</span> rttov_fast_coef</span><br></pre></td></tr></table></figure><p>所以，到目前为止，你应该明白了，RTTOV的全部模式中是不存在具体的频率信息作为输入的，对于不同仪器不同通道的模拟体现在上述coefs大气散射和消光参数的设定。这些参数文件可以在官网下载，其使用辐射传输和机器学习方法提前计算的大气光学参数数据集，所有的散射和吸收计算已经在应用先行数据集中进行了电磁学计算（介电常数计算，Mie, Reyleigh, Lieb等方案）。那么到RTTOV中，只需要将Coefs廓线和插值以后的大气水汽和水凝物廓线含量信息进行简单的计算（个人理解），计算出各层的optical depth等宏观辐射参数，再次插值回到<code>user level</code>，最后再进行辐射值的逐层计算；个人理解，有很大问题，比如辐射传输的变量其实包含了很多因子，不是就简单的两三个光学参数就概括的。</p><figure class="highlight fortran"><table><tr><td class="code"><pre><span class="line"><span class="keyword">INTEGER</span>(jpim)          :: nlevels             <span class="comment">! number of levels(pres/absorber) same for all gases</span></span><br><span class="line"><span class="keyword">INTEGER</span>(jpim)          :: nlayers             <span class="comment">! number of layers(pres/absorber) nlevels-1</span></span><br></pre></td></tr></table></figure><p>这里的Level指的是大气廓线层，对于绝大部分的大气辐射传输模式来说，所有气体的浓度、气压分层、风场、水汽湿度和对应气体的RT参数都是在Level层上；而Layer是Level的夹层，这样nlayer&#x3D; nlevels-1, Layer一般是云水、云冰、雨、雪、霰等水凝物的分层。</p><p>打开<code>rtcoef_rttov13/rttov13pred54L/rtcoef_fy3_4_mwri.dat</code>你会发现，最底层存储了三种气体的FASTEM 透射系数廓线 coef(ncoef, levels)</p><figure class="highlight fortran"><table><tr><td class="code"><pre><span class="line">FAST_COEFFICIENTS</span><br><span class="line"> <span class="comment">! </span></span><br><span class="line"> <span class="comment">! Transmission coefficients</span></span><br><span class="line"> <span class="comment">! Order of the gases:</span></span><br><span class="line"> <span class="comment">!     Mixed_gases </span></span><br><span class="line"> <span class="comment">!     Water_vapour</span></span><br><span class="line"> <span class="comment">!     WV_Continuum</span></span><br><span class="line">Mixed_gases </span><br><span class="line">  <span class="number">0.22347463E-12</span>  <span class="number">0.97183104E-12</span>  <span class="number">0.11559487E-10</span> -<span class="number">0.28401033E-10</span>  <span class="number">0.24825281E-12</span></span><br><span class="line"> -<span class="number">0.13350612E-11</span>  <span class="number">0.11559461E-10</span>  <span class="number">0.11023843E-10</span> -<span class="number">0.35628344E-11</span>  <span class="number">0.10916160E-09</span></span><br><span class="line"> -<span class="number">0.15138966E-11</span> -<span class="number">0.23916756E-09</span>  <span class="number">0.16813143E-09</span> -<span class="number">0.15779782E-12</span>  <span class="number">0.16958355E-11</span></span><br><span class="line">  <span class="number">0.12455733E-10</span> -<span class="number">0.45041561E-10</span>  <span class="number">0.54250922E-11</span>  <span class="number">0.40792076E-09</span> -<span class="number">0.31569689E-12</span></span><br><span class="line"> -<span class="number">0.86874801E-09</span>  <span class="number">0.65760704E-09</span> -<span class="number">0.48280489E-12</span>  <span class="number">0.40331001E-12</span>  <span class="number">0.28221647E-10</span></span><br><span class="line"> -<span class="number">0.18337354E-09</span>  <span class="number">0.60724938E-12</span>  <span class="number">0.12792379E-08</span>  <span class="number">0.34500769E-12</span> -<span class="number">0.26868266E-08</span></span><br><span class="line"> ......</span><br><span class="line"> <span class="keyword">END</span></span><br></pre></td></tr></table></figure><h4 id="rttov-profile-大气廓线"><a href="#rttov-profile-大气廓线" class="headerlink" title="rttov_profile 大气廓线"></a>rttov_profile 大气廓线</h4><p>这里的profile指的是大气气体和水汽、温压风的大气廓线，用于晴空大气的微波辐射传输（当然了，本笔记只考虑被动微波模拟，所以理解会狭隘一些）。<br>结构体定义如下：</p><figure class="highlight fortran"><table><tr><td class="code"><pre><span class="line"><span class="comment">!&gt; Atmospheric profiles on model pressure levels</span></span><br><span class="line"><span class="keyword">TYPE</span> rttov_profile</span><br><span class="line">  ......</span><br><span class="line">  <span class="keyword">REAL</span>(jprb), <span class="keyword">POINTER</span> :: p(:)          =&gt; NULL() <span class="comment">!&lt; Pressure (hPa)</span></span><br><span class="line">  <span class="keyword">REAL</span>(jprb), <span class="keyword">POINTER</span> :: t(:)          =&gt; NULL() <span class="comment">!&lt; Temperature (K)</span></span><br><span class="line">  <span class="keyword">REAL</span>(jprb), <span class="keyword">POINTER</span> :: q(:)          =&gt; NULL() <span class="comment">!&lt; Water vapour (ppmv or kg/kg)</span></span><br><span class="line">  <span class="keyword">REAL</span>(jprb), <span class="keyword">POINTER</span> :: o3(:)         =&gt; NULL() <span class="comment">!&lt; O3 (ppmv or kg/kg)</span></span><br><span class="line">  <span class="keyword">REAL</span>(jprb), <span class="keyword">POINTER</span> :: co2(:)        =&gt; NULL() <span class="comment">!&lt; CO2 (ppmv or kg/kg)</span></span><br><span class="line">  <span class="keyword">REAL</span>(jprb), <span class="keyword">POINTER</span> :: n2o(:)        =&gt; NULL() <span class="comment">!&lt; N2O (ppmv or kg/kg)</span></span><br><span class="line">  <span class="keyword">REAL</span>(jprb), <span class="keyword">POINTER</span> :: co(:)         =&gt; NULL() <span class="comment">!&lt; CO (ppmv or kg/kg)</span></span><br><span class="line">  <span class="keyword">REAL</span>(jprb), <span class="keyword">POINTER</span> :: ch4(:)        =&gt; NULL() <span class="comment">!&lt; CH4 (ppmv or kg/kg)</span></span><br><span class="line">  <span class="keyword">REAL</span>(jprb), <span class="keyword">POINTER</span> :: so2(:)        =&gt; NULL() <span class="comment">!&lt; SO2 (ppmv or kg/kg)</span></span><br><span class="line">  <span class="keyword">REAL</span>(jprb), <span class="keyword">POINTER</span> :: clw(:)        =&gt; NULL() <span class="comment">!&lt; Cloud liquid water absorption only (kg/kg)</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">LOGICAL</span>(jplm)       :: mmr_cldaer              <span class="comment">!&lt; Cloud/aerosol units: False =&gt; num density cm-3 (aer), g.m-3 (cld);</span></span><br><span class="line">                                                 <span class="comment">!!                      True =&gt; kg/kg (cld, aer)</span></span><br><span class="line">  <span class="keyword">REAL</span>(jprb), <span class="keyword">POINTER</span> :: aerosols(:,:) =&gt; NULL() <span class="comment">!&lt; Aerosol layer concentrations (units: see mmr_cldaer)</span></span><br><span class="line">  <span class="keyword">REAL</span>(jprb), <span class="keyword">POINTER</span> :: cloud(:,:)    =&gt; NULL() <span class="comment">!&lt; Cloud liquid/ice water layer concentrations (units: see mmr_cldaer)</span></span><br><span class="line">  <span class="keyword">REAL</span>(jprb), <span class="keyword">POINTER</span> :: cfrac(:)      =&gt; NULL() <span class="comment">!&lt; Layer cloud fraction (0-1)</span></span><br><span class="line">  <span class="keyword">REAL</span>(jprb), <span class="keyword">POINTER</span> :: clwde(:)      =&gt; NULL() <span class="comment">!&lt; Cloud liquid water particle effective diameter (microns)</span></span><br><span class="line">  <span class="keyword">INTEGER</span>(jpim)       :: clwde_param             <span class="comment">!&lt; Cloud liquid water effective diameter parameterisation (1)</span></span><br><span class="line">  <span class="keyword">INTEGER</span>(jpim)       :: clw_scheme              <span class="comment">!&lt; Select liquid water cloud scheme (1-2)</span></span><br><span class="line">  <span class="keyword">REAL</span>(jprb), <span class="keyword">POINTER</span> :: icede(:)      =&gt; NULL() <span class="comment">!&lt; Ice particle effective diameter (microns)</span></span><br><span class="line">  <span class="keyword">INTEGER</span>(jpim)       :: icede_param             <span class="comment">!&lt; Ice particle effective diameter parameterisation (1-4)</span></span><br><span class="line">  <span class="keyword">INTEGER</span>(jpim)       :: ice_scheme              <span class="comment">!&lt; Select ice cloud scheme (1-2)</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">TYPE</span>(rttov_skin) :: skin                       <span class="comment">!&lt; Surface skin variables</span></span><br><span class="line">  <span class="keyword">TYPE</span>(rttov_s2m)  :: s2m                        <span class="comment">!&lt; Surface 2m variables</span></span><br><span class="line">  .......</span><br><span class="line"><span class="keyword">END</span> <span class="keyword">TYPE</span> rttov_profile</span><br></pre></td></tr></table></figure><p>可以看出，这里不仅考虑了大气物理参数，还提供过了多种气体分子的浓度廓线。包括O3, CO2, NO2, CO, CH4和 SO2。并且考虑了云水&#x2F;冰和气溶胶。注意，这里的设置兼顾了IR和VIS等波段的模拟，所以考虑的气体较多，实际上很多非极性分子对微波辐射传输不起作用。<br>这里的云水设置在MW模拟时用于计算云的的Absorption,而散射则由MW_SCAT modelue 负责（见下文）：</p><figure class="highlight fortran"><figcaption><span>rttov_direct.F90: line 675</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="comment">!--------------------------------------------------------------------------</span></span><br><span class="line"><span class="comment">! MW CLW absorption optical depths</span></span><br><span class="line"><span class="comment">!--------------------------------------------------------------------------</span></span><br><span class="line">  <span class="keyword">IF</span> (sensor_mw .AND. opts%rt_mw%clw_data) <span class="keyword">THEN</span></span><br><span class="line">    <span class="keyword">CALL</span> rttov_mw_clw_absorption( &amp;<span class="number">0</span></span><br><span class="line">    ......</span><br><span class="line">  <span class="keyword">ENDIF</span></span><br></pre></td></tr></table></figure><p>profile 结构体还包含了地表参数的输入，分别由<code>rttov_skin</code>,<code>rttov_s2m</code>子结构体来定义，包含的参数有：地表类型、水体盐度、土壤湿度、积雪分数、skin temperature; 2m 温压湿风和抽样浓度。<br>此外，profile还包含了必要的时间和经纬度变量。<br>对于profile的输入，<code>example.fwd.F90</code>是通过读取给定文件的方式读取的，后面的章节我们会介绍到。</p><h3 id="四个辐射参数类型"><a href="#四个辐射参数类型" class="headerlink" title="四个辐射参数类型"></a>四个辐射参数类型</h3><ul><li>rttov_emissivity <figure class="highlight fortran"><table><tr><td class="code"><pre><span class="line"><span class="comment">!&gt; Input/output surface emissivities, declare as array of size nchanprof,</span></span><br><span class="line"><span class="comment">!! also used to specify per-channel specularity parameter for use with do_lambertian option</span></span><br><span class="line"><span class="keyword">TYPE</span> rttov_emissivity</span><br><span class="line">  <span class="keyword">REAL</span>(jprb)    :: emis_in     = <span class="number">0._jprb</span> <span class="comment">!&lt; Input emissivity (0-1)</span></span><br><span class="line">  <span class="keyword">REAL</span>(jprb)    :: emis_out    = <span class="number">0._jprb</span> <span class="comment">!&lt; Output emissivity, value used by RTTOV (0-1)</span></span><br><span class="line">  <span class="keyword">REAL</span>(jprb)    :: specularity = <span class="number">0._jprb</span> <span class="comment">!&lt; Mix of specular/Lambertian for do_lambertian option (0-1, 0=Lambertian/1=specular)</span></span><br><span class="line">  <span class="keyword">REAL</span>(jprb)    :: tskin_eff   = <span class="number">0._jprb</span> <span class="comment">!&lt; Effective skin temperature per channel (if use_tskin_eff true)</span></span><br><span class="line"><span class="keyword">END</span> <span class="keyword">TYPE</span></span><br></pre></td></tr></table></figure>emis_out：地表模式或atlas输出的Emissivity数据集，作为RTTOV大气辐射传输的地表背景输入。</li><li>rttov_reflectance微波段不使用，可以理解为1-emissivity；</li><li>rttov_transmission 各层的透过率输出；</li><li>rttov_radiance：天顶出射的模拟辐亮度及对应的亮温和BRF<figure class="highlight fortran"><table><tr><td class="code"><pre><span class="line"><span class="comment">!&gt; Output radiances and corresponding brightness temperatures and reflectances (BRFs)</span></span><br><span class="line"><span class="comment">!! Radiance unit: mW/m2/sr/cm-1; BT unit: K; BRFs are unitless.</span></span><br><span class="line"><span class="comment">!! Array sizes are (nchannels) or (nlayers,nchannels)</span></span><br><span class="line"><span class="keyword">TYPE</span> rttov_radiance</span><br><span class="line">  <span class="keyword">REAL</span>(jprb),    <span class="keyword">POINTER</span> :: clear(:)              =&gt; NULL() <span class="comment">!&lt; Clear sky radiance</span></span><br><span class="line">  <span class="keyword">REAL</span>(jprb),    <span class="keyword">POINTER</span> :: total(:)              =&gt; NULL() <span class="comment">!&lt; Cloudy radiance for given cloud</span></span><br><span class="line">  <span class="keyword">REAL</span>(jprb),    <span class="keyword">POINTER</span> :: bt_clear(:)           =&gt; NULL() <span class="comment">!&lt; Brightness temp equivalent to clear radiance</span></span><br><span class="line">  <span class="keyword">REAL</span>(jprb),    <span class="keyword">POINTER</span> :: bt(:)                 =&gt; NULL() <span class="comment">!&lt; Brightness temp equivalent to total radiance</span></span><br><span class="line">  <span class="keyword">REAL</span>(jprb),    <span class="keyword">POINTER</span> :: refl_clear(:)         =&gt; NULL() <span class="comment">!&lt; Reflectance calculated from clear radiance</span></span><br><span class="line">  <span class="keyword">REAL</span>(jprb),    <span class="keyword">POINTER</span> :: refl(:)               =&gt; NULL() <span class="comment">!&lt; Reflectance calculated from total radiance</span></span><br><span class="line">  <span class="keyword">REAL</span>(jprb),    <span class="keyword">POINTER</span> :: overcast(:,:)         =&gt; NULL() <span class="comment">!&lt; Overcast radiance for opaque cloud at level bounding</span></span><br><span class="line">                                                            <span class="comment">!!   bottom of each layer</span></span><br><span class="line">  <span class="keyword">REAL</span>(jprb),    <span class="keyword">POINTER</span> :: cloudy(:)             =&gt; NULL() <span class="comment">!&lt; 100% cloudy radiance for given cloud (simple cloud scheme)</span></span><br><span class="line">                                                            <span class="comment">!!   or same as total (addclouds/addaerosl true)</span></span><br><span class="line">  ......</span><br><span class="line"><span class="keyword">END</span> <span class="keyword">TYPE</span> rttov_radiance</span><br></pre></td></tr></table></figure></li></ul><h3 id="MW-SCAT-变量"><a href="#MW-SCAT-变量" class="headerlink" title="MW-SCAT 变量"></a>MW-SCAT 变量</h3><p>除了上述的变量类型，RTTOV还包含用于MW-SCAT模块散射计算特有的变量。</p><h4 id="rttov-scatt-coef-hydrotable系数表"><a href="#rttov-scatt-coef-hydrotable系数表" class="headerlink" title="rttov_scatt_coef hydrotable系数表"></a>rttov_scatt_coef hydrotable系数表</h4><p>定义了用来缓存水凝物辐射传输系数的变量：</p><figure class="highlight fortran"><table><tr><td class="code"><pre><span class="line"><span class="comment">!&gt; @internal RTTOV-SCATT coefs</span></span><br><span class="line"><span class="keyword">TYPE</span> rttov_scatt_coef</span><br><span class="line">  <span class="comment">! Structure for the storage of RTTOV_SCATT coefficients (hydrotable files)</span></span><br><span class="line">  <span class="keyword">INTEGER</span>(jpim) :: rttov_version <span class="comment">! RTTOV compatibility version</span></span><br><span class="line">  <span class="keyword">INTEGER</span>(jpim) :: nhydro        <span class="comment">! Number of hydrometeors in computation</span></span><br><span class="line">  <span class="keyword">INTEGER</span>(jpim) :: mtype         <span class="comment">! Number of hydrometeors</span></span><br><span class="line">  <span class="keyword">INTEGER</span>(jpim) :: mfreqm        <span class="comment">! Number of frequencies</span></span><br><span class="line">  <span class="keyword">INTEGER</span>(jpim) :: mtemp         <span class="comment">! Number of temperature bins</span></span><br><span class="line">  <span class="keyword">INTEGER</span>(jpim) :: mwc           <span class="comment">! Number of water bins</span></span><br><span class="line">  ......</span><br><span class="line">  <span class="keyword">REAL</span>(jprb), <span class="keyword">POINTER</span> :: freq(:)      =&gt; NULL()   <span class="comment">! list of frequencies in hydrotable</span></span><br><span class="line">  <span class="keyword">INTEGER</span>(jpim), <span class="keyword">POINTER</span> :: mpol(:)   =&gt; NULL()   <span class="comment">! list of polarisations in Hydro table (-1 = polarisation ignored)</span></span><br><span class="line">  <span class="keyword">REAL</span>(jprb), <span class="keyword">POINTER</span> :: ext(:,:,:,:) =&gt; NULL()   <span class="comment">! extinction coefficent table</span></span><br><span class="line">  <span class="keyword">REAL</span>(jprb), <span class="keyword">POINTER</span> :: ssa(:,:,:,:) =&gt; NULL()   <span class="comment">! single scattering albedo table</span></span><br><span class="line">  <span class="keyword">REAL</span>(jprb), <span class="keyword">POINTER</span> :: asp(:,:,:,:) =&gt; NULL()   <span class="comment">! asymmetry parameter table</span></span><br><span class="line">  ......</span><br><span class="line"><span class="keyword">END</span> <span class="keyword">TYPE</span> rttov_scatt_coef</span><br></pre></td></tr></table></figure><p>这里水凝物Hydrotable参数表考虑的FAST RT 参数包括<code>消光系数</code>，<code>单散反照率</code>和<code>不对称因子</code>。熟悉辐射传输的同学应该知道，这是在一定的形状（如球形）假设和散射理论（Mie）计算下, 水凝物粒子的散射计算的结果。这些参数辅以一定的粒径谱假设（如Gamma分布）就可以进一步计算出光学厚度，散射系数等介质的单层光学系数。不对称因子则描述了散射项函数的不对称性，在二流近似的情形下决定了前向和后向散射强度的比值。</p><h4 id="MW-SCATT-Cloud-hydrometeor-profile"><a href="#MW-SCATT-Cloud-hydrometeor-profile" class="headerlink" title="MW-SCATT Cloud&#x2F;hydrometeor profile"></a>MW-SCATT Cloud&#x2F;hydrometeor profile</h4><p>MW-SCAT模块的水凝物廓线变量：</p><figure class="highlight fortran"><table><tr><td class="code"><pre><span class="line"><span class="comment">!&gt; Additional atmospheric cloud/hydrometeor profile input for RTTOV-SCATT</span></span><br><span class="line"><span class="keyword">TYPE</span> rttov_profile_cloud</span><br><span class="line">  <span class="keyword">INTEGER</span>(jpim) :: nlevels                         <span class="comment">!&lt; Number of atmospheric levels (same as in rttov_profile)</span></span><br><span class="line">  <span class="keyword">INTEGER</span>(jpim) :: nhydro                          <span class="comment">!&lt; Number of hydrometeor types</span></span><br><span class="line">  <span class="keyword">INTEGER</span>(jpim) :: nhydro_frac                     <span class="comment">!&lt; Number of hydrometeor fractions (should be 1 or nhydro)</span></span><br><span class="line">  <span class="keyword">INTEGER</span>(jpim), <span class="keyword">POINTER</span> :: flux_conversion(:) =&gt; NULL() <span class="comment">!&lt; 0 =&gt; no flux conv, input units are kg/kg,</span></span><br><span class="line">                                                         <span class="comment">!&lt; 1,2 =&gt; input kg/m2/s rain,snow</span></span><br><span class="line">  <span class="keyword">REAL</span>(jprb)    :: cfrac                           <span class="comment">!&lt; Average cloud fraction (only used if lusercfrac = TRUE, 0-1)</span></span><br><span class="line">  <span class="keyword">REAL</span>(jprb), <span class="keyword">POINTER</span> :: ph(:)           =&gt; NULL() <span class="comment">!&lt; nlevels+1 of half-level model pressures (hPa)</span></span><br><span class="line">  <span class="keyword">REAL</span>(jprb), <span class="keyword">POINTER</span> :: hydro(:,:)      =&gt; NULL() <span class="comment">!&lt; nlevels by ntypes of hydrometeor (kg/kg or (deprecated) kg/m2/s)</span></span><br><span class="line">  <span class="keyword">REAL</span>(jprb), <span class="keyword">POINTER</span> :: hydro_frac(:,:) =&gt; NULL() <span class="comment">!&lt; nlevels of hydrometeor fraction (cloud cover) (0-1)</span></span><br><span class="line"><span class="keyword">END</span> <span class="keyword">TYPE</span> rttov_profile_cloud</span><br></pre></td></tr></table></figure><h3 id="反演相关变量类型"><a href="#反演相关变量类型" class="headerlink" title="反演相关变量类型"></a>反演相关变量类型</h3><p>(Baordo and Geer, 2016)反演方案实例中使用的中间变量类型，其思想是通过才cfrac将dirct和和SCAT的模拟进行加权，以实现对云天的散射和吸收效应的考量。</p><figure class="highlight fortran"><table><tr><td class="code"><pre><span class="line"><span class="comment">!&gt; Output variables from RTTOV-SCATT enabling emissivity retrievals</span></span><br><span class="line"><span class="comment">!! All arrays are size(chanprof)</span></span><br><span class="line"><span class="keyword">TYPE</span> rttov_scatt_emis_retrieval_type</span><br><span class="line">  <span class="keyword">REAL</span>(jprb), <span class="keyword">POINTER</span>  :: cfrac(:)    =&gt; NULL() <span class="comment">!&lt; RTTOV-SCATT effective cloud fraction</span></span><br><span class="line">                                                <span class="comment">!!  (Tallsky = cfrac * Tcld + (1-cfrac) * Tclr</span></span><br><span class="line">  <span class="keyword">REAL</span>(jprb), <span class="keyword">POINTER</span>  :: bsfc(:)     =&gt; NULL() <span class="comment">!&lt; Surface black-body radiance (i.e. Planck(Tsfc))</span></span><br><span class="line">  <span class="keyword">REAL</span>(jprb), <span class="keyword">POINTER</span>  :: tau_cld(:)  =&gt; NULL() <span class="comment">!&lt; Along-path transmittance, surface to space (cloudy column)</span></span><br><span class="line">  <span class="keyword">REAL</span>(jprb), <span class="keyword">POINTER</span>  :: up_cld(:)   =&gt; NULL() <span class="comment">!&lt; TOA upwelling radiance from atmosphere (not inc. surface</span></span><br><span class="line">                                                <span class="comment">!!  emission or reflection)</span></span><br><span class="line">  <span class="keyword">REAL</span>(jprb), <span class="keyword">POINTER</span>  :: down_cld(:) =&gt; NULL() <span class="comment">!&lt; SFC downwelling radiance (inc. cosmic term)</span></span><br><span class="line">  <span class="keyword">REAL</span>(jprb), <span class="keyword">POINTER</span>  :: tau_clr(:)  =&gt; NULL() <span class="comment">!&lt; Along-path transmittance, surface to space (clear column)</span></span><br><span class="line">  <span class="keyword">REAL</span>(jprb), <span class="keyword">POINTER</span>  :: up_clr(:)   =&gt; NULL() <span class="comment">!&lt; TOA upwelling radiance from atmosphere (not inc. surface</span></span><br><span class="line">                                                <span class="comment">!!  emission or reflection)</span></span><br><span class="line">  <span class="keyword">REAL</span>(jprb), <span class="keyword">POINTER</span>  :: down_clr(:) =&gt; NULL() <span class="comment">!&lt; SFC downwelling radiance (inc. cosmic term)</span></span><br><span class="line"><span class="keyword">END</span> <span class="keyword">TYPE</span> rttov_scatt_emis_retrieval_type</span><br></pre></td></tr></table></figure><h2 id="变量分配"><a href="#变量分配" class="headerlink" title="变量分配"></a>变量分配</h2><p>从<code>src/test/exmaple_rttovscatt_fwd.F90</code>和<code>src/test/example_fwd.F90</code>两个正向模拟示例来看，上述变量的分配（allocate）任务交给了<code>rttov_alloc_direct.F90</code>的同名函数来完成的: <code>Allocate/deallocate any/all arrays and structures for RTTOV or RTTOV-SCATT direct models</code>。并且对于大部分变量结构的输入是可选的（optional）。</p><h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><p>本节对RTTOV direct和mw-scat两个模块涉及到的主要变量类型和结构体进行了介绍，穿插了自己的理解。<br>后面的章节会分别对于上述的两种module进行介绍，主要着眼与应用，不会有太多源码的解读，<br>再次声明，本系列笔记是个人理解，希望在记录学习过程的同时能抛砖引玉，共同进步。</p><hr><p>参考：1. 源码；2. user guide.</p>]]></content>
      
      
      <categories>
          
          <category> Research </category>
          
      </categories>
      
      
        <tags>
            
            <tag> RTM </tag>
            
            <tag> RTTOV </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>RTTOV模式笔记：(三) 一些约定和特性</title>
      <link href="/blog/research/rttov/rttov132-conventions/"/>
      <url>/blog/research/rttov/rttov132-conventions/</url>
      
        <content type="html"><![CDATA[<div class="note primary flat"><p>本笔记属于<a href="../rttov132-column">RTTOV辐射传输模式学习笔记</a>专栏，包含以下文章：</p><div class="btn-center" style="margin-bottom:0px"><a class="btn-beautify outline blue larger" href="/blog/research/rttov/rttov132-installlibs/"   title="(一) 依赖安装"><i class="far fa-hand-point-right"></i><span>(一) 依赖安装</span></a><a class="btn-beautify outline pink larger" href="/blog/research/rttov/rttov132-install/"   title="(二) RTTOV V13.2安装"><i class="far fa-hand-point-right"></i><span>(二) RTTOV V13.2安装</span></a><a class="btn-beautify outline red larger" href="/blog/research/rttov/rttov132-conventions/"   title="(三) 一些约定和特性"><i class="far fa-hand-point-right"></i><span>(三) 一些约定和特性</span></a><a class="btn-beautify outline purple larger" href="/blog/research/rttov/rttov132-variables/"   title="(四) RTTOV 变量和结构体"><i class="far fa-hand-point-right"></i><span>(四) RTTOV 变量和结构体</span></a><a class="btn-beautify outline green larger" href="/blog/research/rttov/rttov132-direct-fw/"   title="(五) 基于Direct Forward的晴空模拟"><i class="far fa-hand-point-right"></i><span>(五) 基于Direct Forward的晴空模拟</span></a><a class="btn-beautify outline orange larger" href="/blog/research/rttov/rttov132-mw-scat/"   title="(六) 基于MW-SCAT的水凝物模拟"><i class="far fa-hand-point-right"></i><span>(六) 基于MW-SCAT的水凝物模拟</span></a><a class="btn-beautify outline navy larger" href="/blog/research/rttov/rttov132-emissivity-retrieve/"   title="(七) 全天气地表微波比辐射反演方案"><i class="far fa-hand-point-right"></i><span>(七) 全天气地表微波比辐射反演方案</span></a></div>&copy; 2023-2030, Jiheng Hu. 本专栏内容禁止转载。</div><hr><p>本节介绍的内容来自RTTOV v13文档，包括<a href="https://public.websites.umich.edu/~jihenghu/filzoo/rttov-quick-start.pdf">《RTTOV v13 Quick Start Guide》</a>和<a href="https://public.websites.umich.edu/~jihenghu/filzoo/users_guide_rttov13_v1.2.pdf">《RTTOV v13 Users Guide v13》</a><br>这两个文档有很大部分重叠，基本上后者全面覆盖前者，本文不会对这两个文档细致分析，只摘录下最重要的部分列举。</p><h2 id="光学参数设定"><a href="#光学参数设定" class="headerlink" title="光学参数设定"></a>光学参数设定</h2><ul><li>RTTOV对于晴空模拟辐射光学厚度参数来自于事先计算好的消光系数，这些消光系数依赖于不同的仪器和气体成分。微波段的模拟不考虑除水汽之外的任何痕量气体，但是有些仪器会考虑O3，如MetopSG ICI。</li><li>RTTOV提供的所有的光学厚度参数都是按照固定的层来提供的，对于大部分的仪器来说，系数都是标准的54层。此外，对于高光谱sounder仪器是101层。<br>54层的大气廓线分层为：<br>Pressure (hPa) 0.01,0.01,0.03,0.06,0.13,0.23,0.41,0.67,1.08,1.67,2.5,3.65,5.19,7.22,9.84,13.17,17.33,22.46,28.69,36.17,45.04,55.44,67.51,81.37,97.15,114.94,134.83,156.88,181.14,207.61,236.28,267.1, 300, 334.86,371.55,409.89,449.67,490.65,532.58,575.15,618.07,661,703.59,745.48,786.33,825.75,863.4,898.93,931.99,962.26,989.45,1013.29, 1033.54, 1050</li><li>内部插值：用户可以提供任意的层数的大气廓线，但是必须打开插值选项<code>opts%interpolation%addinterp=true</code>，以使得RTTOV内部进行插值。<br>插值的流程为: <code>1. RTTOV将用户输入的廓线插值到标准系数层</code>-&gt; <code>2. 在标准系数层上计算光学厚度</code> -&gt; <code>3. 将标准系数层的光学厚度插值回到用户输入的廓线层上，进行辐射传输计算</code>。<br>所以你会发现源码中有很多注释说明步骤执行是在user level上实现的。这个level指的是垂直分层，而不是后端开发里面的用户层、数据层、应用层啥的。。。<br><img src="https://public.websites.umich.edu/~jihenghu/filzoo/rttov-interpol.png" alt="RTTOV大气光学厚度插值流程"></li></ul><h2 id="卫星和仪器ID"><a href="#卫星和仪器ID" class="headerlink" title="卫星和仪器ID"></a>卫星和仪器ID</h2><ul><li><p>部分ID对应的卫星举例</p><table><thead><tr><th>Platform</th><th>RTTOV ID</th><th>Sat ID range</th><th>注释</th></tr></thead><tbody><tr><td>DMSP</td><td>2</td><td>8 - 19</td><td>F8-F19</td></tr><tr><td>FY3</td><td>23</td><td>1 - 4</td><td>FY3A-FY3D</td></tr><tr><td>Himawari</td><td>31</td><td>8 - 9</td><td>H8,H9</td></tr><tr><td>GPM</td><td>37</td><td>1</td><td>GPM-Core observatory</td></tr><tr><td>FY4</td><td>52</td><td>1</td><td>FY-4A</td></tr><tr><td>Sentinel3</td><td>19</td><td>1 - 2</td><td>Sentinel-3A, Sentinel-3B</td></tr></tbody></table></li><li><p>部分代码对应的仪器举例（微波）  </p><table><thead><tr><th>Sensor</th><th>RTTOV ID</th><th>Sensor Chans</th></tr></thead><tbody><tr><td>TMI</td><td>9</td><td>1-9</td></tr><tr><td>AMSR-E</td><td>17</td><td>1-12</td></tr><tr><td>MWRI</td><td>43</td><td>1-10</td></tr><tr><td>AMSR2</td><td>63</td><td>1-14</td></tr><tr><td>GMI</td><td>71</td><td>1-13</td></tr><tr><td>MWI</td><td>79</td><td>1-26</td></tr></tbody></table></li></ul><p>持续更新中…</p>]]></content>
      
      
      <categories>
          
          <category> Research </category>
          
      </categories>
      
      
        <tags>
            
            <tag> RTM </tag>
            
            <tag> RTTOV </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>RTTOV模式笔记：(二) RTTOV V13.2安装</title>
      <link href="/blog/research/rttov/rttov132-install/"/>
      <url>/blog/research/rttov/rttov132-install/</url>
      
        <content type="html"><![CDATA[<div class="note primary flat"><p>本笔记属于<a href="../rttov132-column">RTTOV辐射传输模式学习笔记</a>专栏，包含以下文章：</p><div class="btn-center" style="margin-bottom:0px"><a class="btn-beautify outline blue larger" href="/blog/research/rttov/rttov132-installlibs/"   title="(一) 依赖安装"><i class="far fa-hand-point-right"></i><span>(一) 依赖安装</span></a><a class="btn-beautify outline pink larger" href="/blog/research/rttov/rttov132-install/"   title="(二) RTTOV V13.2安装"><i class="far fa-hand-point-right"></i><span>(二) RTTOV V13.2安装</span></a><a class="btn-beautify outline red larger" href="/blog/research/rttov/rttov132-conventions/"   title="(三) 一些约定和特性"><i class="far fa-hand-point-right"></i><span>(三) 一些约定和特性</span></a><a class="btn-beautify outline purple larger" href="/blog/research/rttov/rttov132-variables/"   title="(四) RTTOV 变量和结构体"><i class="far fa-hand-point-right"></i><span>(四) RTTOV 变量和结构体</span></a><a class="btn-beautify outline green larger" href="/blog/research/rttov/rttov132-direct-fw/"   title="(五) 基于Direct Forward的晴空模拟"><i class="far fa-hand-point-right"></i><span>(五) 基于Direct Forward的晴空模拟</span></a><a class="btn-beautify outline orange larger" href="/blog/research/rttov/rttov132-mw-scat/"   title="(六) 基于MW-SCAT的水凝物模拟"><i class="far fa-hand-point-right"></i><span>(六) 基于MW-SCAT的水凝物模拟</span></a><a class="btn-beautify outline navy larger" href="/blog/research/rttov/rttov132-emissivity-retrieve/"   title="(七) 全天气地表微波比辐射反演方案"><i class="far fa-hand-point-right"></i><span>(七) 全天气地表微波比辐射反演方案</span></a></div>&copy; 2023-2030, Jiheng Hu. 禁止转载。</div><p>在上一节中，我们已经完成了对依赖库的安装，本节将对RTTOV进行安装。</p><h2 id="RTTOV-13-2-安装RTTOV"><a href="#RTTOV-13-2-安装RTTOV" class="headerlink" title="RTTOV 13.2 安装RTTOV"></a>RTTOV 13.2 安装RTTOV</h2><ol><li><p>去官网下载RTTOV13.2 安装包： rttov132.tar.xz</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">mkdir</span> rttov13</span><br><span class="line">$ tar xvf rttov132.tar.xz -C rttov13/</span><br><span class="line">$ <span class="built_in">cd</span> rttov13</span><br></pre></td></tr></table></figure></li><li><p>修改build&#x2F;Makefile.local，指明HDF和NC库的位置，以及编译参数。</p><figure class="highlight makefile"><table><tr><td class="code"><pre><span class="line">HDF5_PREFIX  = /home/hjh/hdf5</span><br><span class="line"></span><br><span class="line"><span class="comment"># For most compilers:</span></span><br><span class="line">FFLAGS_HDF5  = -D_RTTOV_HDF <span class="variable">$(FFLAG_MOD)</span><span class="variable">$(HDF5_PREFIX)</span>/<span class="keyword">include</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># But you may find that you must also specify libz:</span></span><br><span class="line"><span class="comment"># (NB for NAG Fortran you may also need to add -ldl)</span></span><br><span class="line">LDFLAGS_HDF5 = -L<span class="variable">$(HDF5_PREFIX)</span>/lib -lhdf5hl_fortran -lhdf5_hl -lhdf5_fortran -lhdf5 -lz</span><br><span class="line"></span><br><span class="line">NETCDF_PREFIX  = /home/hjh/netcdf</span><br><span class="line"><span class="comment"># For most compilers:</span></span><br><span class="line">FFLAGS_NETCDF  = -D_RTTOV_NETCDF -I<span class="variable">$(NETCDF_PREFIX)</span>/<span class="keyword">include</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># For NetCDF v4.2 and later:</span></span><br><span class="line">LDFLAGS_NETCDF = -L<span class="variable">$(NETCDF_PREFIX)</span>/lib -lnetcdff</span><br></pre></td></tr></table></figure></li><li><p>编译RTTOV</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> src</span><br><span class="line">$ ../build/rttov_compile.sh</span><br></pre></td></tr></table></figure><p>编译器选择gfortran, 脚本会自动检测上述的NC和hdf库的配置，这里由于不需要安装UI界面，所以不用安装f2py。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Specify required compiler flag file (leave blank for default: gfortran-openmp)</span><br><span class="line">&gt; gfortran</span><br><span class="line">Specify installation directory relative to top-level RTTOV directory (leave blank for default: ./)</span><br><span class="line">&gt; [回车]</span><br><span class="line">......</span><br><span class="line">- Are you sure to compile RTTOV [yes/no]?</span><br><span class="line">&gt; yes</span><br><span class="line">...漫长的编译...</span><br><span class="line">RTTOV compiled successfully</span><br></pre></td></tr></table></figure><p><img src="https://public.websites.umich.edu/~jihenghu/filzoo/rttov.compile.png" alt="编译rttov"> </p></li><li><p>测试RTTOV</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> rttov_test</span><br><span class="line">$ ./test_rttov13.sh ARCH=gfortran</span><br></pre></td></tr></table></figure><p>本次安装测试结果：<br><img src="https://public.websites.umich.edu/~jihenghu/filzoo/rttov_test.png" alt="rttov测试结果"><br>可以看出，除了HIRS这台载荷的参数有细微差异外，对于其他仪器的测试都通过了。这个报错可能是由于版本和库版本的差异导致，非常微小。由于我不使用HIRS这台仪器，这样的差异是可以接受的。</p></li></ol><h2 id="RT-coefficients-下载"><a href="#RT-coefficients-下载" class="headerlink" title="RT coefficients 下载"></a>RT coefficients 下载</h2><ol><li>下载<br>细心的会发现，rtcoef_rttov13&#x2F;路径下的每个文件夹都是空的，这里需要根据需要下载RTTOV的大气吸收和散射系数。<br>这些系数按照模式方案和卫星，仪器，通道来存储。<br>官网提供了下载脚本：<a href="https://nwp-saf.eumetsat.int/site/software/rttov/download/coefficients/coefficient-download/">https://nwp-saf.eumetsat.int/site/software/rttov/download/coefficients/coefficient-download/</a> <blockquote><p>The <code>rttov_coef_download.sh</code> script supplied in the RTTOV package in the <code>rtcoef_rttov13/</code> directory can be used for downloading coefficient files in bulk or you can download individual files from the links below.</p></blockquote></li></ol><p>说的很清楚了，这里直接下载全部，也可以根据需要去上述页面选择下载。下载脚本支持指定文件下载。<br>note: 服务器需要联外网，脚本会下载和解压相应的文件。<br>这里我只需要微波相关的系数数据，包括大气混合气体，水汽和水凝物是系数廓线。</p><figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">[hjh@node05] ~/rttov13 $ <span class="built_in">cd</span> rtcoef_rttov13/</span><br><span class="line">[hjh@node05] ~/rttov13/rtcoef_rttov13 $ ./rttov_coef_download.sh </span><br><span class="line">=========================================================================</span><br><span class="line"> RTTOV coefficient download script</span><br><span class="line">=========================================================================</span><br><span class="line">File types are:</span><br><span class="line">  - Optical depth (rtcoef) coefficient files <span class="keyword">for</span> MW, IR and VIS/IR</span><br><span class="line">  - VIS/IR aerosol (scaer) and cloud (sccld) coefficient files</span><br><span class="line">  - MFASIS LUT files</span><br><span class="line">  - MFASIS NN files</span><br><span class="line">  - RTTOV-SCATT MW hydrotable files</span><br><span class="line">  - Optical depth (rtcoef) files <span class="keyword">for</span> hi-res IR sounders</span><br><span class="line">  - Hi-res IR sounder aerosol (scaer) and cloud (sccld) coefficient files</span><br><span class="line">  - PC-RTTOV coefficient files</span><br><span class="line">  - HTFRTC coefficient files <span class="keyword">in</span> netCDF <span class="built_in">format</span></span><br><span class="line">  - HTFRTC coefficient files <span class="keyword">in</span> ASCII <span class="built_in">format</span></span><br><span class="line">=========================================================================</span><br><span class="line">Download all files (y) or specify files to download (n)? </span><br><span class="line">&gt; n</span><br><span class="line">Download VIS/IR/MW rtcoef files? (y/n) </span><br><span class="line">&gt; y</span><br><span class="line">Download VIS/IR cld/aer coef files? (y/n) </span><br><span class="line">&gt; y</span><br><span class="line">......</span><br><span class="line">Download MW hydrotable files? (y/n) </span><br><span class="line">&gt; y</span><br><span class="line">......</span><br><span class="line">==============================================================================</span><br><span class="line">Downloading files with extension .tar.bz2 from https://nwp-saf.eumetsat.int/downloads/rtcoef_rttov13/rttov13pred101L</span><br><span class="line">......</span><br></pre></td></tr></table></figure><p>大气消光和散射系数是按照模式方案和卫星、仪器来存储的。如<code>rtcoef_rttov13/rttov13pred54L/</code>的部分文件：  </p>  <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">rtcoef_gpm_1_dpr.dat  ## DPR</span><br><span class="line">rtcoef_gpm_1_gmi.dat　## GMI  </span><br><span class="line">rtcoef_fy3_2_mwri.dat ## FY3B MWRI</span><br><span class="line">rtcoef_fy3_3_mwri.dat ## FY3C MWRI</span><br><span class="line">rtcoef_fy3_4_mwri.dat ## FY3D MWRI</span><br><span class="line">rtcoef_fy3_5_mwhs2e_srf.dat ## FY3E MWHS</span><br><span class="line">rtcoef_fy3_5_mwts3_srf.dat  ## FY3E MWTS</span><br></pre></td></tr></table></figure><p>最新的FY3G MWRI和PMR,MERSI应用先行研究使用的系数表见<a href="http://satellite.nsmc.org.cn/FY3G/html/APPDATASET.html">风云三号星G星应用先行数据集主页</a>。3G星的参数官方还在制作中，可能24年发布，目前使用的参数来自3D星的参数表。<br><img src="https://public.websites.umich.edu/~jihenghu/filzoo/fy3gappcoeff.png" alt="风云三号星G星应用先行数据集"><br>2. 特性介绍</p><ul><li><p>New hydrotables for RTTOV v13-水凝物计算<br>考虑了5种水凝物的光学性质:雨、雪、霰、云液态水、云冰水。在代码中，必须按照相同的顺序在输入<code>cld_profiles(1:nprofiles)%hydro(1:nlevels,1:nhydro)</code>数组中提供含水量浓度，其中默认表的nhydro&#x3D;5。您可以使用不同数量的粒子类型(nhydro)生成自己的hydrotable。</p><div class="note success flat"><p>5种水凝物采用的光学方案和粒径谱：</p><ul><li><code>rain</code>: Mie sphere, Marshall-Palmer size distribution (unchanged since latest v12 Mietables)</li><li><code>snow</code>: ARTS large plate aggregate, Field07 tropical size distribution (updated for v13)</li><li><code>graupel</code>: ARTS column, Field07 tropical size distribution (new in v13)</li><li><code>cloud liquid</code>: Mie sphere, Gamma size distribution implemented within the new modified gamma framework (mostly unchanged in terms of optical properties, but with small differences from the previous gamma distribution, which was implemented internally using some scientific shortcuts)</li><li><code>cloud ice</code>: ARTS large column aggregate, Gamma PSD with generalised modified gamma parameters mu &#x3D; 0, lambda &#x3D; 1e4, gamma &#x3D; 1 and N0 free (updated for v13)</li></ul></div><p>这里提到的generalised modified PSD的形式为：<br>$$<br>\begin{align}<br>N(D)&#x3D;N_0 D^\mu e^{-\lambda D}   ;  \mu&#x3D;0时退化成指数函数<br>\end{align}<br>$$</p><blockquote><p>Geer A. J., Bauer B., Lonitz K., Barlakas V., Eriksson P., Mendrok J., Doherty A., Hocking J., and Chambon P. 2021: Bulk hydrometeor optical properties for microwave and sub-millimetre radiative transfer in RTTOV-SCATT v13.0. Geosci. Model Dev., 14, 7497-7526, <a href="https://doi.org/10.5194/gmd-14-7497-2021">https://doi.org/10.5194/gmd-14-7497-2021</a></p></blockquote></li><li><p>MW optical depth coefs and RTTOV-SCATT optical properties</p><div class="note success flat"><p>General information on MW sensor optical depth coefficient files:</p><ul><li>Based on Liebe 89&#x2F;92 LbL model</li><li>All on 54 levels</li><li>v13 predictors</li><li>No Planck-weighted channels</li><li>No optional trace gases except for sensors with channels above 200GHz which enable variable O3</li></ul></div></li></ul><h2 id="Surface-Emissivity-Atlas-Data"><a href="#Surface-Emissivity-Atlas-Data" class="headerlink" title="Surface Emissivity Atlas Data"></a>Surface Emissivity Atlas Data</h2><p>由于进行微波辐射传输模拟需要地表微波比辐射率作为输入量，去官网下载：<a href="https://nwp-saf.eumetsat.int/site/software/rttov/download/#Emissivity_BRDF_atlas_data">Emissivity_BRDF_atlas_data</a><br>BRDF是对短波段而言的地表双向反射率，需要的话可以自己下载，这里微波不需要。<br>一般，Emissivity atlas作为先验的地表输入，在变分反演模式中会不停的调整迭代，直到达到多变量的物理一致性和收敛到代价函数的最小值。<br>在变分算法中，基于前人研究的emissivity先验证的初始猜测可以显著减小迭代次数和计算量。<br>一般常用telsem2_mw_atlas (F. Aires, 2001)<br>当然了，可选还有很多，除了官网推荐的，还有 (Munchak,2020; Nourizi, 2011; Moncet, 2011; Hu, 2020) 等。</p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://nwp-saf.eumetsat.int/site/software/rttov/download/coefficients/coefficient-download/">RT Coefficients 下载</a><br><a href="https://nwp-saf.eumetsat.int/site/software/rttov/download/emissivity-data/">Emissivity Atlas 下载</a></p>]]></content>
      
      
      <categories>
          
          <category> Research </category>
          
      </categories>
      
      
        <tags>
            
            <tag> RTM </tag>
            
            <tag> RTTOV </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>RTTOV模式笔记：(一) 依赖安装</title>
      <link href="/blog/research/rttov/rttov132-installlibs/"/>
      <url>/blog/research/rttov/rttov132-installlibs/</url>
      
        <content type="html"><![CDATA[<div class="note primary flat"><p>本笔记属于<a href="../rttov132-column">RTTOV辐射传输模式学习笔记</a>专栏，包含以下文章：</p><div class="btn-center" style="margin-bottom:0px"><a class="btn-beautify outline blue larger" href="/blog/research/rttov/rttov132-installlibs/"   title="(一) 依赖安装"><i class="far fa-hand-point-right"></i><span>(一) 依赖安装</span></a><a class="btn-beautify outline pink larger" href="/blog/research/rttov/rttov132-install/"   title="(二) RTTOV V13.2安装"><i class="far fa-hand-point-right"></i><span>(二) RTTOV V13.2安装</span></a><a class="btn-beautify outline red larger" href="/blog/research/rttov/rttov132-conventions/"   title="(三) 一些约定和特性"><i class="far fa-hand-point-right"></i><span>(三) 一些约定和特性</span></a><a class="btn-beautify outline purple larger" href="/blog/research/rttov/rttov132-variables/"   title="(四) RTTOV 变量和结构体"><i class="far fa-hand-point-right"></i><span>(四) RTTOV 变量和结构体</span></a><a class="btn-beautify outline green larger" href="/blog/research/rttov/rttov132-direct-fw/"   title="(五) 基于Direct Forward的晴空模拟"><i class="far fa-hand-point-right"></i><span>(五) 基于Direct Forward的晴空模拟</span></a><a class="btn-beautify outline orange larger" href="/blog/research/rttov/rttov132-mw-scat/"   title="(六) 基于MW-SCAT的水凝物模拟"><i class="far fa-hand-point-right"></i><span>(六) 基于MW-SCAT的水凝物模拟</span></a><a class="btn-beautify outline navy larger" href="/blog/research/rttov/rttov132-emissivity-retrieve/"   title="(七) 全天气地表微波比辐射反演方案"><i class="far fa-hand-point-right"></i><span>(七) 全天气地表微波比辐射反演方案</span></a></div>&copy; 2023-2030, Jiheng Hu. 禁止转载。</div><p>本节介绍RTTOV的服务器安装，除必要的软件支持，都使用普通用户权限来完成，做个记录；<br>感谢<a href="https://blog.csdn.net/weixin_43471242/article/details/103248318">大气快速辐射传输模型RTTOV12.2安装教程及心得体会</a>的详细说明，这里记录一下自己的安装过程。</p><h3 id="安装环境和安装包准备"><a href="#安装环境和安装包准备" class="headerlink" title="安装环境和安装包准备"></a>安装环境和安装包准备</h3><div class="note primary flat"><ul><li>Ubuntu 20.04.5 LTS (GNU&#x2F;Linux 5.15.0-75-generic x86_64)</li><li>gcc version 9.4.0 (Ubuntu 9.4.0-1ubuntu1~20.04.1)<ul><li>gfortran 9.4.0 </li><li>g++ 9.4.0</li></ul></li><li>GNU Make 4.2.1</li></ul></div><div class="note primary flat"><p>安装包<br>zlib-1.2.11.tar.gz<br>hdf5-1.8.21.tar.gz<br>netcdf-c-4.9.2.tar.gz<br>netcdf-fortran-4.6.1.tar.gz<br>RTTOV 13.2</p></div><p>安装顺序就按照以上顺序，否则会出现依赖问题。<br>将上述安装包放置到&#x2F;home&#x2F;hjh&#x2F;下，并分别新建目录，结构如下：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">root@node05:/home/hjh$ tree -L 1</span><br><span class="line">.</span><br><span class="line">├── hdf5</span><br><span class="line">├── netcdf</span><br><span class="line">├── zlib</span><br><span class="line">├── RTTOV13</span><br><span class="line">├── hdf5-1.8.21.tar.gz</span><br><span class="line">├── netcdf-c-4.9.2.tar.gz</span><br><span class="line">├── netcdf-fortran-4.6.1.tar.gz</span><br><span class="line">└── zlib-1.2.11.tar.gz</span><br></pre></td></tr></table></figure><h4 id="zlib"><a href="#zlib" class="headerlink" title="zlib"></a>zlib</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">~$ tar -zvxf zlib-1.2.11.tar.gz</span><br><span class="line">~$ <span class="built_in">cd</span> zlib-1.2.11</span><br><span class="line">~/zlib-1.2.11$ ./configure --prefix=/home/hjh/zlib</span><br><span class="line">~/zlib-1.2.11$ make</span><br><span class="line">~/zlib-1.2.11$ make check</span><br><span class="line">~/zlib-1.2.11$ make install</span><br><span class="line">$ <span class="built_in">cd</span></span><br><span class="line">$ <span class="built_in">rm</span> -r zlib-1.2.11</span><br></pre></td></tr></table></figure><p>从make开始一般比较顺利，没有报错信息；<br>netcdf的安装需要依赖zlib,先在&#x2F;home&#x2F;hjh&#x2F;.bashrc定义zlib路径，以配置netcdf的编译信息：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">~$ vim ~/.bashrc </span><br><span class="line">## 追加已下两行</span><br><span class="line">## zlib</span><br><span class="line">export LD_LIBRARY_PATH=/home/hjh/zlib/lib:$LD_LIBRARY_PATH</span><br><span class="line"></span><br><span class="line">## 保存退出</span><br><span class="line">~$ source ~/.bashrc</span><br><span class="line">~$ echo $LD_LIBRARY_PATH</span><br></pre></td></tr></table></figure><p>安装zlib*，这里需要联系管理员（权限狗:P）<br>安装时避免目录下有zlib开头的文件，否则会导致正则匹配并提示找不到安装包；</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">(一个不含有zlib*的文件夹)<span class="comment"># sudo apt install zlib*</span></span><br></pre></td></tr></table></figure><h4 id="HDF5"><a href="#HDF5" class="headerlink" title="HDF5"></a>HDF5</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">cd</span></span><br><span class="line">~ $ tar zxvf hdf5-1.8.21.tar.gz</span><br><span class="line">~ $ <span class="built_in">cd</span> hdf5-1.8.21</span><br><span class="line">~/hdf5-1.8.21 $ ./configure --with-zlib=/home/hjh/zlib --prefix=/home/hjh/hdf5 FC=gfortran CC=gcc --enable-fortran --enable-cxx</span><br></pre></td></tr></table></figure><p>配置完以后会出现配置总结：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">   Installation point: /home/hjh/hdf5</span><br><span class="line">......</span><br><span class="line">      C Compiler: /usr/bin/gcc</span><br><span class="line">......</span><br><span class="line">      Fortran: yes</span><br><span class="line">Fortran Compiler: /usr/bin/gfortran</span><br><span class="line">......</span><br><span class="line">      C++: yes</span><br><span class="line">         C++ Compiler: /usr/bin/g++</span><br><span class="line">......</span><br><span class="line">      Parallel HDF5: no</span><br><span class="line">......</span><br></pre></td></tr></table></figure><p>编译安装，make 过程非常长，warning可以忽略</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ make </span><br><span class="line">$ make check</span><br><span class="line">$ make install</span><br></pre></td></tr></table></figure><p>可以在安装目录下&#x2F;home&#x2F;hjh&#x2F;hdf5&#x2F;bin 发现可执行文件；&#x2F;home&#x2F;hjh&#x2F;hdf5&#x2F;lib下发现库文件</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">~$ vim ~/.bashrc </span><br><span class="line">## 追加以下内容</span><br><span class="line">## HDF5 1.8.21</span><br><span class="line">export PATH=/home/hjh/hdf5/bin:$PATH</span><br><span class="line">export LD_LIBRARY_PATH=/home/hjh/hdf5/lib:$LD_LIBRARY_PATH</span><br><span class="line">export CPPFLAGS=-I/home/hjh/hdf5/include  ## comment this after compiling</span><br><span class="line">export LDFLAGS=-L/home/hjh/hdf5/lib       #</span><br><span class="line">## 保存退出</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">~$ source ~/.bashrc</span><br><span class="line">~$ echo $LD_LIBRARY_PATH</span><br><span class="line">~$ echo $CPPFLAGS</span><br><span class="line">~$ echo $LDFLAGS</span><br><span class="line"></span><br><span class="line">$which h5fc </span><br><span class="line">/home/hjh/hdf5/bin/h5fc</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="netcdf"><a href="#netcdf" class="headerlink" title="netcdf"></a>netcdf</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">cd</span></span><br><span class="line">~$ tar zxvf netcdf-c-4.9.2.tar.gz</span><br><span class="line">~$ <span class="built_in">cd</span> netcdf-c-4.9.2</span><br><span class="line">netcdf-c-4.9.2 $ </span><br></pre></td></tr></table></figure><p>联系管理员安装</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#apt install m4</span><br><span class="line">#apt install libcurl4-openssl-dev</span><br></pre></td></tr></table></figure><p>编译安装</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">netcdf-c-4.9.2 $ ./configure --prefix=/home/hjh/netcdf --enable-netcdf-4 --disable-libxml2</span><br><span class="line">make</span><br><span class="line">make check</span><br><span class="line">make install</span><br></pre></td></tr></table></figure><p>安装完成发现&#x2F;home&#x2F;hjh&#x2F;netcdf&#x2F;bin下有很多可执行文件，但是&#x2F;home&#x2F;hjh&#x2F;netcdf&#x2F;lib 没有fortran相关的库文件，所以后面需要安装netcdf-fortran</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">~$ vim ~/.bashrc </span><br><span class="line"></span><br><span class="line">## HDF5 1.8.21</span><br><span class="line">export PATH=/home/hjh/hdf5/bin:$PATH</span><br><span class="line">export LD_LIBRARY_PATH=/home/hjh/hdf5/lib:$LD_LIBRARY_PATH</span><br><span class="line">## 注释以下内容</span><br><span class="line">#export CPPFLAGS=-I/home/hjh/hdf5/include  </span><br><span class="line">#export LDFLAGS=-L/home/hjh/hdf5/lib       </span><br><span class="line"></span><br><span class="line">##追加以下内容</span><br><span class="line"></span><br><span class="line">## NETCDF</span><br><span class="line">export PATH=/home/hjh/netcdf/bin:$PATH</span><br><span class="line"></span><br><span class="line">export LD_LIBRARY_PATH=/home/hjh/netcdf/lib:$LD_LIBRARY_PATH</span><br><span class="line">export CPPFLAGS=-I/home/hjh/netcdf/include  ## comment this after compiling</span><br><span class="line">export LDFLAGS=-L/home/hjh/netcdf/lib       ## 编译完成后注释掉</span><br><span class="line">## 保存退出</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">~$ source ~/.bashrc</span><br><span class="line">~$ echo $LD_LIBRARY_PATH</span><br><span class="line">~$ echo $CPPFLAGS</span><br><span class="line">~$ echo $LDFLAGS</span><br><span class="line"></span><br><span class="line">$which nccopy</span><br><span class="line">/home/hjh/netcdf/bin/nccopy</span><br></pre></td></tr></table></figure><h4 id="NETCDF-Fortran"><a href="#NETCDF-Fortran" class="headerlink" title="NETCDF-Fortran"></a>NETCDF-Fortran</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"> $ cd </span><br><span class="line">~ $ tar xzvf netcdf-fortran-4.6.1.tar.gz</span><br><span class="line">~ $ cd netcdf-fortran-4.6.1</span><br></pre></td></tr></table></figure><p>编译安装</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">netcdf-fortran-4.6.1 $ ./configure --prefix=/home/hjh/netcdf FC=gfortran</span><br><span class="line">netcdf-fortran-4.6.1 $ make</span><br><span class="line">netcdf-fortran-4.6.1 $ make check</span><br><span class="line">netcdf-fortran-4.6.1 $ make install</span><br></pre></td></tr></table></figure><p>安装完成发现&#x2F;home&#x2F;hjh&#x2F;netcdf&#x2F;lib下新增了fortran相关的库文件</p><p>至此，安装RTTOV的依赖已经安装好。</p><h4 id="RTTOV-13-2-安装RTTOV"><a href="#RTTOV-13-2-安装RTTOV" class="headerlink" title="RTTOV 13.2 安装RTTOV"></a>RTTOV 13.2 安装RTTOV</h4><p>移步：<a class="btn-beautify red larger" href="/blog/research/rttov/rttov132-install/"   title="RTTOV辐射传输模式实践：(一) RTTOV V13.2安装"><i class="far fa-hand-point-right"></i><span>RTTOV辐射传输模式实践：(一) RTTOV V13.2安装</span></a></p><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><p><a href="https://blog.csdn.net/weixin_43471242/article/details/103248318">大气快速辐射传输模型RTTOV12.2安装教程及心得体会</a></p>]]></content>
      
      
      <categories>
          
          <category> Research </category>
          
      </categories>
      
      
        <tags>
            
            <tag> RTM </tag>
            
            <tag> RTTOV </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>专栏：RTTOV辐射传输模式学习笔记</title>
      <link href="/blog/research/rttov/rttov132-column/"/>
      <url>/blog/research/rttov/rttov132-column/</url>
      
        <content type="html"><![CDATA[<h3 id="Note"><a href="#Note" class="headerlink" title="Note"></a>Note</h3><ul><li><p><span style="color:red"> RTTOV的笔记和源码</span>已经转载到了我的<a href="https://github.com/jihenghu/rttov-mwrt-tutorial.git">Github仓库</a>，更加详尽</p></li><li><p>今天RTTOV更新到了V14版本了，相比V13.2最大的改动时deplicate了coefficient table，在V15版本将完全去除（预计2027年）， 但是会更加好用— 2025-2-12</p></li></ul><h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>本专栏是个人在学习使用RTTOV的过程的记录笔记，初学来认识较为浅显，并且视角偏向于微波辐射传输模拟模块。如有讹误，希望大家多多指点，共同进步。</p><h3 id="文章列表"><a href="#文章列表" class="headerlink" title="文章列表"></a>文章列表</h3><p>本笔记属于<a href="/tags/RTTOV/">RTTOV辐射传输模式学习笔记</a>专栏，包含以下文章（部分章节有待更新）：<br>&copy; 2023-2030, Jiheng Hu. 本专栏内容禁止转载。</p><div class="gallery-group-main">  <figure class="gallery-group">  <img class="gallery-group-img no-lightbox" src='https://s2.loli.net/2023/11/27/LtPk9WIfbrmwsDY.jpg' alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">(一) 依赖安装</div>  <p>本节介绍RTTOV的服务器安装所需要的依赖，包括NETCDF,HDF5,zlib等库的安装。</p>  <a href='/blog/research/rttov/rttov132-installlibs/'></a>  </figcaption>  </figure>    <figure class="gallery-group">  <img class="gallery-group-img no-lightbox" src='https://s2.loli.net/2023/11/27/LtPk9WIfbrmwsDY.jpg' alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">(二) RTTOV V13.2安装</div>  <p>本节介绍RTTOV的服务器安装和消光散射系数的下载，及模式介绍。</p>  <a href='/blog/research/rttov/rttov132-install/'></a>  </figcaption>  </figure>    <figure class="gallery-group">  <img class="gallery-group-img no-lightbox" src='https://s2.loli.net/2023/11/27/LtPk9WIfbrmwsDY.jpg' alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">(三) 约定和特性</div>  <p>本节解读一下RTTOV的一些基础设定。内容包括廓线插值等。</p>  <a href='/blog/research/rttov/rttov132-conventions/'></a>  </figcaption>  </figure>    <figure class="gallery-group">  <img class="gallery-group-img no-lightbox" src='https://s2.loli.net/2023/11/27/LtPk9WIfbrmwsDY.jpg' alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">(四) RTTOV 变量和结构体</div>  <p>本节解读一下RTTOV的源码，介绍一下RTTOV变量和结构体。</p>  <a href='/blog/research/rttov/rttov132-variables/'></a>  </figcaption>  </figure>    <figure class="gallery-group">  <img class="gallery-group-img no-lightbox" src='https://public.websites.umich.edu/~jihenghu/space/research/rttov/rttov132-mw-scat/rttov-atlas-xminder.png' alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">(五) 基于Direct Forward的晴空模拟</div>  <p>本节主要介绍晴空正向微波辐射传输的源码结构及模拟实践。</p>  <a href='/blog/research/rttov/rttov132-direct-fw/'></a>  </figcaption>  </figure>    <figure class="gallery-group">  <img class="gallery-group-img no-lightbox" src='https://public.websites.umich.edu/~jihenghu/space/research/rttov/rttov132-mw-scat/rttov-scat-xminder.png' alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">(六) 基于MW-SCAT的水凝物模拟</div>  <p>本节主要介绍RTTOV MW-SCATT模块对于水凝物散射情形的模拟。</p>  <a href='/blog/research/rttov/rttov132-mw-scat/'></a>  </figcaption>  </figure>    <figure class="gallery-group">  <img class="gallery-group-img no-lightbox" src='https://s2.loli.net/2023/11/27/LtPk9WIfbrmwsDY.jpg' alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">(七) 全天气地表微波比辐射反演方案</div>  <p>本节主要介绍(Baordo and Geer, 2016) emissivity反演算法和相关实践。</p>  <a href='/blog/research/rttov/rttov132-emissivity-retrieve/'></a>  </figcaption>  </figure>    <figure class="gallery-group">  <img class="gallery-group-img no-lightbox" src='https://s2.loli.net/2023/11/27/LtPk9WIfbrmwsDY.jpg' alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">番外 TELSEM Emissivity Atlas的离线使用</div>  <p>本节介绍TELSEM2 Atlas的离线使用。</p>  <a href='/blog/research/rttov/rttov132-telsem2-atlas/'></a>  </figcaption>  </figure>  </div><h3 id="RTTOV简介"><a href="#RTTOV简介" class="headerlink" title="RTTOV简介"></a>RTTOV简介</h3><ul><li>基于个人理解的概括<br>RTTOV (Radiative Transfer for TOVS)具备对被动可见光、红外和微波卫星辐射计、光谱仪和干涉仪的卫星观测进行快速辐射传输模拟的能力。<br>也就是说，给定大气温度、湿度以及可选的微量气体、气溶胶和水凝物的大气廓线，再加上表面参数和星载仪器的观测几何参数，RTTOV可以实现对多种卫星任务搭载的传感器进行天顶辐亮度的计算。<br>其快速辐射传输计算能力得益于内置的多种类型的大气介质在不同波长下的吸收和散射系数的基于机器学习方法的参数表。<br>不仅如此，RTTOV还提供了对有雅可比矩阵的计算，其描述了天顶亮温对任一环境因子的敏感性，可以应用于多种变分反演算法和数值天气预报模型中；<br>RTTOV内置了诸多地表发射率、反射率atlas。</li><li>引用RTTOV<blockquote><p>Saunders, R., Hocking, J., Turner, E., Rayer, P., Rundle, D., Brunel, P., Vidot, J., Roquet, P., Matricardi, M., Geer, A., Bormann, N., and Lupu, C., 2018: An update on the RTTOV fast radiative transfer model (currently at version 12), Geosci. Model Dev., 11, 2717-2737, <a href="https://doi.org/10.5194/gmd-11-2717-2018">https://doi.org/10.5194/gmd-11-2717-2018</a>.</p></blockquote></li><li>RTTOV主页地址<br>  <a href="https://www.nwpsaf.eu/site/software/rttov/">https://www.nwpsaf.eu/site/software/rttov/</a> 。</li></ul><h3 id="专栏更新进度"><a href="#专栏更新进度" class="headerlink" title="专栏更新进度"></a>专栏更新进度</h3><ul><li>2023-08-31<br>完成模式的安装，更新了前两章，开始学习源码；</li><li>2023-08-06<br>目前已经初步完成了前四章节的内容，后续会更出剩下的章节，取决于科研进度和这个项目的推进速度，因为不是主线任务，存在更新较慢的可能；<br>第三节基于user guide的解读还会继续更新；</li><li>2023-08-10<br>更新第五章（加密），部分有待补充；</li><li>2023-08-18<br>更新第六章（加密），部分有待补充；</li><li>2023-08-24<br>更新第七章（加密），部分有待补充；<br>后续更新随缘了。</li></ul><!-- <div class="recent-posts" id="recent-posts" style="margin:auto;padding:0;"><div class="recent-post-item">    <div class="post_cover left_radius">            <a href="/~hjh18305/space/2023/08/04/research/rttov/rttov132-variables-structures/" title="RTTOV辐射传输模式实践：(*) RTTOV V13.2 TYPE">                <img class="post_bg entered loaded" data-lazy-src="https://public.websites.umich.edu/~jihenghu/filzoo/rttov_cover2.png" onerror="this.onerror=null;this.src='/~hjh18305/space/img/404.jpg'" alt="RTTOV辐射传输模式实践：(*) RTTOV V13.2 TYPE" src="https://public.websites.umich.edu/~jihenghu/filzoo/rttov_cover2.png">            </a>         </div>     <div class="recent-post-info">         <a class="article-title" href="/~hjh18305/space/2023/08/04/research/rttov/rttov132-variables-structures/" title="RTTOV辐射传输模式实践：(*) RTTOV V13.2 TYPE" >RTTOV辐射传输模式实践：(*) RTTOV V13.2 TYPE</a>          <div class="content">本节解读一下RTTOV的源码，介绍一下RTTOV变量和结构体。</div>     </div></div></div> -->]]></content>
      
      
      <categories>
          
          <category> Research </category>
          
      </categories>
      
      
        <tags>
            
            <tag> RTM </tag>
            
            <tag> RTTOV </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ERA5再分析数据集下载</title>
      <link href="/blog/research/ERA5-download-guide/"/>
      <url>/blog/research/ERA5-download-guide/</url>
      
        <content type="html"><![CDATA[<p>本文将包括以下解决方案：</p><ol><li>如何自动化脚本下载？</li><li>如何自定义ERA5再分析数据的水平分辨率？</li></ol><p>ERA5再分析数据是大气科学领域常用的几种再分析数据之一，记得在3~5年以前，ERA5还不能普遍获取，只有新世纪年代的在分析数据集。<br>目前，最新的ERA5数据集已经回溯到了1970年以前，无论是对于数值模拟还是年代际的气候变化研究来说，ERA5数据集都一个非常好用的数据集。<br>相较于之前的ERA再分析数据集来说，ERA5有了更高效、更快速的数据分发系统，即<a href="https://cds.climate.copernicus.eu/cdsapp#!/search?text=ERA5">Climate Data Store</a> ，简称CDS。<br>下载速度已经达到了MB级，会想起以前下载ERA-Interim&#x2F;20C的痛苦回忆，不甚唏嘘。</p><h2 id="准备工作："><a href="#准备工作：" class="headerlink" title="准备工作："></a>准备工作：</h2><p>访问<a href="https://cds.climate.copernicus.eu/cdsapp#!/search?text=ERA5%EF%BC%8C%E6%B3%A8%E5%86%8C%E8%B4%A6%E5%8F%B7%EF%BC%8C%E7%99%BB%E5%BD%95%E3%80%82">https://cds.climate.copernicus.eu/cdsapp#!/search?text=ERA5，注册账号，登录。</a></p><h2 id="ERA5数据浏览器下载方式"><a href="#ERA5数据浏览器下载方式" class="headerlink" title="ERA5数据浏览器下载方式"></a>ERA5数据浏览器下载方式</h2><p>以下载ERA5小时分辨率的地表参数为例，</p><ol><li>访问数据集页面<a href="https://cds.climate.copernicus.eu/cdsapp#!/dataset/reanalysis-era5-land?tab=form">ERA5-Land hourly data from 1950 to present</a> ，会发现大量的复选框；</li><li>按需求勾选对应的地表参数，这里包含了个参数的分组，包括Temperature，Lakes Snow Snow，Soil Water，Radiation and Heat…等参数集,这里我们勾选✔2m dewpoint temperature为例；</li><li>勾选年月日，时刻（UTC时间），这里我们勾选2023，Jan, 01, 01:00；</li><li>自定义区域范围和数据格式，这里勾选了NETCDF3(experimental)</li><li>点击submit form就可以提交任务，并且跳转到my requests界面查看任务状态，当status变成download就可以点击下载了。</li></ol><p>这样的下载方式操作比较简单，但是缺点明显：</p><ol><li>手动的提交和下载方式比较费人，数据量少还好说，但是多年数据的下载就比较麻烦了，CDS系统设定了单个文件的大小，必须拆成足够小的粒度才能提交成功；</li><li>由上述的过程可以看出，手动下载不提供自定义水平分辨率的选项：默认的分辨率为:ERA5 0.25°，ERA-Land: 0.1°；</li></ol><h2 id="基于CDS-API的ERA5数据集的自动化下载"><a href="#基于CDS-API的ERA5数据集的自动化下载" class="headerlink" title="基于CDS API的ERA5数据集的自动化下载"></a>基于CDS API的ERA5数据集的自动化下载</h2><p>CDS系统提供了专门的数据瞎子API,可以使用PYTHON脚本等访问下载，这种方式提供了更多更自由的参数选择。<br>本文介绍了Windows系统下基于VScode+Python+CDSAPI+jupyter插件的下载方式。<br>注：本文介绍基于python3的下载方法，如果你有现成的python解释器，可以直接命令行运行python脚本下载，不需要安装vccode，直接跳到下面的步骤4：</p><h3 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h3><ol><li>下载vscode编辑器，默认方式安装，避免后续麻烦，建议安装时勾选加入PATH等选项;</li><li>安装python编译器，默认方式安装，安装时勾选加入PATH等选项;</li><li>安装cdsapi包，vscode新建终端，运行<code>pip3 install cdsapi</code>; </li><li>登录CDS系统。进入一下地址<a href="https://cds.climate.copernicus.eu/api-how-to">https://cds.climate.copernicus.eu/api-how-to</a> ，复制黑色命令行中的两行代码：</li></ol><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">url: https://cds.climate.copernicus.eu/api/v2</span><br><span class="line">key: 2100??:5cb??b6-????-4??6-98?f-e9e???????da</span><br></pre></td></tr></table></figure><p>这两行是脚本访问api的身份识别信息，每个人的账户下自动生成，需要自己到该网址下复制；<br>windows用户主目录C:\Users\jiheng\下新建<code>.cdsapirc</code>文件，输入以上复制的两行内容，保存；<br>linux用户应该在&#x2F;home&#x2F;jiheng&#x2F;下新建如上文件和内容；</p><h3 id="脚本下载"><a href="#脚本下载" class="headerlink" title="脚本下载"></a>脚本下载</h3><ol start="5"><li><p>获取脚本内容：<br>访问数据集页面 <a href="https://cds.climate.copernicus.eu/cdsapp#!/dataset/reanalysis-era5-land?tab=form">ERA5-Land hourly data from 1950 to present</a> ，按需要勾选变量和时间，填写区域和数据格式；<br>点击最底部的<code>Show API request</code>，会出现python脚本，复制到本地。</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> cdsapi</span><br><span class="line">c = cdsapi.Client()</span><br><span class="line">c.retrieve(</span><br><span class="line">    <span class="string">&#x27;reanalysis-era5-land&#x27;</span>,</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="string">&#x27;variable&#x27;</span>: <span class="string">&#x27;2m_dewpoint_temperature&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;year&#x27;</span>: <span class="string">&#x27;2023&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;month&#x27;</span>: <span class="string">&#x27;01&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;day&#x27;</span>: <span class="string">&#x27;01&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;time&#x27;</span>: <span class="string">&#x27;00:00&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;area&#x27;</span>: [</span><br><span class="line">            <span class="number">90</span>, -<span class="number">180</span>, -<span class="number">90</span>,</span><br><span class="line">            <span class="number">180</span>,</span><br><span class="line">        ],</span><br><span class="line">        <span class="string">&#x27;format&#x27;</span>: <span class="string">&#x27;netcdf&#x27;</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">&#x27;download.nc&#x27;</span>)</span><br></pre></td></tr></table></figure></li><li><p>新建数据下载文件夹，如G:\ERA5-Land,将上述复制的python脚本新建为<code>era5-land-download-eaxple.py</code></p></li><li><p>使用VScode打开当前的文件夹作为工作路径（注意，最好这样干，如果直接打开py文件，下载数据会默认保存到个人主目录下，而不是数据下载目录），打开并运行脚本即可；<br><img src="http://home.ustc.edu.cn/~hjh18305/filzoo/py-down-era5-direct.png"></p></li></ol><h2 id="如何更优雅的下载？"><a href="#如何更优雅的下载？" class="headerlink" title="如何更优雅的下载？"></a>如何更优雅的下载？</h2><p>但是这样的下载还是不够优雅，我们好需要进一步自定义分辨率和修改脚本，这里提供了一种可能的下载任务，供大家参考；</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#%%</span></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> cdsapi</span><br><span class="line">c = cdsapi.Client()</span><br><span class="line"></span><br><span class="line"><span class="comment">### specify the index of selected region </span></span><br><span class="line">ia =<span class="number">3</span></span><br><span class="line"><span class="comment">## SKIP Certain Arae or Year</span></span><br><span class="line">downloadedAreas=[<span class="string">&#x27;&#x27;</span>,]</span><br><span class="line">downloadedYears=[<span class="string">&#x27;&#x27;</span>,]</span><br><span class="line"></span><br><span class="line"><span class="comment">## index:  0      1      2     3     4     5     6     7</span></span><br><span class="line">Regions=[<span class="string">&#x27;ASIA&#x27;</span>,<span class="string">&#x27;EUAF&#x27;</span>,<span class="string">&#x27;AFR&#x27;</span>,<span class="string">&#x27;NAM&#x27;</span>,<span class="string">&#x27;SAM&#x27;</span>,<span class="string">&#x27;MLY&#x27;</span>,<span class="string">&#x27;AUS&#x27;</span>,<span class="string">&#x27;NZD&#x27;</span>,]<span class="comment">#&#x27;EBor&#x27;,&#x27;WBor&#x27;,&#x27;antarctic&#x27;,&#x27;arctic&#x27;]</span></span><br><span class="line"></span><br><span class="line">Areas=  [</span><br><span class="line">        [<span class="number">60</span>, <span class="number">70</span>, <span class="number">0</span>, <span class="number">145</span>,],   <span class="comment">### ASIA</span></span><br><span class="line">        [<span class="number">60</span>,-<span class="number">20</span>,<span class="number">0</span>,<span class="number">70</span>,],       <span class="comment">## EUAF</span></span><br><span class="line">        [<span class="number">0</span>, <span class="number">7</span>, -<span class="number">36</span>, <span class="number">52</span>,],  <span class="comment">## AFR</span></span><br><span class="line">        [<span class="number">60</span>,-<span class="number">140</span>,<span class="number">15</span>,-<span class="number">50</span>,],  <span class="comment">## NAM</span></span><br><span class="line">        [<span class="number">15</span>,-<span class="number">95</span>,-<span class="number">56</span>,-<span class="number">34</span>,],  <span class="comment">## SAM</span></span><br><span class="line">        [<span class="number">0</span>, <span class="number">97</span>, -<span class="number">11</span>, <span class="number">163</span>,],   <span class="comment">### MLY</span></span><br><span class="line">        [-<span class="number">11</span>, <span class="number">113</span>, -<span class="number">44</span>, <span class="number">155</span>,], <span class="comment">### AUS</span></span><br><span class="line">        [-<span class="number">34</span>, <span class="number">166</span>, -<span class="number">48</span>, <span class="number">179</span>,], <span class="comment">### NZD</span></span><br><span class="line">        <span class="comment"># [75, 0, 60, 180,], ### EBor</span></span><br><span class="line">        <span class="comment"># [75, -180, 60, -15,], ### WBor</span></span><br><span class="line">        <span class="comment"># [-56, -180, -90, 180,], ### Antarctic</span></span><br><span class="line">        <span class="comment"># [75, -180, 90, 180,], ### Arctic</span></span><br><span class="line">        ]</span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27; general setups &#x27;&#x27;&#x27;</span></span><br><span class="line">Years=[<span class="string">&#x27;2019&#x27;</span>,<span class="string">&#x27;2020&#x27;</span>,<span class="string">&#x27;2021&#x27;</span>,<span class="string">&#x27;2022&#x27;</span>,]</span><br><span class="line">Months=[<span class="string">&#x27;01&#x27;</span>,<span class="string">&#x27;02&#x27;</span>,<span class="string">&#x27;03&#x27;</span>,<span class="string">&#x27;04&#x27;</span>,<span class="string">&#x27;05&#x27;</span>,<span class="string">&#x27;06&#x27;</span>,<span class="string">&#x27;07&#x27;</span>,<span class="string">&#x27;08&#x27;</span>,<span class="string">&#x27;09&#x27;</span>,<span class="string">&#x27;10&#x27;</span>,<span class="string">&#x27;11&#x27;</span>,<span class="string">&#x27;12&#x27;</span>]</span><br><span class="line">Days=[<span class="string">&#x27;01&#x27;</span>,<span class="string">&#x27;02&#x27;</span>,<span class="string">&#x27;03&#x27;</span>,<span class="string">&#x27;04&#x27;</span>,<span class="string">&#x27;05&#x27;</span>,<span class="string">&#x27;06&#x27;</span>,<span class="string">&#x27;07&#x27;</span>,<span class="string">&#x27;08&#x27;</span>,<span class="string">&#x27;09&#x27;</span>,<span class="string">&#x27;10&#x27;</span>,<span class="string">&#x27;11&#x27;</span>,<span class="string">&#x27;12&#x27;</span>,<span class="string">&#x27;13&#x27;</span>,<span class="string">&#x27;14&#x27;</span>,<span class="string">&#x27;15&#x27;</span>,<span class="string">&#x27;16&#x27;</span>,<span class="string">&#x27;17&#x27;</span>,<span class="string">&#x27;18&#x27;</span>,<span class="string">&#x27;19&#x27;</span>,<span class="string">&#x27;20&#x27;</span>,</span><br><span class="line">             <span class="string">&#x27;21&#x27;</span>,<span class="string">&#x27;22&#x27;</span>,<span class="string">&#x27;23&#x27;</span>,<span class="string">&#x27;24&#x27;</span>,<span class="string">&#x27;25&#x27;</span>,<span class="string">&#x27;26&#x27;</span>,<span class="string">&#x27;27&#x27;</span>,<span class="string">&#x27;28&#x27;</span>,<span class="string">&#x27;29&#x27;</span>,<span class="string">&#x27;30&#x27;</span>,<span class="string">&#x27;31&#x27;</span>]</span><br><span class="line">utc_times= [<span class="string">&#x27;00:00&#x27;</span>, <span class="string">&#x27;01:00&#x27;</span>, <span class="string">&#x27;02:00&#x27;</span>,<span class="string">&#x27;03:00&#x27;</span>, <span class="string">&#x27;04:00&#x27;</span>, <span class="string">&#x27;05:00&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;06:00&#x27;</span>, <span class="string">&#x27;07:00&#x27;</span>, <span class="string">&#x27;08:00&#x27;</span>,<span class="string">&#x27;09:00&#x27;</span>, <span class="string">&#x27;10:00&#x27;</span>, <span class="string">&#x27;11:00&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;12:00&#x27;</span>, <span class="string">&#x27;13:00&#x27;</span>, <span class="string">&#x27;14:00&#x27;</span>,<span class="string">&#x27;15:00&#x27;</span>, <span class="string">&#x27;16:00&#x27;</span>, <span class="string">&#x27;17:00&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;18:00&#x27;</span>, <span class="string">&#x27;19:00&#x27;</span>, <span class="string">&#x27;20:00&#x27;</span>,<span class="string">&#x27;21:00&#x27;</span>, <span class="string">&#x27;22:00&#x27;</span>, <span class="string">&#x27;23:00&#x27;</span>,]</span><br><span class="line">leapyears=[<span class="string">&#x27;2012&#x27;</span>,<span class="string">&#x27;2016&#x27;</span>,<span class="string">&#x27;2020&#x27;</span>,]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 29 Layers</span></span><br><span class="line">plevels=[<span class="string">&#x27;50&#x27;</span>, <span class="string">&#x27;70&#x27;</span>, <span class="string">&#x27;100&#x27;</span>,<span class="string">&#x27;125&#x27;</span>, <span class="string">&#x27;150&#x27;</span>, <span class="string">&#x27;175&#x27;</span>,<span class="string">&#x27;200&#x27;</span>, <span class="string">&#x27;225&#x27;</span>, <span class="string">&#x27;250&#x27;</span>,<span class="string">&#x27;300&#x27;</span>, <span class="string">&#x27;350&#x27;</span>, <span class="string">&#x27;400&#x27;</span>, <span class="string">&#x27;450&#x27;</span>, <span class="string">&#x27;500&#x27;</span>, <span class="string">&#x27;550&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;600&#x27;</span>, <span class="string">&#x27;650&#x27;</span>, <span class="string">&#x27;700&#x27;</span>, <span class="string">&#x27;750&#x27;</span>, <span class="string">&#x27;775&#x27;</span>, <span class="string">&#x27;800&#x27;</span>, <span class="string">&#x27;825&#x27;</span>, <span class="string">&#x27;850&#x27;</span>, <span class="string">&#x27;875&#x27;</span>,<span class="string">&#x27;900&#x27;</span>, <span class="string">&#x27;925&#x27;</span>, <span class="string">&#x27;950&#x27;</span>,<span class="string">&#x27;975&#x27;</span>, <span class="string">&#x27;1000&#x27;</span>,]</span><br><span class="line"></span><br><span class="line">params=[<span class="string">&#x27;geopotential&#x27;</span>, <span class="string">&#x27;relative_humidity&#x27;</span>, <span class="string">&#x27;temperature&#x27;</span>,]</span><br><span class="line"></span><br><span class="line">resolution= [<span class="string">&#x27;0.25&#x27;</span>, <span class="string">&#x27;0.25&#x27;</span>]        </span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="comment">## loops for downloading</span></span><br><span class="line">area = Areas[ia]</span><br><span class="line"><span class="comment"># for ia, area in enumerate(Areas):</span></span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(Regions[ia]):</span><br><span class="line">    os.mkdir(Regions[ia])</span><br><span class="line">UTC=utc_times</span><br><span class="line"><span class="keyword">for</span> iy, year <span class="keyword">in</span> <span class="built_in">enumerate</span>(Years):  </span><br><span class="line">    <span class="keyword">if</span> (Regions[ia] <span class="keyword">in</span> downloadedAreas) <span class="keyword">or</span> year <span class="keyword">in</span> downloadedYears:</span><br><span class="line">        <span class="built_in">print</span>(Regions[ia]+ <span class="string">&quot; no need  for &quot;</span>+year)</span><br><span class="line">        <span class="keyword">continue</span>  </span><br><span class="line">    <span class="keyword">for</span> im, month <span class="keyword">in</span> <span class="built_in">enumerate</span>(Months):          </span><br><span class="line">        <span class="keyword">for</span> <span class="built_in">id</span>, day <span class="keyword">in</span> <span class="built_in">enumerate</span>(Days):</span><br><span class="line">            <span class="keyword">if</span> month <span class="keyword">in</span> [<span class="string">&#x27;04&#x27;</span>,<span class="string">&#x27;06&#x27;</span>,<span class="string">&#x27;09&#x27;</span>,<span class="string">&#x27;11&#x27;</span>] <span class="keyword">and</span> day&gt;=<span class="string">&#x27;31&#x27;</span>:</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            <span class="keyword">if</span> year <span class="keyword">in</span> leapyears <span class="keyword">and</span> month==<span class="string">&#x27;02&#x27;</span> <span class="keyword">and</span> day&gt;=<span class="string">&#x27;30&#x27;</span>:</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            <span class="keyword">if</span> (year <span class="keyword">not</span> <span class="keyword">in</span> leapyears) <span class="keyword">and</span> month==<span class="string">&#x27;02&#x27;</span> <span class="keyword">and</span> day&gt;=<span class="string">&#x27;29&#x27;</span>:</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            ncFileName = Regions[ia]+<span class="string">&#x27;/&#x27;</span>+year+<span class="string">&#x27;/ERA5-PL-29L-0P25-&#x27;</span>+Regions[ia]+<span class="string">&#x27;-&#x27;</span>+year+month+day+<span class="string">&#x27;.nc&#x27;</span></span><br><span class="line">            <span class="keyword">if</span> os.path.exists(ncFileName):</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(Regions[ia]+<span class="string">&#x27;/&#x27;</span>+year):</span><br><span class="line">                os.mkdir(Regions[ia]+<span class="string">&#x27;/&#x27;</span>+year)   </span><br><span class="line">           <span class="comment"># ncFileName=Regions[ia]+&#x27;/&#x27;+year+&#x27;/ERA5-PL-29L-0P25-&#x27;+Regions[ia]+&#x27;-&#x27;+year+month+day+&#x27;.nc&#x27;</span></span><br><span class="line">            c.retrieve(<span class="string">&#x27;reanalysis-era5-pressure-levels&#x27;</span>,</span><br><span class="line">                &#123;   <span class="string">&#x27;product_type&#x27;</span>: <span class="string">&#x27;reanalysis&#x27;</span>,</span><br><span class="line">                    <span class="string">&#x27;variable&#x27;</span>: params,</span><br><span class="line">                    <span class="string">&#x27;pressure_level&#x27;</span>: plevels,</span><br><span class="line">                    <span class="string">&#x27;year&#x27;</span>: year,</span><br><span class="line">                    <span class="string">&#x27;month&#x27;</span>: month,</span><br><span class="line">                    <span class="string">&#x27;day&#x27;</span>:   day,</span><br><span class="line">                    <span class="string">&#x27;time&#x27;</span>: UTC,</span><br><span class="line">                    <span class="string">&#x27;format&#x27;</span>: <span class="string">&#x27;netcdf&#x27;</span>,</span><br><span class="line">                    <span class="string">&#x27;area&#x27;</span>: area,</span><br><span class="line">                    <span class="string">&#x27;grid&#x27;</span>: resolution,   <span class="comment">### 自定义分辨率</span></span><br><span class="line">                &#125;,</span><br><span class="line">                ncFileName)</span><br><span class="line"><span class="comment"># %%</span></span><br></pre></td></tr></table></figure><p>并且，当你尝试使用vscode jupyter插件时，可以点击<code>运行单元格</code>来打开窗口进行下载，新建多个脚本，实现并排下载：<br><img src="http://home.ustc.edu.cn/~hjh18305/filzoo/py-down-era5-elegent.png"></p><h2 id="其他产品的代码"><a href="#其他产品的代码" class="headerlink" title="其他产品的代码"></a>其他产品的代码</h2><p>ERA5 大气廓线:</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#%%</span></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> cdsapi</span><br><span class="line">c = cdsapi.Client()</span><br><span class="line"></span><br><span class="line"><span class="comment">### specify the index of selected region </span></span><br><span class="line"></span><br><span class="line">ia =<span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## SKIP Certain Arae or Year</span></span><br><span class="line">downloadedAreas=[<span class="string">&#x27;&#x27;</span>,]</span><br><span class="line">downloadedYears=[<span class="string">&#x27;&#x27;</span>,]</span><br><span class="line"></span><br><span class="line"><span class="comment">## index:  0      1      2     3     4     5     6     7</span></span><br><span class="line">Regions=[<span class="string">&#x27;ASIA&#x27;</span>,<span class="string">&#x27;EUAF&#x27;</span>,<span class="string">&#x27;AFR&#x27;</span>,<span class="string">&#x27;NAM&#x27;</span>,<span class="string">&#x27;SAM&#x27;</span>,<span class="string">&#x27;MLY&#x27;</span>,<span class="string">&#x27;AUS&#x27;</span>,<span class="string">&#x27;NZD&#x27;</span>,]<span class="comment">#&#x27;EBor&#x27;,&#x27;WBor&#x27;,&#x27;antarctic&#x27;,&#x27;arctic&#x27;]</span></span><br><span class="line"></span><br><span class="line">Areas=  [</span><br><span class="line">        [<span class="number">60</span>, <span class="number">70</span>, <span class="number">0</span>, <span class="number">145</span>,],   <span class="comment">### ASIA</span></span><br><span class="line">        [<span class="number">60</span>,-<span class="number">20</span>,<span class="number">0</span>,<span class="number">70</span>,],       <span class="comment">## EUAF</span></span><br><span class="line">        [<span class="number">0</span>, <span class="number">7</span>, -<span class="number">36</span>, <span class="number">52</span>,],  <span class="comment">## AFR</span></span><br><span class="line">        [<span class="number">60</span>,-<span class="number">140</span>,<span class="number">15</span>,-<span class="number">50</span>,],  <span class="comment">## NAM</span></span><br><span class="line">        [<span class="number">15</span>,-<span class="number">95</span>,-<span class="number">56</span>,-<span class="number">34</span>,],  <span class="comment">## SAM</span></span><br><span class="line">        [<span class="number">0</span>, <span class="number">97</span>, -<span class="number">11</span>, <span class="number">163</span>,],   <span class="comment">### MLY</span></span><br><span class="line">        [-<span class="number">11</span>, <span class="number">113</span>, -<span class="number">44</span>, <span class="number">155</span>,], <span class="comment">### AUS</span></span><br><span class="line">        [-<span class="number">34</span>, <span class="number">166</span>, -<span class="number">48</span>, <span class="number">179</span>,], <span class="comment">### NZD</span></span><br><span class="line">        <span class="comment"># [75, 0, 60, 180,], ### EBor</span></span><br><span class="line">        <span class="comment"># [75, -180, 60, -15,], ### WBor</span></span><br><span class="line">        <span class="comment"># [-56, -180, -90, 180,], ### Antarctic</span></span><br><span class="line">        <span class="comment"># [75, -180, 90, 180,], ### Arctic</span></span><br><span class="line">        ]</span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27; general setups &#x27;&#x27;&#x27;</span></span><br><span class="line">Years=[<span class="string">&#x27;2019&#x27;</span>,<span class="string">&#x27;2020&#x27;</span>,<span class="string">&#x27;2021&#x27;</span>,<span class="string">&#x27;2022&#x27;</span>]</span><br><span class="line">Months=[<span class="string">&#x27;01&#x27;</span>,<span class="string">&#x27;02&#x27;</span>,<span class="string">&#x27;03&#x27;</span>,<span class="string">&#x27;04&#x27;</span>,<span class="string">&#x27;05&#x27;</span>,<span class="string">&#x27;06&#x27;</span>,<span class="string">&#x27;07&#x27;</span>,<span class="string">&#x27;08&#x27;</span>,<span class="string">&#x27;09&#x27;</span>,<span class="string">&#x27;10&#x27;</span>,<span class="string">&#x27;11&#x27;</span>,<span class="string">&#x27;12&#x27;</span>]</span><br><span class="line">Days=[<span class="string">&#x27;01&#x27;</span>,<span class="string">&#x27;02&#x27;</span>,<span class="string">&#x27;03&#x27;</span>,<span class="string">&#x27;04&#x27;</span>,<span class="string">&#x27;05&#x27;</span>,<span class="string">&#x27;06&#x27;</span>,<span class="string">&#x27;07&#x27;</span>,<span class="string">&#x27;08&#x27;</span>,<span class="string">&#x27;09&#x27;</span>,<span class="string">&#x27;10&#x27;</span>,<span class="string">&#x27;11&#x27;</span>,<span class="string">&#x27;12&#x27;</span>,<span class="string">&#x27;13&#x27;</span>,<span class="string">&#x27;14&#x27;</span>,<span class="string">&#x27;15&#x27;</span>,<span class="string">&#x27;16&#x27;</span>,<span class="string">&#x27;17&#x27;</span>,<span class="string">&#x27;18&#x27;</span>,<span class="string">&#x27;19&#x27;</span>,<span class="string">&#x27;20&#x27;</span>,</span><br><span class="line">             <span class="string">&#x27;21&#x27;</span>,<span class="string">&#x27;22&#x27;</span>,<span class="string">&#x27;23&#x27;</span>,<span class="string">&#x27;24&#x27;</span>,<span class="string">&#x27;25&#x27;</span>,<span class="string">&#x27;26&#x27;</span>,<span class="string">&#x27;27&#x27;</span>,<span class="string">&#x27;28&#x27;</span>,<span class="string">&#x27;29&#x27;</span>,<span class="string">&#x27;30&#x27;</span>,<span class="string">&#x27;31&#x27;</span>]</span><br><span class="line">utc_times= [<span class="string">&#x27;00:00&#x27;</span>, <span class="string">&#x27;01:00&#x27;</span>, <span class="string">&#x27;02:00&#x27;</span>,<span class="string">&#x27;03:00&#x27;</span>, <span class="string">&#x27;04:00&#x27;</span>, <span class="string">&#x27;05:00&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;06:00&#x27;</span>, <span class="string">&#x27;07:00&#x27;</span>, <span class="string">&#x27;08:00&#x27;</span>,<span class="string">&#x27;09:00&#x27;</span>, <span class="string">&#x27;10:00&#x27;</span>, <span class="string">&#x27;11:00&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;12:00&#x27;</span>, <span class="string">&#x27;13:00&#x27;</span>, <span class="string">&#x27;14:00&#x27;</span>,<span class="string">&#x27;15:00&#x27;</span>, <span class="string">&#x27;16:00&#x27;</span>, <span class="string">&#x27;17:00&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;18:00&#x27;</span>, <span class="string">&#x27;19:00&#x27;</span>, <span class="string">&#x27;20:00&#x27;</span>,<span class="string">&#x27;21:00&#x27;</span>, <span class="string">&#x27;22:00&#x27;</span>, <span class="string">&#x27;23:00&#x27;</span>,]</span><br><span class="line">leapyears=[<span class="string">&#x27;2012&#x27;</span>,<span class="string">&#x27;2016&#x27;</span>,<span class="string">&#x27;2020&#x27;</span>,]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 29 Layers</span></span><br><span class="line">plevels=[<span class="string">&#x27;50&#x27;</span>, <span class="string">&#x27;70&#x27;</span>, <span class="string">&#x27;100&#x27;</span>,<span class="string">&#x27;125&#x27;</span>, <span class="string">&#x27;150&#x27;</span>, <span class="string">&#x27;175&#x27;</span>,<span class="string">&#x27;200&#x27;</span>, <span class="string">&#x27;225&#x27;</span>, <span class="string">&#x27;250&#x27;</span>,<span class="string">&#x27;300&#x27;</span>, <span class="string">&#x27;350&#x27;</span>, <span class="string">&#x27;400&#x27;</span>, <span class="string">&#x27;450&#x27;</span>, <span class="string">&#x27;500&#x27;</span>, <span class="string">&#x27;550&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;600&#x27;</span>, <span class="string">&#x27;650&#x27;</span>, <span class="string">&#x27;700&#x27;</span>, <span class="string">&#x27;750&#x27;</span>, <span class="string">&#x27;775&#x27;</span>, <span class="string">&#x27;800&#x27;</span>, <span class="string">&#x27;825&#x27;</span>, <span class="string">&#x27;850&#x27;</span>, <span class="string">&#x27;875&#x27;</span>,<span class="string">&#x27;900&#x27;</span>, <span class="string">&#x27;925&#x27;</span>, <span class="string">&#x27;950&#x27;</span>,<span class="string">&#x27;975&#x27;</span>, <span class="string">&#x27;1000&#x27;</span>,]</span><br><span class="line"></span><br><span class="line">params=[<span class="string">&#x27;geopotential&#x27;</span>, <span class="string">&#x27;relative_humidity&#x27;</span>, <span class="string">&#x27;temperature&#x27;</span>,]</span><br><span class="line"></span><br><span class="line">resolution= [<span class="string">&#x27;0.25&#x27;</span>, <span class="string">&#x27;0.25&#x27;</span>]        </span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="comment">## loops for downloading</span></span><br><span class="line">area = Areas[ia]</span><br><span class="line"><span class="comment"># for ia, area in enumerate(Areas):</span></span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(Regions[ia]):</span><br><span class="line">    os.mkdir(Regions[ia])</span><br><span class="line">UTC=utc_times</span><br><span class="line"><span class="keyword">for</span> iy, year <span class="keyword">in</span> <span class="built_in">enumerate</span>(Years):  </span><br><span class="line">    <span class="keyword">if</span> (Regions[ia] <span class="keyword">in</span> downloadedAreas) <span class="keyword">or</span> year <span class="keyword">in</span> downloadedYears:</span><br><span class="line">        <span class="built_in">print</span>(Regions[ia]+ <span class="string">&quot; no need  for &quot;</span>+year)</span><br><span class="line">        <span class="keyword">continue</span>  </span><br><span class="line">    <span class="keyword">for</span> im, month <span class="keyword">in</span> <span class="built_in">enumerate</span>(Months):          </span><br><span class="line">        <span class="keyword">for</span> <span class="built_in">id</span>, day <span class="keyword">in</span> <span class="built_in">enumerate</span>(Days):</span><br><span class="line">            <span class="keyword">if</span> month <span class="keyword">in</span> [<span class="string">&#x27;04&#x27;</span>,<span class="string">&#x27;06&#x27;</span>,<span class="string">&#x27;09&#x27;</span>,<span class="string">&#x27;11&#x27;</span>] <span class="keyword">and</span> day&gt;=<span class="string">&#x27;31&#x27;</span>:</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            <span class="keyword">if</span> year <span class="keyword">in</span> leapyears <span class="keyword">and</span> month==<span class="string">&#x27;02&#x27;</span> <span class="keyword">and</span> day&gt;=<span class="string">&#x27;30&#x27;</span>:</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            <span class="keyword">if</span> (year <span class="keyword">not</span> <span class="keyword">in</span> leapyears) <span class="keyword">and</span> month==<span class="string">&#x27;02&#x27;</span> <span class="keyword">and</span> day&gt;=<span class="string">&#x27;29&#x27;</span>:</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            ncFileName = Regions[ia]+<span class="string">&#x27;/&#x27;</span>+year+<span class="string">&#x27;/ERA5-PL-29L-0P25-&#x27;</span>+Regions[ia]+<span class="string">&#x27;-&#x27;</span>+year+month+day+<span class="string">&#x27;.nc&#x27;</span></span><br><span class="line">            <span class="keyword">if</span> os.path.exists(ncFileName):</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(Regions[ia]+<span class="string">&#x27;/&#x27;</span>+year):</span><br><span class="line">                os.mkdir(Regions[ia]+<span class="string">&#x27;/&#x27;</span>+year)   </span><br><span class="line">            c.retrieve(<span class="string">&#x27;reanalysis-era5-pressure-levels&#x27;</span>,</span><br><span class="line">                &#123;   <span class="string">&#x27;product_type&#x27;</span>: <span class="string">&#x27;reanalysis&#x27;</span>,</span><br><span class="line">                    <span class="string">&#x27;variable&#x27;</span>: params,</span><br><span class="line">                    <span class="string">&#x27;pressure_level&#x27;</span>: plevels,</span><br><span class="line">                    <span class="string">&#x27;year&#x27;</span>: year,</span><br><span class="line">                    <span class="string">&#x27;month&#x27;</span>: month,</span><br><span class="line">                    <span class="string">&#x27;day&#x27;</span>:   day,</span><br><span class="line">                    <span class="string">&#x27;time&#x27;</span>: UTC,</span><br><span class="line">                    <span class="string">&#x27;format&#x27;</span>: <span class="string">&#x27;netcdf&#x27;</span>,</span><br><span class="line">                    <span class="string">&#x27;area&#x27;</span>: area,</span><br><span class="line">                    <span class="string">&#x27;grid&#x27;</span>: resolution,</span><br><span class="line">                &#125;,</span><br><span class="line">                ncFileName)</span><br><span class="line"><span class="comment"># %%</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>ERA5 single level:</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#%%</span></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> cdsapi</span><br><span class="line">c = cdsapi.Client()</span><br><span class="line"></span><br><span class="line"><span class="comment">### specify the index of selected region </span></span><br><span class="line"></span><br><span class="line">ia =<span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## SKIP Certain Arae or Year</span></span><br><span class="line">downloadedAreas=[<span class="string">&#x27;&#x27;</span>,]</span><br><span class="line">downloadedYears=[<span class="string">&#x27;&#x27;</span>,]</span><br><span class="line"></span><br><span class="line"><span class="comment">## index:  0      1      2     3     4     5     6     7</span></span><br><span class="line">Regions=[<span class="string">&#x27;ASIA&#x27;</span>,<span class="string">&#x27;EUAF&#x27;</span>,<span class="string">&#x27;AFR&#x27;</span>,<span class="string">&#x27;NAM&#x27;</span>,<span class="string">&#x27;SAM&#x27;</span>,<span class="string">&#x27;MLY&#x27;</span>,<span class="string">&#x27;AUS&#x27;</span>,<span class="string">&#x27;NZD&#x27;</span>,]<span class="comment">#&#x27;EBor&#x27;,&#x27;WBor&#x27;,&#x27;antarctic&#x27;,&#x27;arctic&#x27;]</span></span><br><span class="line"></span><br><span class="line">Areas=  [</span><br><span class="line">        [<span class="number">60</span>, <span class="number">70</span>, <span class="number">0</span>, <span class="number">145</span>,],   <span class="comment">### ASIA</span></span><br><span class="line">        [<span class="number">60</span>,-<span class="number">20</span>,<span class="number">0</span>,<span class="number">70</span>,],       <span class="comment">## EUAF</span></span><br><span class="line">        [<span class="number">0</span>, <span class="number">7</span>, -<span class="number">36</span>, <span class="number">52</span>,],  <span class="comment">## AFR</span></span><br><span class="line">        [<span class="number">60</span>,-<span class="number">140</span>,<span class="number">15</span>,-<span class="number">50</span>,],  <span class="comment">## NAM</span></span><br><span class="line">        [<span class="number">15</span>,-<span class="number">95</span>,-<span class="number">56</span>,-<span class="number">34</span>,],  <span class="comment">## SAM</span></span><br><span class="line">        [<span class="number">0</span>, <span class="number">97</span>, -<span class="number">11</span>, <span class="number">163</span>,],   <span class="comment">### MLY</span></span><br><span class="line">        [-<span class="number">11</span>, <span class="number">113</span>, -<span class="number">44</span>, <span class="number">155</span>,], <span class="comment">### AUS</span></span><br><span class="line">        [-<span class="number">34</span>, <span class="number">166</span>, -<span class="number">48</span>, <span class="number">179</span>,], <span class="comment">### NZD</span></span><br><span class="line">        <span class="comment"># [75, 0, 60, 180,], ### EBor</span></span><br><span class="line">        <span class="comment"># [75, -180, 60, -15,], ### WBor</span></span><br><span class="line">        <span class="comment"># [-56, -180, -90, 180,], ### Antarctic</span></span><br><span class="line">        <span class="comment"># [75, -180, 90, 180,], ### Arctic</span></span><br><span class="line">        ]</span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27; general setups &#x27;&#x27;&#x27;</span></span><br><span class="line">Years=[<span class="string">&#x27;2011&#x27;</span>,<span class="string">&#x27;2012&#x27;</span>,<span class="string">&#x27;2013&#x27;</span>,<span class="string">&#x27;2014&#x27;</span>,<span class="string">&#x27;2015&#x27;</span>,<span class="string">&#x27;2016&#x27;</span>,<span class="string">&#x27;2017&#x27;</span>,<span class="string">&#x27;2018&#x27;</span>,<span class="string">&#x27;2019&#x27;</span>,<span class="string">&#x27;2020&#x27;</span>,<span class="string">&#x27;2021&#x27;</span>,<span class="string">&#x27;2022&#x27;</span>,]</span><br><span class="line">Months=[<span class="string">&#x27;01&#x27;</span>,<span class="string">&#x27;02&#x27;</span>,<span class="string">&#x27;03&#x27;</span>,<span class="string">&#x27;04&#x27;</span>,<span class="string">&#x27;05&#x27;</span>,<span class="string">&#x27;06&#x27;</span>,<span class="string">&#x27;07&#x27;</span>,<span class="string">&#x27;08&#x27;</span>,<span class="string">&#x27;09&#x27;</span>,<span class="string">&#x27;10&#x27;</span>,<span class="string">&#x27;11&#x27;</span>,<span class="string">&#x27;12&#x27;</span>]</span><br><span class="line">Days=[<span class="string">&#x27;01&#x27;</span>,<span class="string">&#x27;02&#x27;</span>,<span class="string">&#x27;03&#x27;</span>,<span class="string">&#x27;04&#x27;</span>,<span class="string">&#x27;05&#x27;</span>,<span class="string">&#x27;06&#x27;</span>,<span class="string">&#x27;07&#x27;</span>,<span class="string">&#x27;08&#x27;</span>,<span class="string">&#x27;09&#x27;</span>,<span class="string">&#x27;10&#x27;</span>,<span class="string">&#x27;11&#x27;</span>,<span class="string">&#x27;12&#x27;</span>,<span class="string">&#x27;13&#x27;</span>,<span class="string">&#x27;14&#x27;</span>,<span class="string">&#x27;15&#x27;</span>,<span class="string">&#x27;16&#x27;</span>,<span class="string">&#x27;17&#x27;</span>,<span class="string">&#x27;18&#x27;</span>,<span class="string">&#x27;19&#x27;</span>,<span class="string">&#x27;20&#x27;</span>,<span class="string">&#x27;21&#x27;</span>,<span class="string">&#x27;22&#x27;</span>,<span class="string">&#x27;23&#x27;</span>,<span class="string">&#x27;24&#x27;</span>,<span class="string">&#x27;25&#x27;</span>,<span class="string">&#x27;26&#x27;</span>,<span class="string">&#x27;27&#x27;</span>,<span class="string">&#x27;28&#x27;</span>,<span class="string">&#x27;29&#x27;</span>,<span class="string">&#x27;30&#x27;</span>,<span class="string">&#x27;31&#x27;</span>]</span><br><span class="line">utc_times= [<span class="string">&#x27;00:00&#x27;</span>, <span class="string">&#x27;01:00&#x27;</span>, <span class="string">&#x27;02:00&#x27;</span>,<span class="string">&#x27;03:00&#x27;</span>, <span class="string">&#x27;04:00&#x27;</span>, <span class="string">&#x27;05:00&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;06:00&#x27;</span>, <span class="string">&#x27;07:00&#x27;</span>, <span class="string">&#x27;08:00&#x27;</span>,<span class="string">&#x27;09:00&#x27;</span>, <span class="string">&#x27;10:00&#x27;</span>, <span class="string">&#x27;11:00&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;12:00&#x27;</span>, <span class="string">&#x27;13:00&#x27;</span>, <span class="string">&#x27;14:00&#x27;</span>,<span class="string">&#x27;15:00&#x27;</span>, <span class="string">&#x27;16:00&#x27;</span>, <span class="string">&#x27;17:00&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;18:00&#x27;</span>, <span class="string">&#x27;19:00&#x27;</span>, <span class="string">&#x27;20:00&#x27;</span>,<span class="string">&#x27;21:00&#x27;</span>, <span class="string">&#x27;22:00&#x27;</span>, <span class="string">&#x27;23:00&#x27;</span>,]</span><br><span class="line">leapyears=[<span class="string">&#x27;2012&#x27;</span>,<span class="string">&#x27;2016&#x27;</span>,<span class="string">&#x27;2020&#x27;</span>,]</span><br><span class="line"></span><br><span class="line">params= [<span class="string">&#x27;cloud_base_height&#x27;</span>, <span class="string">&#x27;high_vegetation_cover&#x27;</span>, <span class="string">&#x27;leaf_area_index_high_vegetation&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;leaf_area_index_low_vegetation&#x27;</span>, <span class="string">&#x27;low_vegetation_cover&#x27;</span>, <span class="string">&#x27;soil_type&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;total_cloud_cover&#x27;</span>, <span class="string">&#x27;total_column_cloud_ice_water&#x27;</span>, <span class="string">&#x27;total_column_cloud_liquid_water&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;total_column_rain_water&#x27;</span>, <span class="string">&#x27;total_column_snow_water&#x27;</span>, <span class="string">&#x27;type_of_high_vegetation&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;type_of_low_vegetation&#x27;</span>,]</span><br><span class="line"></span><br><span class="line">resolution= [<span class="string">&#x27;0.25&#x27;</span>, <span class="string">&#x27;0.25&#x27;</span>]        </span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="comment">## loops for downloading</span></span><br><span class="line">area = Areas[ia]</span><br><span class="line"><span class="comment"># for ia, area in enumerate(Areas):</span></span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(Regions[ia]):</span><br><span class="line">    os.mkdir(Regions[ia])</span><br><span class="line">UTC=utc_times</span><br><span class="line"><span class="keyword">for</span> iy, year <span class="keyword">in</span> <span class="built_in">enumerate</span>(Years):  </span><br><span class="line">    <span class="keyword">if</span> (Regions[ia] <span class="keyword">in</span> downloadedAreas) <span class="keyword">or</span> year <span class="keyword">in</span> downloadedYears:</span><br><span class="line">        <span class="built_in">print</span>(Regions[ia]+ <span class="string">&quot; no need  for &quot;</span>+year)</span><br><span class="line">        <span class="keyword">continue</span>  </span><br><span class="line">    <span class="keyword">for</span> im, month <span class="keyword">in</span> <span class="built_in">enumerate</span>(Months):          </span><br><span class="line">        <span class="keyword">for</span> <span class="built_in">id</span>, day <span class="keyword">in</span> <span class="built_in">enumerate</span>(Days):</span><br><span class="line">            <span class="keyword">if</span> month <span class="keyword">in</span> [<span class="string">&#x27;04&#x27;</span>,<span class="string">&#x27;06&#x27;</span>,<span class="string">&#x27;09&#x27;</span>,<span class="string">&#x27;11&#x27;</span>] <span class="keyword">and</span> day&gt;=<span class="string">&#x27;31&#x27;</span>:</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            <span class="keyword">if</span> year <span class="keyword">in</span> leapyears <span class="keyword">and</span> month==<span class="string">&#x27;02&#x27;</span> <span class="keyword">and</span> day&gt;=<span class="string">&#x27;30&#x27;</span>:</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            <span class="keyword">if</span> (year <span class="keyword">not</span> <span class="keyword">in</span> leapyears) <span class="keyword">and</span> month==<span class="string">&#x27;02&#x27;</span> <span class="keyword">and</span> day&gt;=<span class="string">&#x27;29&#x27;</span>:</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(Regions[ia]+<span class="string">&#x27;/&#x27;</span>+year):</span><br><span class="line">                os.mkdir(Regions[ia]+<span class="string">&#x27;/&#x27;</span>+year)   </span><br><span class="line">            ncFileName=Regions[ia]+<span class="string">&#x27;/&#x27;</span>+year+<span class="string">&#x27;/ERA5-SingleL-0P25-&#x27;</span>+Regions[ia]+<span class="string">&#x27;-&#x27;</span>+year+month+day+<span class="string">&#x27;.nc&#x27;</span></span><br><span class="line">            c.retrieve(<span class="string">&#x27;reanalysis-era5-single-levels&#x27;</span>,</span><br><span class="line">                        &#123;   <span class="string">&#x27;variable&#x27;</span>:params,</span><br><span class="line">                            <span class="string">&#x27;year&#x27;</span>: year,</span><br><span class="line">                            <span class="string">&#x27;month&#x27;</span>: month,</span><br><span class="line">                            <span class="string">&#x27;day&#x27;</span>: day,</span><br><span class="line">                            <span class="string">&#x27;time&#x27;</span>: UTC,</span><br><span class="line">                            <span class="string">&#x27;area&#x27;</span>: area,</span><br><span class="line">                            <span class="string">&#x27;product_type&#x27;</span>: <span class="string">&#x27;reanalysis&#x27;</span>,</span><br><span class="line">                            <span class="string">&#x27;format&#x27;</span>: <span class="string">&#x27;netcdf&#x27;</span>,</span><br><span class="line">                            <span class="string">&#x27;grid&#x27;</span>: resolution,</span><br><span class="line">                        &#125;,</span><br><span class="line">                        ncFileName)</span><br><span class="line"><span class="comment"># %%</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>参考：<a href="https://cds.climate.copernicus.eu/api-how-to">https://cds.climate.copernicus.eu/api-how-to</a></p>]]></content>
      
      
      <categories>
          
          <category> Data N&#39; Method </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ERA5 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>libgfortran.so.3 动态库缺失</title>
      <link href="/blog/devops/missing-libgfortran.so.3/"/>
      <url>/blog/devops/missing-libgfortran.so.3/</url>
      
        <content type="html"><![CDATA[<p>将临时存储库放入&#x2F;etc&#x2F;apt&#x2F;sources.list</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">root@node02:/home/hjh# wget --post-data=&quot;name=username&amp;password=passwd&amp;cmd=set&amp;type=1&amp;exp=0&quot; http://wlt.ustc.edu.cn/cgi-bin/ip -O -</span><br><span class="line">root@node02:/home/hjh# cp /etc/apt/sources.list /etc/apt/sources.list.bak</span><br></pre></td></tr></table></figure><p>将临时存储库放入&#x2F;etc&#x2F;apt&#x2F;sources.list</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">root@node02:/home/hjh# echo deb http://gb.archive.ubuntu.com/ubuntu/ bionic main universe &gt;&gt; /etc/apt/sources.list</span><br></pre></td></tr></table></figure><p>拉取更新信息</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">root@node02:/home/hjh# apt update</span><br><span class="line">获取:1 http://gb.archive.ubuntu.com/ubuntu bionic InRelease [242 kB]</span><br><span class="line">错误:1 http://gb.archive.ubuntu.com/ubuntu bionic InRelease</span><br><span class="line">  由于没有公钥，无法验证下列签名： NO_PUBKEY 3B4FE6ACC0B21F32</span><br><span class="line">命中:2 http://security.ubuntu.com/ubuntu jammy-security InRelease                             </span><br><span class="line">命中:3 http://cn.archive.ubuntu.com/ubuntu jammy InRelease                                    </span><br><span class="line">命中:4 http://cn.archive.ubuntu.com/ubuntu jammy-updates InRelease</span><br><span class="line">命中:5 http://cn.archive.ubuntu.com/ubuntu jammy-backports InRelease</span><br><span class="line">正在读取软件包列表... 完成</span><br><span class="line">W: GPG 错误：http://gb.archive.ubuntu.com/ubuntu bionic InRelease: 由于没有公钥，无法验证下列签名： NO_PUBKEY 3B4FE6ACC0B21F32</span><br><span class="line">E: 仓库 “http://gb.archive.ubuntu.com/ubuntu bionic InRelease” 没有数字签名。</span><br><span class="line">N: 无法安全地用该源进行更新，所以默认禁用该源。</span><br><span class="line">N: 参见 apt-secure(8) 手册以了解仓库创建和用户配置方面的细节。</span><br></pre></td></tr></table></figure><p>出现公钥验证不通过，使用公钥服务器授权公钥<code>3B4FE6ACC0B21F32</code>：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">root@node02:/home/hjh# apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 3B4FE6ACC0B21F32</span><br><span class="line">Warning: apt-key is deprecated. Manage keyring files in trusted.gpg.d instead (see apt-key(8)).</span><br><span class="line">Executing: /tmp/apt-key-gpghome.tQqTN7Eae0/gpg.1.sh --keyserver hkp://keyserver.ubuntu.com:80 --recv 3B4FE6ACC0B21F32</span><br><span class="line">gpg: 密钥 3B4FE6ACC0B21F32：公钥 “Ubuntu Archive Automatic Signing Key (2012) &lt;ftpmaster@ubuntu.com&gt;” 已导入</span><br><span class="line">gpg: 处理的总数：1</span><br><span class="line">gpg:               已导入：1</span><br></pre></td></tr></table></figure><p>继续更新源</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">root@node02:/home/hjh# apt update</span><br><span class="line">获取:1 http://gb.archive.ubuntu.com/ubuntu bionic InRelease [242 kB]</span><br><span class="line">命中:2 http://security.ubuntu.com/ubuntu jammy-security InRelease                                                                                                                           </span><br><span class="line">命中:3 http://cn.archive.ubuntu.com/ubuntu jammy InRelease                                                                                                                                  </span><br><span class="line">命中:4 http://cn.archive.ubuntu.com/ubuntu jammy-updates InRelease                                                                                                                          </span><br><span class="line">获取:5 http://cn.archive.ubuntu.com/ubuntu jammy-backports InRelease [108 kB]                                                                                                               </span><br><span class="line">忽略:1 http://gb.archive.ubuntu.com/ubuntu bionic InRelease                                                                                                                                 </span><br><span class="line">获取:1 http://gb.archive.ubuntu.com/ubuntu bionic InRelease [242 kB]</span><br><span class="line">获取:6 http://gb.archive.ubuntu.com/ubuntu bionic/main i386 Packages [1,007 kB]</span><br><span class="line">获取:7 http://gb.archive.ubuntu.com/ubuntu bionic/main amd64 Packages [1,019 kB]</span><br><span class="line">获取:8 http://gb.archive.ubuntu.com/ubuntu bionic/main Translation-en [516 kB]</span><br><span class="line">获取:9 http://gb.archive.ubuntu.com/ubuntu bionic/main Translation-zh_CN [67.7 kB]</span><br><span class="line">获取:10 http://gb.archive.ubuntu.com/ubuntu bionic/main amd64 DEP-11 Metadata [477 kB]</span><br><span class="line">获取:11 http://gb.archive.ubuntu.com/ubuntu bionic/main DEP-11 48x48 Icons [118 kB]</span><br><span class="line">获取:12 http://gb.archive.ubuntu.com/ubuntu bionic/main DEP-11 64x64 Icons [245 kB]</span><br><span class="line">获取:13 http://gb.archive.ubuntu.com/ubuntu bionic/main DEP-11 64x64@2 Icons [29 B]</span><br><span class="line">获取:14 http://gb.archive.ubuntu.com/ubuntu bionic/universe i386 Packages [8,531 kB]</span><br><span class="line">获取:15 http://gb.archive.ubuntu.com/ubuntu bionic/universe amd64 Packages [8,570 kB]                                                                                                       </span><br><span class="line">获取:16 http://gb.archive.ubuntu.com/ubuntu bionic/universe Translation-zh_CN [174 kB]                                                                                                      </span><br><span class="line">获取:17 http://gb.archive.ubuntu.com/ubuntu bionic/universe Translation-en [4,941 kB]                                                                                                       </span><br><span class="line">获取:18 http://gb.archive.ubuntu.com/ubuntu bionic/universe amd64 DEP-11 Metadata [3,287 kB]                                                                                                </span><br><span class="line">获取:19 http://gb.archive.ubuntu.com/ubuntu bionic/universe DEP-11 48x48 Icons [2,151 kB]                                                                                                   </span><br><span class="line">获取:20 http://gb.archive.ubuntu.com/ubuntu bionic/universe DEP-11 64x64 Icons [8,420 kB]                                                                                                   </span><br><span class="line">获取:21 http://gb.archive.ubuntu.com/ubuntu bionic/universe DEP-11 64x64@2 Icons [29 B]                                                                                                     </span><br><span class="line">已下载 39.8 MB，耗时 42秒 (940 kB/s)                                                                                                                                                        </span><br><span class="line">正在读取软件包列表... 完成</span><br><span class="line">正在分析软件包的依赖关系树... 完成</span><br><span class="line">正在读取状态信息... 完成                 </span><br><span class="line">有 111 个软件包可以升级。请执行 ‘apt list --upgradable’ 来查看它们。</span><br><span class="line">W: http://gb.archive.ubuntu.com/ubuntu/dists/bionic/InRelease: 密钥存储在过时的 trusted.gpg 密钥环中（/etc/apt/trusted.gpg），请参见 apt-key(8) 的 DEPRECATION 一节以了解详情。</span><br></pre></td></tr></table></figure><p>安装g++-6</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">root@node02:/home/hjh# sudo apt install g++-6</span><br><span class="line">正在读取软件包列表... 完成</span><br><span class="line">正在分析软件包的依赖关系树... 完成</span><br><span class="line">正在读取状态信息... 完成                 </span><br><span class="line">将会同时安装下列软件：</span><br><span class="line">  cpp-6 gcc-6 gcc-6-base gcc-7-base gcc-8-base libasan3 libcilkrts5 libgcc-6-dev libisl19 libmpx2 libstdc++-6-dev libubsan0</span><br><span class="line">建议安装：</span><br><span class="line">  gcc-6-locales g++-6-multilib gcc-6-doc libstdc++6-6-dbg gcc-6-multilib libgcc1-dbg libgomp1-dbg libitm1-dbg libatomic1-dbg libasan3-dbg liblsan0-dbg libtsan0-dbg libubsan0-dbg</span><br><span class="line">  libcilkrts5-dbg libmpx2-dbg libquadmath0-dbg libstdc++-6-doc</span><br><span class="line">下列【新】软件包将被安装：</span><br><span class="line">  cpp-6 g++-6 gcc-6 gcc-6-base gcc-7-base gcc-8-base libasan3 libcilkrts5 libgcc-6-dev libisl19 libmpx2 libstdc++-6-dev libubsan0</span><br><span class="line">升级了 0 个软件包，新安装了 13 个软件包，要卸载 0 个软件包，有 111 个软件包未被升级。</span><br><span class="line">需要下载 25.5 MB 的归档。</span><br><span class="line">解压缩后会消耗 103 MB 的额外空间。</span><br><span class="line">您希望继续执行吗？ [Y/n] y</span><br><span class="line">获取:1 http://gb.archive.ubuntu.com/ubuntu bionic/main amd64 gcc-8-base amd64 8-20180414-1ubuntu2 [18.2 kB]</span><br><span class="line">获取:2 http://gb.archive.ubuntu.com/ubuntu bionic/universe amd64 gcc-6-base amd64 6.4.0-17ubuntu1 [17.0 kB]</span><br><span class="line">获取:3 http://gb.archive.ubuntu.com/ubuntu bionic/main amd64 libisl19 amd64 0.19-1 [551 kB]</span><br><span class="line">获取:4 http://gb.archive.ubuntu.com/ubuntu bionic/universe amd64 cpp-6 amd64 6.4.0-17ubuntu1 [6,389 kB]</span><br><span class="line">获取:5 http://gb.archive.ubuntu.com/ubuntu bionic/universe amd64 libasan3 amd64 6.4.0-17ubuntu1 [313 kB]</span><br><span class="line">获取:6 http://gb.archive.ubuntu.com/ubuntu bionic/main amd64 gcc-7-base amd64 7.3.0-16ubuntu3 [18.8 kB]</span><br><span class="line">获取:7 http://gb.archive.ubuntu.com/ubuntu bionic/main amd64 libubsan0 amd64 7.3.0-16ubuntu3 [126 kB]</span><br><span class="line">获取:8 http://gb.archive.ubuntu.com/ubuntu bionic/main amd64 libcilkrts5 amd64 7.3.0-16ubuntu3 [42.5 kB]</span><br><span class="line">获取:9 http://gb.archive.ubuntu.com/ubuntu bionic/main amd64 libmpx2 amd64 8-20180414-1ubuntu2 [11.7 kB]</span><br><span class="line">获取:10 http://gb.archive.ubuntu.com/ubuntu bionic/universe amd64 libgcc-6-dev amd64 6.4.0-17ubuntu1 [2,305 kB]</span><br><span class="line">获取:11 http://gb.archive.ubuntu.com/ubuntu bionic/universe amd64 gcc-6 amd64 6.4.0-17ubuntu1 [7,054 kB]</span><br><span class="line">获取:12 http://gb.archive.ubuntu.com/ubuntu bionic/universe amd64 libstdc++-6-dev amd64 6.4.0-17ubuntu1 [1,413 kB]</span><br><span class="line">获取:13 http://gb.archive.ubuntu.com/ubuntu bionic/universe amd64 g++-6 amd64 6.4.0-17ubuntu1 [7,203 kB]                                                                                    </span><br><span class="line">已下载 25.5 MB，耗时 7秒 (3,559 kB/s)                                                                                                                                                       </span><br><span class="line">正在选中未选择的软件包 gcc-8-base:amd64。</span><br><span class="line">(正在读取数据库 ... 系统当前共安装有 216940 个文件和目录。)</span><br><span class="line">准备解压 .../00-gcc-8-base_8-20180414-1ubuntu2_amd64.deb  ...</span><br><span class="line">正在解压 gcc-8-base:amd64 (8-20180414-1ubuntu2) ...</span><br><span class="line">正在选中未选择的软件包 gcc-6-base:amd64。</span><br><span class="line">准备解压 .../01-gcc-6-base_6.4.0-17ubuntu1_amd64.deb  ...</span><br><span class="line">正在解压 gcc-6-base:amd64 (6.4.0-17ubuntu1) ...</span><br><span class="line">正在选中未选择的软件包 libisl19:amd64。</span><br><span class="line">准备解压 .../02-libisl19_0.19-1_amd64.deb  ...</span><br><span class="line">正在解压 libisl19:amd64 (0.19-1) ...</span><br><span class="line">正在选中未选择的软件包 cpp-6。</span><br><span class="line">准备解压 .../03-cpp-6_6.4.0-17ubuntu1_amd64.deb  ...</span><br><span class="line">正在解压 cpp-6 (6.4.0-17ubuntu1) ...</span><br><span class="line">正在选中未选择的软件包 libasan3:amd64。</span><br><span class="line">准备解压 .../04-libasan3_6.4.0-17ubuntu1_amd64.deb  ...</span><br><span class="line">正在解压 libasan3:amd64 (6.4.0-17ubuntu1) ...</span><br><span class="line">正在选中未选择的软件包 gcc-7-base:amd64。</span><br><span class="line">准备解压 .../05-gcc-7-base_7.3.0-16ubuntu3_amd64.deb  ...</span><br><span class="line">正在解压 gcc-7-base:amd64 (7.3.0-16ubuntu3) ...</span><br><span class="line">正在选中未选择的软件包 libubsan0:amd64。</span><br><span class="line">准备解压 .../06-libubsan0_7.3.0-16ubuntu3_amd64.deb  ...</span><br><span class="line">正在解压 libubsan0:amd64 (7.3.0-16ubuntu3) ...</span><br><span class="line">正在选中未选择的软件包 libcilkrts5:amd64。</span><br><span class="line">准备解压 .../07-libcilkrts5_7.3.0-16ubuntu3_amd64.deb  ...</span><br><span class="line">正在解压 libcilkrts5:amd64 (7.3.0-16ubuntu3) ...</span><br><span class="line">正在选中未选择的软件包 libmpx2:amd64。</span><br><span class="line">准备解压 .../08-libmpx2_8-20180414-1ubuntu2_amd64.deb  ...</span><br><span class="line">正在解压 libmpx2:amd64 (8-20180414-1ubuntu2) ...</span><br><span class="line">正在选中未选择的软件包 libgcc-6-dev:amd64。</span><br><span class="line">准备解压 .../09-libgcc-6-dev_6.4.0-17ubuntu1_amd64.deb  ...</span><br><span class="line">正在解压 libgcc-6-dev:amd64 (6.4.0-17ubuntu1) ...</span><br><span class="line">正在选中未选择的软件包 gcc-6。</span><br><span class="line">准备解压 .../10-gcc-6_6.4.0-17ubuntu1_amd64.deb  ...</span><br><span class="line">正在解压 gcc-6 (6.4.0-17ubuntu1) ...</span><br><span class="line">正在选中未选择的软件包 libstdc++-6-dev:amd64。</span><br><span class="line">准备解压 .../11-libstdc++-6-dev_6.4.0-17ubuntu1_amd64.deb  ...</span><br><span class="line">正在解压 libstdc++-6-dev:amd64 (6.4.0-17ubuntu1) ...</span><br><span class="line">正在选中未选择的软件包 g++-6。</span><br><span class="line">准备解压 .../12-g++-6_6.4.0-17ubuntu1_amd64.deb  ...</span><br><span class="line">正在解压 g++-6 (6.4.0-17ubuntu1) ...</span><br><span class="line">正在设置 gcc-7-base:amd64 (7.3.0-16ubuntu3) ...</span><br><span class="line">正在设置 gcc-6-base:amd64 (6.4.0-17ubuntu1) ...</span><br><span class="line">正在设置 gcc-8-base:amd64 (8-20180414-1ubuntu2) ...</span><br><span class="line">正在设置 libmpx2:amd64 (8-20180414-1ubuntu2) ...</span><br><span class="line">正在设置 libisl19:amd64 (0.19-1) ...</span><br><span class="line">正在设置 libcilkrts5:amd64 (7.3.0-16ubuntu3) ...</span><br><span class="line">正在设置 libubsan0:amd64 (7.3.0-16ubuntu3) ...</span><br><span class="line">正在设置 libasan3:amd64 (6.4.0-17ubuntu1) ...</span><br><span class="line">正在设置 cpp-6 (6.4.0-17ubuntu1) ...</span><br><span class="line">正在设置 libgcc-6-dev:amd64 (6.4.0-17ubuntu1) ...</span><br><span class="line">正在设置 libstdc++-6-dev:amd64 (6.4.0-17ubuntu1) ...</span><br><span class="line">正在设置 gcc-6 (6.4.0-17ubuntu1) ...</span><br><span class="line">正在设置 g++-6 (6.4.0-17ubuntu1) ...</span><br><span class="line">正在处理用于 libc-bin (2.35-0ubuntu3.1) 的触发器 ...</span><br><span class="line">正在处理用于 man-db (2.10.2-1) 的触发器 ...</span><br></pre></td></tr></table></figure><p>将g++-6设定为默认编译器</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">root@node02:/home/hjh# sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-6 6</span><br><span class="line">update-alternatives: 使用 /usr/bin/gcc-6 来在自动模式中提供 /usr/bin/gcc (gcc)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>安装libgfortran3</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">root@node02:/home/hjh# sudo apt install libgfortran3</span><br></pre></td></tr></table></figure><p>参考资料：</p><ul><li><a href="https://blog.csdn.net/weixin_46390030/article/details/125800938">Ubuntu 22.04 LTS 下的libgfortran.so.3安装</a></li><li><a href="http://www.taodudu.cc/news/show-3389833.html?action=onClick">ubuntu 20.04 kylin gpg: 从公钥服务器接收失败：Server indicated a failure 解决方法</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Dev&amp;Ops </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Server </tag>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>集群节点文件共享-Node02更新系统</title>
      <link href="/blog/devops/node02-nis-handlebook/"/>
      <url>/blog/devops/node02-nis-handlebook/</url>
      
        <content type="html"><![CDATA[<p><code>node2</code>的系统崩溃了，需要安装新系统，决定更换成<code>ubuntu</code>，但是替换后的兼容稳定性，运算效率等都是未知数，并且我没有配置集群的经验。这次使用<code>node02</code>实践一下，争取可以形成生产力 </p><div class="note primary flat"><p>配置和选型</p><ul><li>集群系统： node00, node01, node03, node04 <code>CentOS release 6.7 (Final)</code></li><li>node02 新系统：ubuntu 20.04 LTS （待加入集群）</li><li>权限：超级用户 </li><li>集群主节点<code>node00</code>: 共享主目录，磁盘挂载节点</li><li>登录节点<code>node01</code>: 登录节点，NIS通信服务器</li><li>SSD Samsung 870 EVO SATA 2.5  1TB</li></ul></div><h3 id="系统安装和配置"><a href="#系统安装和配置" class="headerlink" title="系统安装和配置"></a>系统安装和配置</h3><p>这里准备了官网下载的<code>ubuntu 20.04 LTS</code>桌面版，使用<code>rufus-3.18.1877</code>制作U盘启动:&lt;点击查看大图&gt;<br><img src=http://home.ustc.edu.cn/~hjh18305/filzoo/refus-opt.JPG style="height:100px"></p><p>插入<code>node02</code>，开机，按<code>DEL</code>进入启动选项-&gt; boot -&gt;U盘启动。<br>安装系统，选择新系统安装，覆盖掉原来的引导选项，分区大小如下</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">100G  /</span><br><span class="line">100G   [SWAP]</span><br><span class="line">4G    /boot</span><br><span class="line">剩下700+G  /home </span><br></pre></td></tr></table></figure><p>这些信息回被写入<code>/etc/fstab</code>,你也可以使用<code>lsblk</code>命令查看磁盘的分区。</p><p>系统初始化登录时填写机器名为<code>node02</code>,这个操作实际上是将其写入<code>/etc/hostname</code>,这个别名设置会在后续节点通讯的别名设置中用到。<br>初始的高级权限用户可以是<code>lirui</code>，并设置密码；进入系统以后，为<code>root</code>账户设置密码，创建用户，安装<code>vim</code>：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">lirui@node02:~ $ sudo passwd root</span><br><span class="line">&lt;输入新密码&gt;</span><br><span class="line">&lt;重复输入新密码&gt;</span><br><span class="line">密码已更新</span><br><span class="line"></span><br><span class="line">&lt;切换root用户&gt;</span><br><span class="line">lirui@node02:~ $ su root </span><br><span class="line">&lt;输入密码&gt;</span><br><span class="line">root@node02:/home/lirui #</span><br><span class="line"></span><br><span class="line">&lt;创建用户`hjh`，本次不需要大量新建用户，这里仅创建我的账户用来做管理，权限是一般权限&gt;</span><br><span class="line">root@node02:/home/lirui # useradd -u 516 hjh -c &#x27;jiheng hu&#x27; -m -s /bin/bash  &lt;UID最好和其他节点的id一致&gt;</span><br><span class="line">root@node02:/home/lirui # groupmod -g 516 hjh</span><br><span class="line">root@node02:/home/lirui # cat /etc/passwd</span><br><span class="line">······</span><br><span class="line">hjh:x:516:1001:jiheng hu:/home/hjh:/bin/bash</span><br><span class="line">······</span><br><span class="line"></span><br><span class="line">&lt;安装`vim`&gt;</span><br><span class="line">root@node02:/ # apt update</span><br><span class="line">root@node02:/ # apt install vim</span><br></pre></td></tr></table></figure><h3 id="网络设置"><a href="#网络设置" class="headerlink" title="网络设置"></a>网络设置</h3><p>按照目前的网络架构，一个网卡<code>enp6s0</code>连入校园网，具有公网IP地址；另一个网卡<code>enp7s0</code>链接局域网路由器，其包括node00~node05以及两个磁盘阵列共八台机器组成的局域网。<br>安装<code>net-tools</code>并查看网络信息：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">lirui@node02:~/桌面$ sudo apt update</span><br><span class="line">lirui@node02:~/桌面$ sudo apt install net-tools</span><br><span class="line">lirui@node02:~/桌面$ ifconfig </span><br><span class="line">enp6s0: flags=4163&lt;UP,BROADCAST,RUNNING,MULTICAST&gt;  mtu 1500</span><br><span class="line">        inet 222.146.88.88  netmask 255.255.255.0  broadcast 222.146.88.255</span><br><span class="line">        ······</span><br><span class="line"></span><br><span class="line">enp7s0: flags=4163&lt;UP,BROADCAST,RUNNING,MULTICAST&gt;  mtu 1500</span><br><span class="line">        inet &lt;局域网未连接-乱码&gt;  netmask &lt;局域网未连接-乱码&gt;  broadcast &lt;局域网未连接-乱码&gt; </span><br><span class="line">        ······   </span><br><span class="line"></span><br><span class="line">lo: flags=73&lt;UP,LOOPBACK,RUNNING&gt;  mtu 65536</span><br><span class="line">        inet 127.0.0.1  netmask 255.0.0.0</span><br><span class="line">        ······</span><br></pre></td></tr></table></figure><p>可以看到，<code>enp6s0</code>已自动获取公网IP <code>222.146.88.88</code> &lt;这里为了安全，我虚构了IP&gt;。<code>enp7s0</code>则是无法连接状态。此时，需要配置网络和固定公网IP和局域网IP，直接在桌面上打开网络设置：</p><ul><li><code>enp6s0</code>配置<br>直接把自动获取的ip地址进行固定即可，更换ip会导致联网失败：</li></ul><table><thead><tr><th align="left">IPv4方式</th><th align="left">地址</th><th align="left">子网掩码</th><th align="left">网关&lt;ip末字段改成254即可&gt;</th><th align="left">DNS服务器&lt;科大使用的DNS服务器&gt;</th></tr></thead><tbody><tr><td align="left">手动</td><td align="left">222.146.88.88</td><td align="left">255.255.255.0</td><td align="left">222.146.88.254</td><td align="left">202.38.64.56, 202.38.64.17</td></tr></tbody></table><ul><li><code>enp7s0</code>配置<br>这个网卡连接局域网，按照集群结构，node02节点的局域网ip为<code>192.168.1.102</code>&lt;这个是本节点机器的网络身份，各节点通过在<code>/etc/hosts</code>进行别名定义来使用别名互相访问&gt;：</li></ul><table><thead><tr><th align="left">IPv4方式</th><th align="left">地址</th><th align="left">子网掩码</th><th align="left">网关</th><th align="left">DNS服务器</th></tr></thead><tbody><tr><td align="left">手动</td><td align="left">192.168.1.102</td><td align="left">255.255.255.0</td><td align="left">192.168.1.1</td><td align="left">192.168.1.1</td></tr></tbody></table><p>这样网络就设置好了，使用<code>ifconfig</code>查看：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">enp6s0: flags=4163&lt;UP,BROADCAST,RUNNING,MULTICAST&gt;  mtu 1500</span><br><span class="line">        inet 222.146.88.88  netmask 255.255.255.0  broadcast 222.146.88.255</span><br><span class="line">        ······</span><br><span class="line"></span><br><span class="line">enp7s0: flags=4163&lt;UP,BROADCAST,RUNNING,MULTICAST&gt;  mtu 1500</span><br><span class="line">        inet 192.168.1.102  netmask 255.255.255.0  broadcast 192.168.1.255</span><br><span class="line">        ······</span><br><span class="line"></span><br><span class="line">lo: flags=73&lt;UP,LOOPBACK,RUNNING&gt;  mtu 65536</span><br><span class="line">        inet 127.0.0.1  netmask 255.0.0.0</span><br><span class="line">        ······</span><br></pre></td></tr></table></figure><p>或者，此处的配置也可以在<code>/etc/netplan/01-network-manager-all.yaml</code>中进行修改并使用<code>sudo netplan apply</code>命令生效。</p><h3 id="开启远程服务"><a href="#开启远程服务" class="headerlink" title="开启远程服务"></a>开启远程服务</h3><p>安装<code>openssh</code>服务：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">root@node02:/etc# apt install ssh</span><br><span class="line">&lt;远程服务会默认开启，并且开机自启动&gt;</span><br><span class="line">查看ssh服务状态，发现是active的状态：</span><br><span class="line">root@node02:/etc# service ssh status</span><br><span class="line">● ssh.service - OpenBSD Secure Shell server</span><br><span class="line">    Loaded: loaded (/lib/systemd/system/ssh.service; enabled; vendor preset: enabled)</span><br><span class="line">    Active: active (running) since Sat 2023-06-17 21:54:34 CST; 13h ago</span><br><span class="line">    ······</span><br><span class="line">&lt;远程访问记录&gt;</span><br><span class="line">6月 17 22:01:10 node02 sshd[11139]: Accepted password for hjh from 192.168.1.101 port 59088 ssh2</span><br><span class="line">6月 17 22:01:10 node02 sshd[11139]: pam_unix(sshd:session): session opened for user hjh(uid=516) by (uid=0)</span><br><span class="line"></span><br><span class="line">root@node02:/etc# service ssh [restart][stop]</span><br></pre></td></tr></table></figure><p>可以使用<code>ssh user@ip</code>来访问其他服务器。节点间登录可以使用局域网ip和公网ip，但是外部登录必须使用公网ip：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;访问node01&gt;</span><br><span class="line">[hjh@node02] ~ $ssh hjh@192.168.1.101</span><br><span class="line"></span><br><span class="line">&lt;通过node01访回&gt;</span><br><span class="line">[hjh@node01] ~ $ssh hjh@192.168.1.102</span><br><span class="line"></span><br><span class="line">&lt;通过XSHELL等工具远程登录必须使用公网IP&gt;</span><br><span class="line">Xshell 7 (Build 0122)</span><br><span class="line">[C:\~]$ ssh hjh@222.146.88.88</span><br></pre></td></tr></table></figure><p>集群中各节点在局域网中都有自己的ip地址，如<code>192.168.1.101</code>，可以使用ssh命令登录到对应的ip来实现切换。但是节点间每次切换都需要输入ip，较为不方便，所以需要设置别名访问。</p><h3 id="节点别名通信"><a href="#节点别名通信" class="headerlink" title="节点别名通信"></a>节点别名通信</h3><p>设置别名的原理就是，每个节点都保留一个清单，约定好每台机器的别名和对应的ip地址，做法如下：<br>每台机器给自己取号名字，放在<code>/etc/hostname</code>中，比如<code>node01</code>、<code>node02</code>、<code>node05</code>、<code>dataserver1</code>，这个不是必须，但是决定了当前节点命令行的显示，如<code>[hjh@node02]</code>，<code>[rootrui@node02]</code>，<code>[user@dataserver2] </code>;<br>每台机器需要知道其他机器的别名，设置如下的别名列表，并各自保存在<code>/etc/hosts</code>：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[hjh@node02] ~ $ cat /etc/hosts</span><br><span class="line">192.168.1.100 node00</span><br><span class="line">192.168.1.101 node01</span><br><span class="line">192.168.1.102 node02</span><br><span class="line">192.168.1.103 node03</span><br><span class="line">192.168.1.104 node04</span><br><span class="line">192.168.1.105 node05</span><br><span class="line">192.168.1.201 dataserver1</span><br><span class="line">192.168.1.106 dataserver2</span><br></pre></td></tr></table></figure><p>这个方法，你甚至可以将非局域网内的服务器加进去，进行别名访问。<br>从此，无论是互相登录，文件系统的共享，还是用户信息通讯，都可使用<code>node02</code>这样的别名来代替IP地址</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;访问node01&gt;</span><br><span class="line">[hjh@node02] ~ $ssh hjh@node01</span><br><span class="line"></span><br><span class="line">&lt;通过node01访回&gt;</span><br><span class="line">[hjh@node01] ~ $ssh node02  &lt;省略用户名的写法需要目标服务器有当前用户存在&gt;</span><br></pre></td></tr></table></figure><h3 id="文件系统挂载，节点磁盘共享"><a href="#文件系统挂载，节点磁盘共享" class="headerlink" title="文件系统挂载，节点磁盘共享"></a>文件系统挂载，节点磁盘共享</h3><p>这一步的目的是在<code>node02</code>上也可以访问替他节点的磁盘，需要设置文件共享系统。<br>安装<code>nfs-kernel-server</code>服务：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$su root</span><br><span class="line"># apt install nfs-kernel-server</span><br></pre></td></tr></table></figure><h4 id="作为客户端的文件共享设置"><a href="#作为客户端的文件共享设置" class="headerlink" title="作为客户端的文件共享设置"></a>作为客户端的文件共享设置</h4><p><code>nfs-kernel-server</code>服务也是S&#x2F;C模式，这里只使用客户端配置，需要挂载来自<code>node00</code>和磁盘阵列的文件系统。<br>超级权限编辑<code>/etc/fstab</code>，文末追加如下内容</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">### nfs mount infos</span><br><span class="line">dataserver1:/data00 /data00 nfs default 0 0</span><br><span class="line">dataserver2:/home/d1 /data04 nfs default 0 0</span><br><span class="line">node00:/data01 /data01 nfs default 0 0</span><br><span class="line">node00:/data02 /data02 nfs default 0 0</span><br><span class="line">node00:/data03 /data03 nfs default 0 0</span><br></pre></td></tr></table></figure><p>这里计划挂载了两个磁盘阵列和三个来自node00的磁盘。<br>创建挂载点<code>sudo mkdir /data00 /data01 /data02 /data03 /data04</code>。<br>使用命令<code>sudo mount -a</code>生效，查看磁盘挂载情况：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$df -h</span><br><span class="line">文件系统              大小  已用  可用 已用% 挂载点</span><br><span class="line">/dev/sda3             375G   11G  346G    3% /</span><br><span class="line">/dev/sda1             9.3G  187M  8.7G    3% /boot</span><br><span class="line">node00:/data03        3.6T  3.0T  465G   87% /data03</span><br><span class="line">node00:/data01         11T  9.7T   88G  100% /data01</span><br><span class="line">node00:/data02        3.6T  3.3T  175G   95% /data02</span><br><span class="line">dataserver1:/data00   131T  121T  3.7T   98% /data00</span><br><span class="line">dataserver2:/home/d1  328T  244T   84T   75% /data04</span><br></pre></td></tr></table></figure><h4 id="作为服务器的文件共享设置"><a href="#作为服务器的文件共享设置" class="headerlink" title="作为服务器的文件共享设置"></a>作为服务器的文件共享设置</h4><p>本实践只涉及到挂载其他节点的共享文件系统，如果需要将本节点的文件系统共享出去，需要做如下设置：<br>修改exportfs配置文件<code>/etc/exports</code>，这里使用dataserver2节点（磁盘阵列）作为展示：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">user@user-RS540-E9-RS36-E:~$ cat /etc/exports </span><br><span class="line">······</span><br><span class="line">/home/d1 192.168.1.1/24(rw,no_root_squash,async,no_subtree_check)</span><br></pre></td></tr></table></figure><p>这里的意思是将<code>dataserver2</code>节点挂载在<code>/home/d1</code>下的300TB磁盘阵列共享出去，后面是网关&#x2F;掩模(权限设置)。<br>使用<code>sudo exportfs -ra</code>命令执行生效，即可用上述的方法在其他节点挂载这个共享资源。<br>详细可以参考<a href="/2020/12/24/research/data04-nfs-mountage">从零开始挂载磁盘阵列</a>的操作实践。</p><p><strong><span style="color:red">注意：以下关于NIS的内容已经不再适用，请移步<a href="../nis-config-node-core">集群节点用户系统同步-NIS</a>处查阅。</span>— 2023-11-18</strong></p><div class="note danger flat"><p>以下内容可以忽略</p><h3 id="NIS用户同步"><a href="#NIS用户同步" class="headerlink" title="NIS用户同步"></a>NIS用户同步</h3><p>在完成集群节点间的通信和<code>/home</code>主目录共享以后，发现为在本节点（<code>node02</code>）上注册的用户，无法通过其他节点登录进来，或者无法再本节点切换到该用户下：<br><code>报错： su: 用户 qyliu 不存在</code><br>这是因为，node02作为分子节点，虽然已经挂载了主节点node00的主目录，但是管理用户信息的如<code>/etc/passwd</code>等配置文件并没有同步，在node00下注册的用户无法登陆node02节点。<br>这里要使用NIS服务来进行用户信息的共享，使得宿主节点（<code>node00</code>）用户即使不存在子节点（如<code>node02</code>）的<code>/etc/passwd</code>文件信息上，也可以登录进来。<br>NIS是使用S&#x2F;C模式实现，也就是宿主和客户端模式：<br>NIS服务的应用结构分为NIS服务端和NIS客户端两种角色，NIS服务端集中维护用户的帐号信息（数据库）供NIS客户机进行查询，用户登录任何一台NIS客户端设备都会从NIS服务端进行登录认证，可实现用户帐号的集中管理。  </p><p>在本案例中，<code>node00</code>做我NIS服务器，<code>node01/node03/node04</code>都已经完成了NIS通信，所以仅对新加入的<code>node02</code>进行NIS客户端安装和配置，也就是客户端的配置。<br>别问我怎么知道大师兄怎么配置的，不听的百度+去老系统里面翻配置文件，才确定了他10年前的做法。</p><ol><li><p><code>node02</code>联科大校园网：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hjh@node02 /etc$ wget --post-data=<span class="string">&quot;name=user&amp;password=passwd&amp;cmd=set&amp;type=1&amp;exp=0&quot;</span> http://wlt.ustc.edu.cn/cgi-bin/ip -O -</span><br></pre></td></tr></table></figure></li><li><p>安装NIS相关服务：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hjh@node02 /etc$ su root</span><br><span class="line">root@node02 /etc<span class="comment"># apt install nis</span></span><br></pre></td></tr></table></figure><p>会弹出图形界面，此处作为客户端需要填写server的domian为 <code>lirui</code>，这个操作是新建<code>/etc/defaultdomian</code>并写入lirui。<br>如果没有图形界面弹出，则手动添加：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#echo lirui&gt;/etc/defaultdomain</span><br></pre></td></tr></table></figure><p>在<code>/etc/yp.conf</code> 中追加：<code>domain lirui server node01</code>:</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#echo domain lirui server node01&gt;&gt;/etc/yp.conf</span><br></pre></td></tr></table></figure></li></ol><p>修改<code>/etc/default/nis</code>，做如下修改：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># Are we a NIS server and if so what kind (values: false, slave, master)?</span><br><span class="line">NISSERVER=false</span><br><span class="line"># Are we a NIS client?</span><br><span class="line">NISCLIENT=true</span><br><span class="line"></span><br><span class="line"># NIS master server.  If this is configured on a slave server then ypinit</span><br><span class="line"># will be run each time NIS is started.</span><br><span class="line">NISMASTER=node01</span><br></pre></td></tr></table></figure><!-- 3. 安装`autofs`服务，我也不知道干啥的，可以发现师兄也安装了，但是配置文件没有任何自定义改动。--><ol start="3"><li>做如下修改：<br>备份<code>/etc/nsswitch.conf</code>，修改内容如下：<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#passwd:         files systemd</span><br><span class="line">passwd:         files nis</span><br><span class="line">#group:          files systemd</span><br><span class="line">group:          files nis</span><br><span class="line">#shadow:         files</span><br><span class="line">shadow:         files nis</span><br><span class="line">gshadow:        files</span><br><span class="line"></span><br><span class="line">#hosts:          files mdns4_minimal [NOTFOUND=return] dns</span><br><span class="line">hosts:          files dns nis</span><br></pre></td></tr></table></figure></li></ol><p>重启<code>ypserv</code>服务：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># service ypbind restart</span><br></pre></td></tr></table></figure><p>发现<code>qyliu</code>已经可以登录<code>node02</code>了，<br>如果在<code>node01</code>上<code>ssh node02</code>提示 NASTY警告，删除<code>/home/qyliu/.ssh/known_hosts</code>文件中的<code>node02</code>的过期指纹，重新登录会提示保留指纹，ok</p><h3 id="主目录共享"><a href="#主目录共享" class="headerlink" title="主目录共享"></a>主目录共享</h3><p>登录<code>node02</code>以后会提示找不到<code>/home/qyliu</code> 主目录，因为<code>node02</code>挂载了本地磁盘分区作为<code>/home</code>目录：<br><code>df -h</code> 查看挂载信息：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/dev/sdb3             1.9G  251M  1.5G   15% /boot</span><br><span class="line">/dev/sdb4             783G  183M  743G    1% /home</span><br><span class="line">dataserver1:/data00   131T  121T  3.7T   98% /data00</span><br><span class="line">dataserver2:/home/d1  328T  242T   86T   74% /data04</span><br><span class="line">node00:/data01         11T  9.7T   88G  100% /data01</span><br><span class="line">node00:/data02        3.6T  3.3T  175G   95% /data02</span><br><span class="line">node00:/data03        3.6T  3.0T  465G   87% /data03</span><br></pre></td></tr></table></figure><p>这时需要共享主目录操作，超级权限编辑<code>/etc/fstab</code></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">······</span><br><span class="line">&lt;注释掉本地/home挂载点&gt;</span><br><span class="line"># /home was on /dev/sdb4 during installation</span><br><span class="line">#UUID=e47e7003-f0ef-49a3-88c0-6f422c8c430a /home           ext4    defaults        0       2</span><br><span class="line">······</span><br><span class="line">&lt;挂载共享的文件系统作为/home&gt;</span><br><span class="line">node00:/home /home           nfs    defaults        0       0</span><br></pre></td></tr></table></figure><p>命令行执行<code>sudo mount -a</code></p><p><code>df -h</code> 发现已经挂载了<code>node00:/home</code> :</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/dev/sdb3             1.9G  251M  1.5G   15% /boot</span><br><span class="line">node00:/home           74G   29G   42G   41% /home</span><br><span class="line">dataserver1:/data00   131T  121T  3.7T   98% /data00</span><br><span class="line">dataserver2:/home/d1  328T  242T   86T   74% /data04</span><br><span class="line">node00:/data01         11T  9.7T   88G  100% /data01</span><br><span class="line">node00:/data02        3.6T  3.3T  175G   95% /data02</span><br><span class="line">node00:/data03        3.6T  3.0T  465G   87% /data03</span><br></pre></td></tr></table></figure><p>登出用户，重新进入<code>node02</code></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[qyliu@node01] ~ $ ssh node02</span><br><span class="line">[qyliu@node02] ~ $</span><br></pre></td></tr></table></figure><p>发现<code>qyliu</code>在<code>node02</code>下面可以直接进入<code>node01</code>的主目录，实际上都是<code>node00:/home</code>的内容，这些节点都会对其同步修改。</p><p>至此，已经全部完成了节点的文件挂载、共享和用户信息通信。</p></div><h3 id="生产环境"><a href="#生产环境" class="headerlink" title="生产环境"></a>生产环境</h3><p>安装<code>netcdf</code>，<code>hdf5-helpers</code>，<code>NCL</code>：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># apt install netcdf-bin</span><br><span class="line"># apt install hdf5-helpers</span><br><span class="line"># apt install ncl-ncarg</span><br></pre></td></tr></table></figure><div class="note warning flat"><p>以下内容可以忽略</p><p>使用的NCL来自于node01 用户主目录下的NCL，直接运行会报错，提示共享出问题，缺少SSL相关依赖<code>libssl.so.10</code>：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[qyliu@node02] ~ $which ncl</span><br><span class="line">/home/hjh/ncl/bin/ncl</span><br><span class="line"></span><br><span class="line">[qyliu@node02] ~ $ncl</span><br><span class="line">ncl: error while loading shared libraries: libssl.so.10: cannot open shared object file: No such file or directory</span><br></pre></td></tr></table></figure><p>查看 Linux Ubuntu 20.04LTS 自带 openssl 的版本为 1.1.1f：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[qyliu@node02] ~ $openssl </span><br><span class="line">OpenSSL&gt; version</span><br><span class="line">OpenSSL 1.1.1f  31 Mar 2020</span><br></pre></td></tr></table></figure><p>下载安装 <code>libssl-dev</code>即可解决 (最简单推荐此方法，不会对系统本身依赖openssl产生任何影响)</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">root@node02:/home/hjh# apt install libssl-dev</span><br></pre></td></tr></table></figure></div><h3 id="踩坑"><a href="#踩坑" class="headerlink" title="踩坑"></a>踩坑</h3><ol><li><p>在没有设置好网络的情况下，卸载了本地&#x2F;home, 远程修改了<code>/etc/netplan/0*.xml</code>网络配置文件，导致网络中断，无法共享远程&#x2F;home，本地也无法登录桌面<br>解决办法是登录界面按<code>ALT+CTRL+F2</code>进如命令行模式，挂载本地的<code>/home</code>,即可登录本地，进一步设好网络。<br>教训：一定要先设置好网络再进行各项操作，远程不要修改网络相关设置。</p></li><li><p>完成最后一步，在修改<code>libssl.so.10</code>依赖时，系统崩了，之前就各种提示内核转储，这下彻底登不上了，从安装系统开始。<br>经验：系统坏了没办法，我也不会修复，找新蓝科的来试图修复，连recovery模式都进不去。我自己重装了系统，避免以后爆雷，我自己安装的系统十分顺畅。</p></li></ol><div class="note info flat"><p>参考资源<br>    - <a href="https://blog.csdn.net/guyongqiangx/article/details/70473854">基于Ubuntu 12.04搭建NIS Slave服务</a><br>    - <a href="https://blog.csdn.net/u010438035/article/details/128423024">集群并行环境配置——NIS服务配置</a><br>    - <a href="https://blog.csdn.net/kongxx/article/details/1895377">在Ubuntu上配置NIS帐号</a><br>    - <a href="https://blog.csdn.net/qq120631157/article/details/130464937">【Linux缺失库】libssl.so.10</a><br>    - <a href="http://www.taodudu.cc/news/show-5442001.html?action=onClick">通过NIS+NFS实现&#x2F;home文件夹的共享（集群服务器共享文件节点）</a> (很详细，但是没用到)<br>    - <a href="https://www.cnblogs.com/linagcheng/p/16195927.html">NIS用户同步</a> (很详细，也没用到，学习一下NIS的原理)<br>    - <a href="/2020/12/24/research/data04-nfs-mountage">从零开始挂载磁盘阵列</a></p></div>]]></content>
      
      
      <categories>
          
          <category> Dev&amp;Ops </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Server </tag>
            
            <tag> Linux </tag>
            
            <tag> NIS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用Fortran读取NETCDF3文件</title>
      <link href="/blog/data-n-method/Fortran-netcdf/"/>
      <url>/blog/data-n-method/Fortran-netcdf/</url>
      
        <content type="html"><![CDATA[<p>使用gFortran 进行NetCDF文件的读取，需要netcdf库的支持。<br>检查netcdf是否可用：  </p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">ncdump</span>  </span><br></pre></td></tr></table></figure><p>如果提示不存在命令,就需要自己安装了，可以参考<a href="https://www2.mmm.ucar.edu/wrf/OnLineTutorial/compilation_tutorial.php">Compilling WRF</a>  安装步骤。<br><span style="color:red">Note: 此处介绍的安装方法可能不再适用，请参考最新的<a href="../rttov/rttov132-installlibs/">NETCDF&#x2F;HDF5安装说明</a> — 2023-11-15</span></p><ul><li>使用F90脚本读取NC文件<br>脚本内容如下，读取Hamawari-8 L2CLP文件的经纬度参数：</li></ul><figure class="highlight fortran"><table><tr><td class="code"><pre><span class="line"><span class="keyword">include</span> <span class="string">&#x27;netcdf.inc&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">!!main</span></span><br><span class="line"><span class="keyword">character</span>*<span class="number">100</span> fnameout,tmpf,h8file,geoh8 </span><br><span class="line"><span class="keyword">logical</span> alive</span><br><span class="line"></span><br><span class="line"><span class="comment">!!!!H-8 参数</span></span><br><span class="line"><span class="keyword">integer</span> iopen,ioquire,iovar,latid,lonid,ncid,varid,len_file,ioclose</span><br><span class="line"><span class="keyword">integer</span>, <span class="keyword">parameter</span> :: dize=<span class="number">2401</span><span class="comment">!定义维数</span></span><br><span class="line"><span class="keyword">real</span>*<span class="number">4</span> latitude(dize),longitude(dize)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">!!! open one h8-file for geolocation extraction</span></span><br><span class="line">geoh8=<span class="string">&quot;useful.h8/NC_H08_20150704_0820_FLDK.RealNC.nc&quot;</span> <span class="comment">!!非常普通的一个H8文件而已</span></span><br><span class="line">iopen=nf_open(<span class="built_in">trim</span>(<span class="built_in">adjustl</span>(geoh8)),nf_nowrite,ncid) <span class="comment">!打开netcdf文件，获取文件的ID号(ncid)</span></span><br><span class="line"><span class="keyword">if</span> (iopen .ne. <span class="number">0</span>) <span class="keyword">then</span></span><br><span class="line"><span class="built_in">print</span>*,<span class="string">&quot;H8-Geolocation extraction: invalid H8 file, open failure!&quot;</span></span><br><span class="line"><span class="keyword">stop</span></span><br><span class="line"><span class="keyword">end</span> <span class="keyword">if</span></span><br><span class="line"></span><br><span class="line">ioquire=nf_inq_varid (ncid, <span class="string">&#x27;latitude&#x27;</span>, latid) </span><br><span class="line">ioquire=ioquire+nf_inq_varid (ncid, <span class="string">&#x27;longitude&#x27;</span>, lonid) </span><br><span class="line"><span class="keyword">if</span> (ioquire .ne. <span class="number">0</span>) <span class="keyword">then</span></span><br><span class="line"><span class="built_in">print</span>*,<span class="string">&quot;H8-Geolocation extraction: variable not found in H8 file!&quot;</span></span><br><span class="line"><span class="keyword">stop</span></span><br><span class="line"><span class="keyword">end</span> <span class="keyword">if</span></span><br><span class="line"></span><br><span class="line">iovar=nf_get_var_real(ncid,latid,latitude)</span><br><span class="line">iovar=iovar+nf_get_var_real(ncid,lonid,longitude)</span><br><span class="line"><span class="keyword">if</span> (iovar .ne. <span class="number">0</span>) <span class="keyword">then</span></span><br><span class="line"><span class="built_in">print</span>*,<span class="string">&quot;H8-Geolocation extraction: variable extract failed!&quot;</span></span><br><span class="line"><span class="keyword">stop</span></span><br><span class="line"><span class="keyword">end</span> <span class="keyword">if</span></span><br><span class="line"> iopen=nf_close(ncid)</span><br><span class="line"><span class="keyword">end</span>  </span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>运行脚本  <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$</span><span class="language-bash">bash bash.sh <span class="comment">#编译</span></span></span><br><span class="line"><span class="meta prompt_">$</span><span class="language-bash">./read.h8.geo.exe</span></span><br></pre></td></tr></table></figure></li></ul><p>bash.sh文件内容如下：</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">gfortran read.h8.geo.f90 -I/home/hjh/netcdf/include  -o read.h8.geo.exe -L/home/hjh/netcdf/lib -lnetcdff -lnetcdf  </span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Data N&#39; Method </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Fortran </tag>
            
            <tag> NetCDF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用Fortran读写风云卫星HDF5文件</title>
      <link href="/blog/data-n-method/Fortran-HDF/"/>
      <url>/blog/data-n-method/Fortran-HDF/</url>
      
        <content type="html"><![CDATA[<p><span style="color:red">Note: 本节介绍的安装方法可能不再适用，请参考最新的<a href="../rttov/rttov132-installlibs/">NETCDF&#x2F;HDF5安装说明</a> — 2023-11-15</span></p><p>最近需要大批量读写一些FY卫星观测产品，决定使用fortran来读写，相对于NCL和Python会快不少，但是需要库依赖。<br>网上的指导很少，也不全面，自己参照着摸索了半天，也算可以满足使用要求了，决定记录一下。</p><div class="note primary no-icon flat"><ul><li>系统：CentOS release 6.7 (Final)  </li><li>权限：普通用户 </li><li>gfortran 版本： gcc version 4.4.7 20120313 (Red Hat 4.4.7-18) (GCC)   </li><li>HDF5版本: hdf5-1.8.22.tar.gz</li></ul></div><h3 id="HDF5依赖库"><a href="#HDF5依赖库" class="headerlink" title="HDF5依赖库"></a>HDF5依赖库</h3><p>和依赖NetCDF库来读取NC文件一样，Fortran在读取HDF文件时需要HDF库的支持。<br>HDFx库为诸多语言比如C,C++,Pyhton,Java,Fortran,IDL等提供HDF格式文件操作扩展。<br>这里选择的是HDF5库，官网下载 <a href="https://portal.hdfgroup.org/display/support/Downloads">https://portal.hdfgroup.org/display/support/Downloads</a>.<br>我选择的版本是<code>hdf5-1.8.22.tar.gz</code>。  </p><h3 id="安装HDF5"><a href="#安装HDF5" class="headerlink" title="安装HDF5"></a>安装HDF5</h3><p>1 从官网下载hdf5，将下载的tar.gz文件<code>/home/hjh/hdf5/</code><br>2 解压并进入解压文件夹  </p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[hjh@node01] /home/hjh/hdf5$ tar -xvf hdf5-1.8.22.tar.gz </span><br><span class="line">[hjh@node01] /home/hjh/hdf5$ <span class="built_in">cd</span> hdf5-1.8.22</span><br></pre></td></tr></table></figure><p>3 编译安装</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[hjh@node01] /home/hjh/hdf5/hdf5-1.8.22$ ./configure --prefix=/home/hjh/hdf5 --enable-fortran</span><br></pre></td></tr></table></figure><p>这里我们没有root权限，指定安装在自己的文件夹下<code>/home/hjh/hdf5</code>。<br>安装支持Fortran的依赖，<code>--enable-fortran</code>会编译生成h5fc编译命令并且会在<code>lib</code>文件夹下生成<code>xxFortran.a</code>等一些列Fortran扩展库。<br>默认情况下不会生成适用于Fortran的扩展，所以必须要要指定一下。  </p><p>继续执行：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ make</span><br><span class="line">$ make check   </span><br><span class="line">$ make install</span><br></pre></td></tr></table></figure><p>检查<code>/home/hjh/hdf5</code>内容<br>bin&#x2F; :  h5cc(C语言编译器)  h5dump (类似于ncdump)  h5fc (fortran编译器) 等<br>lib&#x2F; ： libhdf5_fortran.so libhdf5hl_fortran.la libhdf5hl_fortran.so.10  等<br>include&#x2F; ：hdf5.mod 等  </p><p>4 添加到环境变量<br><code>~/.bashrc </code>文件 添加以下内容  </p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#HDF5</span></span><br><span class="line"><span class="built_in">export</span> HDF5=/home/hjh/hdf5</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$HDF5</span>/bin:<span class="variable">$PATH</span></span><br></pre></td></tr></table></figure><p>保存退出，命令行运行 <code>source ~/.bashrc</code>  </p><p>尝试一下<code>h5dump,h5fc,h5cc,h5copy</code>等命令。  </p><h3 id="编译、运行"><a href="#编译、运行" class="headerlink" title="编译、运行"></a>编译、运行</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">gfortran read.fengyun3b.hdf5.f90  -I/home/hjh/hdf5/include -L/home/hjh/hdf5/lib -lhdf5_fortran</span><br></pre></td></tr></table></figure><p>默认生成<code>a.out</code>可执行文件,使用<code>-o executable.exe</code>来指定生成可执行文件的文件名。   </p><p>或者h5fc编译Fortran脚本，h5cc编译c脚本。  </p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">h5fc read.fengyun3b.hdf5.f90 </span><br></pre></td></tr></table></figure><p>后一种方式会同时生成<code>read.fengyun3b.hdf5.o</code>库文件和<code>a.out</code>可执行文件。<br>运行很简单：<code>./a.out</code>。</p><h3 id="示例：打开风云3B-MWRI数据并读取亮温"><a href="#示例：打开风云3B-MWRI数据并读取亮温" class="headerlink" title="示例：打开风云3B MWRI数据并读取亮温"></a>示例：打开风云3B MWRI数据并读取亮温</h3><p>获取风云卫星的HDF结构     </p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">h5dump -H  /data04/0/MWRI/L1_Recalibrated/FY3B/L1/ASCEND/2011/20110102/FY3B_MWRIA_GBAL_L1_20110102_0140_010KM_MS.HDF</span><br></pre></td></tr></table></figure><p>HDF文件结构如下，关注一些<code>DEM</code>地形和<code>EARTH_OBSERVE_BT_10_to_89GHz</code>亮温两个变量，同位于<code>calibration</code>组：</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">HDF5 &quot;/data04/0/MWRI/L1_Recalibrated/FY3B/L1/ASCEND/2011/20110102/FY3B_MWRIA_GBAL_L1_20110102_0140_010KM_MS.HDF&quot; &#123;</span><br><span class="line">   GROUP &quot;Calibration&quot; &#123;</span><br><span class="line">      DATASET &quot;DEM&quot; &#123;</span><br><span class="line">         DATATYPE  H5T_STD_I16LE</span><br><span class="line">         DATASPACE  SIMPLE &#123; ( 1826, 240 ) / ( 1826, 240 ) &#125;</span><br><span class="line"> ....</span><br><span class="line">  &#125;</span><br><span class="line">....</span><br><span class="line">   DATASET &quot;EARTH_OBSERVE_BT_10_to_89GHz&quot; &#123;</span><br><span class="line">         DATATYPE  H5T_STD_I16LE</span><br><span class="line">         DATASPACE  SIMPLE &#123; ( 10, 1826, 240 ) / ( 10, 1826, 240 ) &#125;</span><br><span class="line"> ....</span><br><span class="line">  &#125;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p>由于不同轨道的行数是不同的，所以需要用可变数组来读取我们需要的亮温等，并且根据打开的文件来确定数组的大小。</p><p>代码：<br><code>read.fengyun3b.hdf5.f90</code>    </p><figure class="highlight fortran"><table><tr><td class="code"><pre><span class="line">  <span class="keyword">USE</span> HDF5 <span class="comment">! This module contains all necessary modules </span></span><br><span class="line">  </span><br><span class="line">  <span class="keyword">CHARACTER</span> filename*<span class="number">100</span></span><br><span class="line">   </span><br><span class="line">  <span class="comment">! CHARACTER(LEN=8), PARAMETER :: filename = &quot;dsetf.h5&quot; ! File name</span></span><br><span class="line">  <span class="keyword">CHARACTER</span>(LEN=<span class="number">3</span>) dsetname      <span class="comment">! Dataset name </span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">INTEGER</span>(HID_T) :: file_id       <span class="comment">! File identifier  文件句柄</span></span><br><span class="line">  <span class="keyword">INTEGER</span>(HID_T) :: dset_id       <span class="comment">! Dataset identifier 变量句柄</span></span><br><span class="line">  <span class="keyword">INTEGER</span>(HID_T) :: grp_id        <span class="comment">! Dataset identifier  group句柄</span></span><br><span class="line">  <span class="keyword">INTEGER</span>(HID_T) :: dspace_id     <span class="comment">! Dataset identifier  只可意会，和维数和大小相关</span></span><br><span class="line">  <span class="keyword">INTEGER</span>      :: error       <span class="comment">! Error flag - success：0</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">INTEGER</span>(HID_T) :: dem_id  </span><br><span class="line">  <span class="keyword">INTEGER</span>, <span class="keyword">DIMENSION</span>(<span class="number">1826</span>,<span class="number">240</span>) :: DEM <span class="comment">! Data buffers 对于事先指导变量维数的可以直接声明</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">INTEGER</span>, <span class="keyword">DIMENSION</span>(:,:,:),<span class="keyword">allocatable</span> :: tb_out <span class="comment">! Data buffers  本例中对于大小不定的数据使用可变数组</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">INTEGER</span>(HSIZE_T), <span class="keyword">DIMENSION</span>(<span class="number">3</span>) :: tb_dims,maxdims</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">INTEGER</span>(HSIZE_T), <span class="keyword">DIMENSION</span>(<span class="number">2</span>) :: dem_dims</span><br><span class="line">  </span><br><span class="line">   <span class="comment">! folder=&quot;/data04/0/MWRI/L1_Recalibrated/FY3B/L1/ASCEND/2011/20110102/&quot;</span></span><br><span class="line">  filename=<span class="string">&quot;FY3B_MWRIA_GBAL_L1_20110102_0140_010KM_MS.HDF&quot;</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">CALL</span> h5open_f(error) <span class="comment">! Initialize FORTRAN interface.</span></span><br><span class="line"> </span><br><span class="line">  <span class="keyword">CALL</span> h5fopen_f (filename, H5F_ACC_RDWR_F, file_id, error) <span class="comment">! Open an existing file.</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">CALL</span> h5gopen_f (file_id, <span class="string">&quot;Calibration&quot;</span>, grp_id, error)  <span class="comment">! Open an existing group.</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">CALL</span> h5dopen_f(grp_id, <span class="string">&quot;EARTH_OBSERVE_BT_10_to_89GHz&quot;</span>, dset_id, error)  <span class="comment">!open dataset 就是变量</span></span><br><span class="line">   </span><br><span class="line">  <span class="comment">! Figure out the size of the EARTH_OBSERVE_BT_10_to_89GHz.</span></span><br><span class="line">  <span class="keyword">CALL</span> h5dget_space_f(dset_id,dspace_id,error)  <span class="comment">! Get the dataspace ID</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">! Get dims from dataspace</span></span><br><span class="line">  <span class="keyword">CALL</span> h5sget_simple_extent_dims_f(dspace_id, tb_dims, maxdims, error)   </span><br><span class="line"></span><br><span class="line">  <span class="comment">! Allocate memory for the array.</span></span><br><span class="line">  <span class="built_in">ALLOCATE</span>(tb_out(tb_dims(<span class="number">1</span>),tb_dims(<span class="number">2</span>),tb_dims(<span class="number">3</span>)))  </span><br><span class="line">  </span><br><span class="line">  <span class="comment">! Read the dataset. </span></span><br><span class="line">  <span class="keyword">CALL</span> h5dread_f(dset_id, H5T_NATIVE_INTEGER, tb_out, tb_dims, error)</span><br><span class="line"></span><br><span class="line">  <span class="comment">!! do something</span></span><br><span class="line">  <span class="built_in">PRINT</span>*,tb_out(<span class="number">1</span>,<span class="number">1</span>)*<span class="number">0.01</span>+<span class="number">327.68</span>  <span class="comment">!! record(short型) * scalefactor+ offset</span></span><br><span class="line"> </span><br><span class="line">  <span class="keyword">CALL</span> h5dclose_f(dset_id, error)   <span class="comment">! Close the dataset.</span></span><br><span class="line">  <span class="built_in">DEALLOCATE</span>(tb_out)  </span><br><span class="line">  </span><br><span class="line"><span class="comment">!! 读取 DEM数据，这个是固定已知大小的读取</span></span><br><span class="line">  <span class="keyword">CALL</span> h5dopen_f(grp_id, <span class="string">&quot;DEM&quot;</span>, dem_id, error)  <span class="comment">!open dem </span></span><br><span class="line"> </span><br><span class="line">  dem_dims=(/<span class="number">1826</span>,<span class="number">240</span>/)</span><br><span class="line">  <span class="keyword">CALL</span> h5dread_f(dem_id, H5T_NATIVE_INTEGER, DEM, dem_dims, error)  <span class="comment">! Read the dem</span></span><br><span class="line">  <span class="built_in">PRINT</span>*,DEM(<span class="number">1</span>,<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">  <span class="keyword">CALL</span> h5dclose_f(dem_id, error)   <span class="comment">! Close the dataset.</span></span><br><span class="line"></span><br><span class="line"><span class="comment">!!!!!</span></span><br><span class="line">  <span class="keyword">CALL</span> h5gclose_f(grp_id, error) <span class="comment">! Close the dataset.</span></span><br><span class="line">  <span class="keyword">CALL</span> h5fclose_f(file_id, error)  <span class="comment">! Close the file.</span></span><br><span class="line">  <span class="keyword">CALL</span> h5close_f(error)<span class="comment">! Close FORTRAN interface.</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">end</span> </span><br></pre></td></tr></table></figure><h3 id="写出HDF5文件"><a href="#写出HDF5文件" class="headerlink" title="写出HDF5文件"></a>写出HDF5文件</h3><p>主程序调用</p><figure class="highlight f90"><table><tr><td class="code"><pre><span class="line"><span class="keyword">integer</span>,<span class="keyword">parameter</span>:: nlat25=<span class="number">720</span>+<span class="number">1</span>, nlon25=<span class="number">1440</span>+<span class="number">1</span></span><br><span class="line"><span class="keyword">real</span>,<span class="keyword">dimension</span>(nlon25,nlat25,<span class="number">2</span>) :: grid25_tb89s</span><br><span class="line"><span class="keyword">character</span>  dsetname*<span class="number">20</span>, filein*<span class="number">80</span></span><br><span class="line"><span class="keyword">integer</span> retcode</span><br><span class="line">....</span><br><span class="line">dsetname = <span class="string">&quot;TB_89VH_GRID25&quot;</span></span><br><span class="line">filein=<span class="string">&quot;TBs/grid25_tb89s.&quot;</span>//yyyymmdd//<span class="string">&quot;.hdf5&quot;</span></span><br><span class="line"><span class="keyword">call</span> write_hdf5(filein,nlon25, nlat25, <span class="number">2</span>, grid25_tb89s, dsetname,retcode) </span><br><span class="line"></span><br><span class="line">....</span><br></pre></td></tr></table></figure><p>子程序如下：</p><figure class="highlight f90"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">SUBROUTINE</span></span> write_hdf5(filename,dim1, dim2,ch, dset_data, dsetname,retcode)</span><br><span class="line"></span><br><span class="line">      <span class="keyword">USE</span> HDF5   </span><br><span class="line">      <span class="keyword">IMPLICIT</span> <span class="keyword">NONE</span></span><br><span class="line">  <span class="keyword">Integer</span> :: dim1, dim2,ch</span><br><span class="line">      <span class="keyword">CHARACTER</span>(*):: filename</span><br><span class="line">      <span class="keyword">CHARACTER</span>(*):: dsetname <span class="comment">!= &quot;TB_89VH_GRID25&quot; ! Dataset name   </span></span><br><span class="line">      <span class="comment">! Identifiers</span></span><br><span class="line">      <span class="keyword">INTEGER</span>(HID_T) :: file_id       <span class="comment">! File identifier</span></span><br><span class="line">      <span class="comment">! INTEGER(HID_T) :: group_id      ! Group identifier</span></span><br><span class="line">      <span class="keyword">INTEGER</span>(HID_T) :: dset_id      <span class="comment">! Dataset 1 identifier</span></span><br><span class="line">      <span class="keyword">INTEGER</span>(HID_T) :: dspace_id    <span class="comment">! Dataspace 1 identifier</span></span><br><span class="line">  </span><br><span class="line">      <span class="comment">! FP array</span></span><br><span class="line">      <span class="keyword">INTEGER</span> :: rank ,retcode                <span class="comment">! Dataset rank</span></span><br><span class="line">      <span class="keyword">INTEGER</span>(HSIZE_T), <span class="keyword">DIMENSION</span>(<span class="number">3</span>) :: data_dims</span><br><span class="line">      <span class="keyword">REAL</span>, <span class="keyword">DIMENSION</span>(dim1,dim2,ch) :: dset_data   <span class="comment">! Data buffers</span></span><br><span class="line"> </span><br><span class="line">      <span class="keyword">INTEGER</span> :: error </span><br><span class="line"></span><br><span class="line">  <span class="comment">! =====================================================================</span></span><br><span class="line"> </span><br><span class="line">      <span class="comment">! Initialize the dset_data array </span></span><br><span class="line">      data_dims = (/dim1,dim2,ch/)</span><br><span class="line">      rank = <span class="number">3</span></span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">      <span class="comment">! Initialize Fortran interface</span></span><br><span class="line">      <span class="keyword">CALL</span> h5open_f(error)   </span><br><span class="line">      <span class="comment">! Create a new file</span></span><br><span class="line">      <span class="keyword">CALL</span> h5fcreate_f(<span class="built_in">trim</span>(<span class="built_in">adjustl</span>(filename)), H5F_ACC_TRUNC_F, file_id, error)</span><br><span class="line"> </span><br><span class="line">      <span class="keyword">CALL</span> h5screate_simple_f(rank, data_dims, dspace_id, error)</span><br><span class="line"></span><br><span class="line">      <span class="keyword">CALL</span> h5dcreate_f(file_id, <span class="built_in">trim</span>(<span class="built_in">adjustl</span>(dsetname)), H5T_NATIVE_REAL, dspace_id,dset_id, error)</span><br><span class="line"></span><br><span class="line">      <span class="keyword">CALL</span> h5dwrite_f(dset_id, H5T_NATIVE_REAL, dset_data, data_dims, error)</span><br><span class="line"></span><br><span class="line">      <span class="keyword">CALL</span> h5dclose_f(dset_id, error)</span><br><span class="line"></span><br><span class="line">      <span class="keyword">CALL</span> h5sclose_f(dspace_id, error)</span><br><span class="line">      </span><br><span class="line">     <span class="comment">! Close the file</span></span><br><span class="line">     <span class="keyword">CALL</span> h5fclose_f(file_id, error)</span><br><span class="line">     <span class="comment">! Close FORTRAN interface</span></span><br><span class="line">     <span class="keyword">CALL</span> h5close_f(error)</span><br><span class="line"> </span><br><span class="line"><span class="keyword">END</span> <span class="function"><span class="keyword">SUBROUTINE</span></span> write_hdf5</span><br></pre></td></tr></table></figure><hr><p>参考 ：<br>官网参考：<a href="https://portal.hdfgroup.org/display/HDF5/The+HDF5+API">https://portal.hdfgroup.org/display/HDF5/The+HDF5+API</a><br>安装指导 <a href="https://blog.csdn.net/weixin_39720807/article/details/116726332">https://blog.csdn.net/weixin_39720807/article/details/116726332</a><br>HDF5文档 <a href="https://support.hdfgroup.org/HDF5/doc/UG/HDF5_Users_Guide-Responsive%20HTML5/index.html">https://support.hdfgroup.org/HDF5/doc/UG/HDF5_Users_Guide-Responsive%20HTML5/index.html</a><br>如何读取大小不明的数据 <a href="https://stackoverflow.com/questions/35874881/reading-an-array-of-unknown-length-from-an-hdf-file-in-fortran">https://stackoverflow.com/questions/35874881/reading-an-array-of-unknown-length-from-an-hdf-file-in-fortran</a></p>]]></content>
      
      
      <categories>
          
          <category> Data N&#39; Method </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Fortran </tag>
            
            <tag> HDF5 </tag>
            
            <tag> Fengyun </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>野外林业调查记录和相关林业数据库</title>
      <link href="/blog/research/forestry-survey-forestgeo/"/>
      <url>/blog/research/forestry-survey-forestgeo/</url>
      
        <content type="html"><![CDATA[<blockquote><p>最近有幸跟随专业的林业部门去到几个林业调查的样地，地点是在皖南的歙县，林业资源丰富，山清水秀，文化底蕴浓厚，素有“徽商故里，东南邹鲁”的美誉。</p></blockquote><h3 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h3><p>歙县为山区县，林业资源丰富，林地占比在80%以上，树木品种丰富。据悉，安徽省的林地覆盖面积为30%左右，其中主要分布在大别山区和皖南山区。这些区的生物蓄积量丰富，但是也面临这林地保护和林火防控的巨大压力。<br>本次歙县及周边区县的林业调查开始于3月初，是全国性林业普查的一个局部，服务于国务院应急管理部第一次全国自然灾害综合风险普查。主要是对森林生物蓄积量和可燃物进行外业调查工作。<br>生物蓄积量，含水量的调研可以服务于各种植被、生态和火险模式，在植被生态遥感方面有巨大的应用价值。形成一套中长期可用的本国特有的森林生物数据库，对我们常用的参数化和查找表等方法来说意义重大。<br>安徽省本次的调研样方一共1700余个，针对不同的植被类型（阔落、针叶等）、龄组（幼、中、近、成熟、过熟）、郁闭度（低、中、高）、起源（人工林、自然林）、气候带、地形、优势种等要素进行组合设置样方。</p><img style="height:300px;" alt="林间开展工作" src="https://i.loli.net/2021/04/27/iObBpTgYjKSCkXx.png"><h3 id="两个样地"><a href="#两个样地" class="headerlink" title="两个样地"></a>两个样地</h3><p>本次学习去到了两个样地，如下<br><span style="color:orange;">#1 考坑，阔叶林</span></p><p>这是一个典型的小样地，标准的面积是1亩地&#x3D;666.67平米，边长的25.8米。这些尺寸都是水平面的投影，具体的山地上需要进行坡度换算<br>考坑样地的特点是阔叶林类型，地表有树木多为硬阔类型，地表有稀疏灌木，腐殖层约为5cm，蓄积量估计5~6m3&#x2F;亩。样地位于山路上方的山坡上，坡度约40度，攀爬需要借助四周的灌木。<br>小样地的样方布置有以下步骤：</p><ol><li>确定一个西南交点，打上标志杆；</li><li>使用罗盘仪等设备确定四条边，每天边长在水平面上的投影为25.8m。将位于四条边已外的大树做上标记，不计入统计范围；</li><li>设置小样方。小样方是相当于对本样地的取样，投影面积为2x2和3X3，一共五个，分别位于四个角（2x2田字形）和样地的最中心(3x3回字形)。位于四个角的小样方定点距离最近的样地交点距离为4.24m。</li></ol><p>对于乔木的统计方法如下：</p><ol><li>先对样地中的乔木（胸径大于5cm，盈握）进行统计，记录其胸径（1.3m），树种，树高。使用的工具有树高仪，胸径卷尺等。</li><li>确定样地优势种。</li><li>确定各个树种的平均胸径和树高。树高即该树种的平均胸径最接近的三棵树的树高平均值。</li><li>含水量测定，捡去地表的枯落物进行含水量测量。</li></ol><p>对于灌木，草本及腐殖质的统计方法如下：</p><ol><li>所有的统计在2X2小样方中进行；</li><li>田字格小样方中统计灌木（高度&gt;30cm）和草本等数量和种类；</li><li>田字格中的一个1x1的微样方用于收集腐殖质和枯落物（腐殖层一直到泥层为止）。收集为200g 腐殖质，200草本，500不同树木的凋落物。</li><li>实验室进行干重和含水以及成分的分析。</li></ol><p><span style="color:orange;">#2 芽塘下，常绿针叶林</span><br>芽塘下样地的特点是常绿针叶林，林下干净，灌木和草本较少，但是有很厚的松针沉积，坡度约40。样地设置及工作方式也是如上所述的。<br>另外，在林业调查中，对于森林连续性好的区域会开展大样地调研方案，样地大小为500X500平米，实际的工作量会更大。</p><img style="height:300px;" alt="小样方的设置（左：考坑 右：芽塘下）" src="https://i.loli.net/2021/04/27/hifBKq6OnaoV2Jy.png"><div style="width:28%;display:inline-block"><img alt="县城->考坑" src="http://home.ustc.edu.cn/~hjh18305/filzoo/track-shexian-kaokeng.gif"></div><div style="width:28%;display:inline-block"><img alt="考坑->芽塘下"  src="http://home.ustc.edu.cn/~hjh18305/filzoo/track-shexian-yatangxia.gif"></div><div style="width:40%;display:inline-block"><img alt="考坑阔叶林样地" src="https://i.loli.net/2021/04/27/nd9SkGiJZOQPeEH.png"><img alt="芽塘下针叶林样地" src="https://i.loli.net/2021/04/27/raX27BQS5PLMJgI.png"></div><p>本次林业普查由于样本点多，山区地形复杂，没有道路，林业调查是一份非常耗时耗力的艰苦工作。像一线的林业工作者致敬。<br>同行的有两个项目组的同龄人，有一个西南林业大学刚毕业的吉林小伙，他们跟随项目组在山里转了俩月了，期间还要去外地短期任务，实在辛苦。但是都是踏踏实实的朴实的年轻人。<br>林业普查获取到的一线的数据，有利于我们后续对于火灾模型和植被辐射建模等工作。这些工作致力于将卫星遥感的手段落地到森林防火和植被遥感中，进而省去了大量的人力物力，对于一些人力不可能到达的区域，遥感手段具有无可比拟的优势。<br>基本的模式开发和遥感结果的验证工作也离不开实测数据的支持，这也是为什么我们要和林业做更多跨界交流的必要性所在。今后希望能够在类似区域建立常态化的微波观测和气象观测基地，做科学一定不能脱离实践。</p><h3 id="开源数据集"><a href="#开源数据集" class="headerlink" title="开源数据集"></a>开源数据集</h3><h2 id="国际上有一些联合森林观测项目，会公开或者半公开当地森林资源的诸多参数，其工作原理大同小异，提供了大量可以作为研究对象的样地和地区森林参数。"><a href="#国际上有一些联合森林观测项目，会公开或者半公开当地森林资源的诸多参数，其工作原理大同小异，提供了大量可以作为研究对象的样地和地区森林参数。" class="headerlink" title="国际上有一些联合森林观测项目，会公开或者半公开当地森林资源的诸多参数，其工作原理大同小异，提供了大量可以作为研究对象的样地和地区森林参数。"></a>国际上有一些联合森林观测项目，会公开或者半公开当地森林资源的诸多参数，其工作原理大同小异，提供了大量可以作为研究对象的样地和地区森林参数。<br><a href="http://forest-observation-system.net/"><img src="https://i.loli.net/2021/04/27/DaXdYkALjlB3SHs.png" alt="Forest Observation System"></a><br><a href="https://forestgeo.si.edu/"><img src="https://i.loli.net/2021/04/27/AN4K8eED12l5viy.png" alt="ForestGeo"></a></h2><p>参考：</p><ol><li><a href="https://rec.ustc.edu.cn/share/bc58d2d0-a72e-11eb-b206-6ff87f2a123a">《中华人民共和国林业行业标准-森林植被分类、调查与制图规范》</a></li><li>国务院应急管理部官方网站</li></ol>]]></content>
      
      
      <categories>
          
          <category> Research </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Forestry </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LandEM Module 源码解析（三）- 介电常数计算</title>
      <link href="/blog/research/landem/resolve-landem-diel/"/>
      <url>/blog/research/landem/resolve-landem-diel/</url>
      
        <content type="html"><![CDATA[<h2 id="土壤介电常数的计算"><a href="#土壤介电常数的计算" class="headerlink" title="土壤介电常数的计算"></a>土壤介电常数的计算</h2><p>文献调研，大致有三种土壤介电常数混合模型，LandEM使用的是1985年版本的Dobson mixing model.<br>《Microwave Dielectric Behavior of Wet Soil-Part II: Dielectric Mixing Models》Dobson et al. 1985. IEEE TRANS.<br>先计算纯水的介电常数，Debye迟豫公式，采用的是Stogryn 1971 《Equations for Calculating the Dielectric Constant of Saline Water》</p><p>输入量</p><ul><li>freq：频率、t_soil：土壤温度</li><li>vmc：土壤湿度-volumetric moisture content(m^3&#x2F;m^3; dimensionless)</li><li>rhob：bulk volume density of the soil (1.18-1.12) ; 单位体积内的土壤重量<blockquote><p>这里的bulk volume density是堆积物的结构参数，也就是单位体积内的填充物的重量，单位一般是$g&#x2F;ml$<br>详见链接 <a class="btn-beautify pink" href="https://www.sciencedirect.com/topics/agricultural-and-biological-sciences/bulk-density"   title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a></p></blockquote></li><li>rhos：density of the solids (2.65 g.cm^3 for solid soil material) ;土壤中固体的物理密度</li><li>sand&#x2F;clay：sand&#x2F;clay fraction (sand + clay &#x3D; 1.0)</li></ul><p>除了Dobson方案外，还有 Wang and Schmugge (1980)，以及 Mironov et al. (2004)等的一系列模型。<br>SMOS soil moisture 采用的是Dobson before L2 V5.5；Mironov since L2 V5.5 (April 2012)<br>SMAP soil moisture 则是直接采用了 Mironov εG &#x3D; f(SM, TG, %clay) </p>]]></content>
      
      
      <categories>
          
          <category> Research </category>
          
      </categories>
      
      
        <tags>
            
            <tag> RTM </tag>
            
            <tag> CRTM </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LandEM Module 源码解析（二）- 辐射传输计算</title>
      <link href="/blog/research/landem/resolve-landem-Two_Stream_Solution/"/>
      <url>/blog/research/landem/resolve-landem-Two_Stream_Solution/</url>
      
        <content type="html"><![CDATA[<p>Two_Stream_Solution是模块中基于二流近似的辐射传输计算方案，根据介质的optical properties来计算上层的辐射亮度。</p><h2 id="辐射传输方程"><a href="#辐射传输方程" class="headerlink" title="辐射传输方程"></a>辐射传输方程</h2><p>首先，在平面平行（Plane-parallel）微波在均匀（symmetric）介质中，存在辐射传输方程（radiative transfer equation）如下：<br>$$<br>\begin{align}<br>\mu\frac{dI(\tau,\mu)}{d\tau}&#x3D;I(\tau,\mu)-\frac{\omega(\tau)}{2}\int_{-1}^1{P_s(\tau,\mu,\mu’)I(\tau,\mu’)d\mu’}-[1-\omega(\tau)]B(T)<br>\end{align}<br>$$</p><p>首先是公式左边项，也就是辐射传输到$\tau$处的辐亮度变化量。其中，$\tau$可以理解成深度，最顶上等于0，最底层等于1。$\mu&#x3D;\cos(\theta)$带来的是入射角信息。</p><p>公式右边的第一项的实际的$\tau$处的辐亮度。<br>第二项是散射项，是一种消光作用，所以是负值。$\omega(\tau)$是单次散射反照率（Single Scattering Albedo）,表征的每次散射相对于入射辐射的比值，是$\tau$的函数。<br>单次散射反照率并非指的是只进行一次散射，相反，散射光还会继续在不同的方向上继续与介质中的散射体发生二次散射，依次类推。但是每次散射都遵循$\omega$这个比值。<br>散射项中的$\omega*I(\tau,\mu’)$指的是在散射中，散射光的方向是$\mu’&#x3D;\cos(theta’)$,乘以$\omega$得到对应的强度。对$\cos(\mu’)$从-1-&gt;1的积分表示的对全空间的全方位角方向的散射辐射积分。也就是整体散射辐射。<br>$P_s(\tau,\mu,\mu’)$称为散射相函数，反映的是散射光在空间中的强度情况。在各向同性散射（Isotropic Scattering）中，不同方向的散射强度是相同的。其本质上是一个无穷级数，表示的无限细分的散射方位角，可以进行多项式展开，但是由于是无穷级数，计算机实现起来是不可能的。</p><div class="note success no-icon flat"><p>$\tau&#x3D;\sigma_{ext}∆z 和  \omega&#x3D;\sigma_{sca}/\sigma_{ext}$ 分别来自于Mies散射的计算，后面的章节会介绍到。</p></div><p>第三项是介质的吸收，对应于介质物理温度下的黑体辐射强度$B(T)$,由Planck方程确定</p><div class="note primary flat"><p>如何计算散射项？<br>散射相函数$P_s(\tau,\mu,\mu’)$表征的是任意方向的散射分布。一般来说，散射项不可能无限的计算下去，也就是不能对于所有的方向进行散射计算。一般采用的方法是采用离散纵标法（DOM; Discrete Ordinate Method），其思想是只对有限的方向进行离散计算。<br>比如说应用广泛的32-streams (Tsang and Kong, 1977)近似，提供了足够（sufficient）多的流数。但是这么多级的展开对于是一个很computationally intensive的任务。但是低流数又无法替代多角度的散射，Liou (1992)提出4流比2流有显著的改善，并且计算起来可以接受。<br>四流近似举例：在<a href="http://home.ustc.edu.cn/~hjh18305/ftpfiles/literatures/MWRT-JMSJ_MWRT_paper.pdf">Liu et al.,(1998)</a> 中，$P_s(\tau,\mu,\mu’)$ 假设遵循Henyey-Greenstein equation，可以进行Legendre polynomial多项式展开。详细计算过程见<a href="http://home.ustc.edu.cn/~hjh18305/ftpfiles/literatures/Solving%20RTM%20using%20Discrete%20Ordinate%20Method%20&%20How%20it%20is%20implemented%20in%20MWRT.pdf">Solving RTM using Discrete Ordinate Method (DOM)and How it is implemented in MWRT</a>。<br>小角度近似？？后向前向？</p></div><h2 id="LandEM中的具体实现"><a href="#LandEM中的具体实现" class="headerlink" title="LandEM中的具体实现"></a>LandEM中的具体实现</h2><p>这个代码是在‘土壤-介质-大气’三层模型的基础上进行的二流辐射公式，首先是模型示意图：<br><img src="https://i.loli.net/2021/03/17/xD3NX7SGgHEiszT.png" style="width:80%;" alt="土壤-介质-大气近地表模型"></p><p>代码具体细节：</p><ul><li>计算出地表和介质层的截面反射，透射，粗糙表面 – 菲涅尔方程+斯涅耳定律</li><li>假设空气和介质之间 $T_{21}&#x3D;1 ; R_{21}&#x3D;0$</li></ul><p>$$<br>\begin{align}<br>\mu &amp;&#x3D;\cos(\theta) \\<br>\alpha_h &amp;&#x3D; \sqrt{\frac{1-\omega_h}{1-g_h*\omega_h}} \\<br>K_h &amp;&#x3D;\frac{\sqrt{(1-\omega_h)(1-g_h*\omega_h)}}{\mu} \\<br>\beta_h &amp;&#x3D;\frac{1-\alpha_h}{1+\alpha_h} \\<br>\gamma_h &amp;&#x3D;\frac{\beta_h - R_{23h}}{1 - \beta_h*R_{23h}}  \\<br>\end{align}<br>$$</p><p>$$<br>\begin{align}<br>\alpha_v &amp;&#x3D; \sqrt{\frac{1-\omega_v}{1-g_v*\omega_v}} \\<br>K_v &amp;&#x3D;\frac{\sqrt{(1-\omega_v)(1-g_v*\omega_v)}}{\mu} \\<br>\beta_v &amp;&#x3D;\frac{1-\alpha_v}{1+\alpha_v} \\<br>\gamma_v &amp;&#x3D;\frac{\beta_v - R_{23v}}{1 - \beta_v*R_{23v}}  \\<br>\end{align}<br>$$</p><p>$$<br>\begin{align}<br>fact_1&amp;&#x3D;\gamma_h*e^{-2K_h*\tau_h} \\<br>fact_2&amp;&#x3D;\gamma_v*e^{-2K_v*\tau_v} \\<br>\end{align}<br>$$</p><p>$$<br>\begin{align}<br>gsect_0&amp;&#x3D;(e^{c^2f&#x2F;T_{skin}}-1)&#x2F;(e^{c^2f&#x2F;T_{soil}}-1) \\<br>gsect1_h&amp;&#x3D;(1-R_{23h})*(gsect_0-1) \\<br>gsect2_h&amp;&#x3D;\frac{1-\beta_h^2}{1-\beta_h*R_{23h}}*e^{-K_h*\tau_h} \\<br>\end{align}<br>$$</p><p>$$<br>\begin{align}<br>gsect1_v&amp;&#x3D;(1-R_{23v})*(gsect_0-1) \\<br>gsect2_v&amp;&#x3D;\frac{1-\beta_v^2}{1-\beta_v*R_{23v}}*e^{-K_v*\tau_v} \\<br>\end{align}<br>$$</p><p>$$<br>\begin{align}<br>E_h  &amp;&#x3D; T_{21h}*\frac{(1 - \beta_h)*(1 + fact_1)+gsect1_h*gsect2_h}{1-\beta_h*R_{21h}-(\beta_h-R_{21h})*fact_1} \\<br>E_v  &amp;&#x3D; T_{21v}*\frac{(1 - \beta_v)*(1 + fact_2)+gsect1_v*gsect2_v}{1-\beta_v*R_{21v}-(\beta_v-R_{21v})*fact_2} \\<br>\end{align}<br>$$</p><p>参考文献：<br>Tsang, L. and J.A. Kong, 1977: Theory for thermal microwave emission from a bounded medium containing spherical scatters. J. Appl. Phys., 48, 3593-3599.<br>Liou, K.-N., 1992: Radiation and Cloud Processes in the Atmosphere. Oxford University Press, 487pp. </p>]]></content>
      
      
      <categories>
          
          <category> Research </category>
          
      </categories>
      
      
        <tags>
            
            <tag> RTM </tag>
            
            <tag> CRTM </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LandEM Module 源码解析（一）- 引用关系</title>
      <link href="/blog/research/landem/resolve-landem-backbone/"/>
      <url>/blog/research/landem/resolve-landem-backbone/</url>
      
        <content type="html"><![CDATA[<div class="note primary no-icon flat"><p>LandEM (Land Emission Module)模块是一种正向微波辐射传输模式，适用于积雪，沙地，植被冠层等下垫面情况，本节就LandEM模块的结构和引用关系进行解析。</p></div><p><code>NESDIS_LandEM_Module</code>头信息如下：</p><blockquote><p>Module containing the NESDIS microwave land emissivity model<br>CREATION HISTORY:Written by:<br>        Banghua Yan, QSS Group Inc.,<a href="mailto:&#x42;&#97;&#110;&#103;&#104;&#x75;&#x61;&#46;&#89;&#97;&#x6e;&#x40;&#x6e;&#x6f;&#97;&#x61;&#46;&#103;&#111;&#x76;">&#x42;&#97;&#110;&#103;&#104;&#x75;&#x61;&#46;&#89;&#97;&#x6e;&#x40;&#x6e;&#x6f;&#97;&#x61;&#46;&#103;&#111;&#x76;</a> 01-Jun-2005<br>          Fuzhong Weng, NOAA&#x2F;NESDIS&#x2F;ORA,<a href="mailto:&#x46;&#117;&#122;&#x68;&#111;&#110;&#x67;&#46;&#87;&#x65;&#x6e;&#x67;&#64;&#x6e;&#x6f;&#x61;&#x61;&#46;&#103;&#111;&#118;">&#x46;&#117;&#122;&#x68;&#111;&#110;&#x67;&#46;&#87;&#x65;&#x6e;&#x67;&#64;&#x6e;&#x6f;&#x61;&#x61;&#46;&#103;&#111;&#118;</a>                  </p></blockquote><h2 id="全局变量和Module依赖"><a href="#全局变量和Module依赖" class="headerlink" title="全局变量和Module依赖"></a>全局变量和Module依赖</h2><figure class="highlight fortran"><table><tr><td class="code"><pre><span class="line"><span class="keyword">MODULE</span> NESDIS_LandEM_Module</span><br><span class="line">  <span class="comment">! -----------------</span></span><br><span class="line">  <span class="comment">! Enviroment set up</span></span><br><span class="line">  <span class="comment">! -----------------</span></span><br><span class="line">  <span class="comment">! Module use</span></span><br><span class="line">  <span class="keyword">USE</span> Type_Kinds, <span class="keyword">ONLY</span>: fp    <span class="comment">!!只使用fp变量</span></span><br><span class="line">  <span class="keyword">USE</span> Fundamental_Constants, <span class="keyword">ONLY</span>: C_2  <span class="comment">!!只使用C_2变量</span></span><br><span class="line">  <span class="keyword">USE</span> NESDIS_SnowEM_Parameters  <span class="comment">!! 引用SnowEM模块的相关配置</span></span><br><span class="line">  <span class="comment">! Disable implicit typing</span></span><br><span class="line">  <span class="keyword">IMPLICIT</span> <span class="keyword">NONE</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">! ------------</span></span><br><span class="line">  <span class="comment">! Visibilities</span></span><br><span class="line">  <span class="comment">! ------------</span></span><br><span class="line">  <span class="keyword">PRIVATE</span></span><br><span class="line">  <span class="comment">! Procedures</span></span><br><span class="line">  <span class="keyword">PUBLIC</span>  :: NESDIS_LandEM</span><br><span class="line">  <span class="comment">! Parameters</span></span><br><span class="line">  <span class="keyword">PUBLIC</span> :: ZERO</span><br><span class="line">  <span class="keyword">PUBLIC</span> :: POINT1</span><br><span class="line">  <span class="keyword">PUBLIC</span> :: POINT5</span><br><span class="line">  <span class="keyword">PUBLIC</span> :: ONE</span><br><span class="line">  <span class="keyword">PUBLIC</span> :: TWO </span><br><span class="line">  <span class="keyword">PUBLIC</span> :: THREE</span><br><span class="line">  <span class="keyword">PUBLIC</span> :: FOUR</span><br><span class="line">  <span class="keyword">PUBLIC</span> :: PI</span><br><span class="line">  <span class="keyword">PUBLIC</span> :: EMISSH_DEFAULT</span><br><span class="line">  <span class="keyword">PUBLIC</span> :: EMISSV_DEFAULT</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">PUBLIC</span> :: ONE_TENTH</span><br><span class="line">  <span class="keyword">PUBLIC</span> :: HALF</span><br><span class="line">  </span><br><span class="line">  <span class="comment">! -----------------</span></span><br><span class="line">  <span class="comment">! Module parameters</span></span><br><span class="line">  <span class="comment">! -----------------</span></span><br><span class="line">  <span class="keyword">REAL</span>(fp), <span class="keyword">PARAMETER</span> :: ZERO   = <span class="number">0.0_fp</span></span><br><span class="line">  <span class="keyword">REAL</span>(fp), <span class="keyword">PARAMETER</span> :: POINT1 = <span class="number">0.1_fp</span></span><br><span class="line">  <span class="keyword">REAL</span>(fp), <span class="keyword">PARAMETER</span> :: POINT5 = <span class="number">0.5_fp</span></span><br><span class="line">  <span class="keyword">REAL</span>(fp), <span class="keyword">PARAMETER</span> :: ONE    = <span class="number">1.0_fp</span></span><br><span class="line">  <span class="keyword">REAL</span>(fp), <span class="keyword">PARAMETER</span> :: TWO    = <span class="number">2.0_fp</span></span><br><span class="line">  <span class="keyword">REAL</span>(fp), <span class="keyword">PARAMETER</span> :: THREE  = <span class="number">3.0_fp</span></span><br><span class="line">  <span class="keyword">REAL</span>(fp), <span class="keyword">PARAMETER</span> :: FOUR   = <span class="number">4.0_fp</span></span><br><span class="line">  <span class="keyword">REAL</span>(fp), <span class="keyword">PARAMETER</span> :: PI     = <span class="number">3.141592653589793238462643_fp</span></span><br><span class="line">  <span class="keyword">REAL</span>(fp), <span class="keyword">PARAMETER</span> :: TWOPI  = TWO*PI</span><br><span class="line">  <span class="keyword">REAL</span>(fp), <span class="keyword">PARAMETER</span> :: EMISSH_DEFAULT = <span class="number">0.25_fp</span></span><br><span class="line">  <span class="keyword">REAL</span>(fp), <span class="keyword">PARAMETER</span> :: EMISSV_DEFAULT = <span class="number">0.30_fp</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">REAL</span>(fp), <span class="keyword">PARAMETER</span> :: ONE_TENTH = POINT1</span><br><span class="line">  <span class="keyword">REAL</span>(fp), <span class="keyword">PARAMETER</span> :: HALF      = POINT5</span><br><span class="line">   </span><br><span class="line"><span class="keyword">CONTAINS</span> <span class="comment">!! 子程序中的变量无需重新声明直接使用，变量值无需通过哑实结合传递。</span></span><br></pre></td></tr></table></figure><h2 id="主程序结构"><a href="#主程序结构" class="headerlink" title="主程序结构"></a>主程序结构</h2><p>基本上是顺序结构+分支结构，对于每一个模块，先计算介电常数，再计算反射率和透射率，最后进行辐射传输计算。</p><p>结构图</p><div class="mermaid-wrap"><pre class="mermaid-src" hidden>  flowchart TBsubgraph NESDIS_LandEM     in0[Freq,SMC,VegFrc,SoilT,SkinT,LAI,SoilType,VegType,SownDepth]-.-&gt;out0[MLSE_V,MLSE_H,Diel_Soil]endNESDIS_LandEM--&gt;switch0switch0{SnowDepth&gt;0.1?}switch0--True--&gt;switch1switch0--False--&gt;Canopy_Soil_procedureswitch1{SnowDepth&gt;10?}switch1--False--&gt;Snow_Soil_procedureswitch1--True--&gt;Empirical_Snow_Algorithmsubgraph Snow_Soil_procedure     in2[Freq,SoilT,SMC,SoilType,SnowDepth]-.-&gt;out2[MLSE_V,MLSE_H...]endsubgraph Empirical_Snow_Algorithm     in4[Freq,SkinT,SnowDepth]-.-&gt;out4[MLSE_V,MLSE_H]endsubgraph Canopy_Soil_procedure      in3[SMC,VegFrac,LAI,VegType,SoilT,SkinT]-.-&gt;out3[MLSE_V,MLSE_H]end%% actions  </pre></div><h3 id="无积雪表面的辐射计算"><a href="#无积雪表面的辐射计算" class="headerlink" title="无积雪表面的辐射计算"></a>无积雪表面的辐射计算</h3><p>Canopy_Soil_procedure这个分支是用于计算无积雪覆盖的”土壤-植被冠层-空气”三层介质模型的辐射传输计算。<br>其结构如下：</p><div class="mermaid-wrap"><pre class="mermaid-src" hidden>  flowchart TBsubgraph Soil_Diel      in1[Freq,SMC,SoilT,SoilType]-.-&gt;out1[Diel_Soil]endout1--&gt;in2subgraph Reflectance      in2[Diel_Air,Diel_Soil,theta]-.-&gt;out2[R23_V,R23_H]endout2--&gt;in3subgraph Roughness_Reflectance      in3[Freq,theta,sigma,R23_V,R23_H]-.-&gt;out3[R23_V,R23_H]endsubgraph Canopy_Diel      in4[VegType,VWC,Veg_density]-.-&gt;out4[Diel_Leaf]endout4--&gt;in5subgraph Canopy_Optic      in5[Freq,LAI,Diel_Leaf,theta,Leaf_Thickness]-.-&gt;out5[Omega_V,Omega_H,Tau_V,Tau_H,Asymmetry_factor]endout3--&gt;in6out5--&gt;in6subgraph Two_Stream_Solution      in6[Omegas,Taus,Reflects,SoilT,SkinT,Freq,Asymmes,theta]-.-&gt;out6[MLSE_V,MLSE_H]end  </pre></div><p>其中，Roughness_Reflectance是对reflectance的粗糙表面修正，sigma是粗糙表面的高度标准差。</p>]]></content>
      
      
      <categories>
          
          <category> Research </category>
          
      </categories>
      
      
        <tags>
            
            <tag> RTM </tag>
            
            <tag> CRTM </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LandEM Module 源码解析（〇）- Overview</title>
      <link href="/blog/research/landem/resolve-landem-overview/"/>
      <url>/blog/research/landem/resolve-landem-overview/</url>
      
        <content type="html"><![CDATA[<div class="note primary no-icon flat"><p>CRTM(Community Radiative Transfer Model)模式是一种正向微波辐射传输模式，适用于积雪，沙地，植被冠层，海洋等多种下垫面情况。目前CRTM模式被广泛应用于对星载被动微波反演地表参数的互较<a href="https://ieeexplore.ieee.org/document/7312463">正向和反演模式的互较</a>。LandEM和SnowEM作为其中适用于地表和积雪情形的模块，对于希望编写新模式的同学具有很好的借鉴意义。</p></div><h2 id="CRTM模式"><a href="#CRTM模式" class="headerlink" title="CRTM模式"></a>CRTM模式</h2><p>CRTM模式由诸多模块组成，按照第一版本的文档<a href="https://repository.library.noaa.gov/view/noaa/1157/noaa_1157_DS1.pdf">JCSDA Community Radiative Transfer Model (CRTM) : version 1</a>来看，不同表面类型采用了针对性的辐射传输模块。<br>其中，海洋使用了FastEM；积雪和海冰表面采用了经验方案；而积雪，沙漠，植被和裸土的方案就是LandEM的范畴，具体的实现参考Weng老师的文章<a href="https://doi.org/10.1029/2001JD900019">A microwave land emissivity model (Weng et al.,2001)</a><br><img src="https://i.loli.net/2021/03/16/oXtNJiZlb13Bq7u.png" style="width:50%" alt="CRTM-modules"></p><h2 id="CRTM-获取"><a href="#CRTM-获取" class="headerlink" title="CRTM 获取"></a>CRTM 获取</h2><p>CRTM ftp download site</p><ul><li>The CRTM source code and coefficients are released in a compressed tarball1 via the CRTM ftp site: <a href="ftp://ftp.emc.ncep.noaa.gov/jcsda/CRTM/">ftp://ftp.emc.ncep.noaa.gov/jcsda/CRTM/</a> [Last Accessed:20210316]</li><li>The REL-2.1.3 release is available directly from <a href="ftp://ftp.emc.ncep.noaa.gov/jcsda/CRTM/REL-2.1.3">ftp://ftp.emc.ncep.noaa.gov/jcsda/CRTM/REL-2.1.3</a> [Last Accessed:20210316]<br>Also note that additional releases, e.g. beta or experimental branches, may also made available on this ftp site.</li></ul><h2 id="LandEM-模块"><a href="#LandEM-模块" class="headerlink" title="LandEM 模块"></a>LandEM 模块</h2><p>LandEM模块基于时任NOAA-NESDIS科学家的Weng et al.,(2001)等人的工作<a href="https://doi.org/10.1029/2001JD900019">A microwave land emissivity model</a>的具体实现，代码编写有Yan&amp;Weng两位完成。<br>包含文件和说明如下</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">+ LandEM</span><br><span class="line">|- compile.sh  编译文件，生成可执行文件</span><br><span class="line">|- Fundamental_Constants.f90 定义一些常数</span><br><span class="line">|- Type_Kinds.f90  定义使用到的数据类型</span><br><span class="line">|- NESDIS_LandEM_Module.f90  landEM模式代码</span><br><span class="line">|- NESDIS_SnowEM_Parameters.f90 SnowEM的模式参数</span><br><span class="line">|- main.f90 程序入口，设置试验</span><br></pre></td></tr></table></figure><h3 id="Compile"><a href="#Compile" class="headerlink" title="Compile"></a>Compile</h3><p>编译部分就是将文件夹下的所有module进行关联编译，生成可执行文件：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">f95 Type_Kinds.f90 Fundamental_Constants.f90 NESDIS_SnowEM_Parameters.f90 NESDIS_LandEM_Module.f90 main.f90 -o main.exe</span><br><span class="line"><span class="built_in">rm</span> -rf *.mod</span><br></pre></td></tr></table></figure><h3 id="类型定义"><a href="#类型定义" class="headerlink" title="类型定义"></a>类型定义</h3><blockquote><p>Module to hold specification kinds for variable declaration, as well as associated descriptors.</p></blockquote><p><code>Type_Kinds.f90</code>模块定义了一些保存变量声明的规范类型，以及相关的描述符。<br>默认的类型是8bytes的Long型<code>IP</code>和8bytes的Double型<code>FP</code>。</p><h3 id="常量"><a href="#常量" class="headerlink" title="常量"></a>常量</h3><p><code>Fundamental_Constants.f90</code> 定义了一些常用的常量，比如ZERO，ONE，TWO常用自然数和一些常用物理量如PI，自然指数e,光速，重力加速度，元电荷，玻尔兹曼常数等。</p><blockquote><p>Module containing various fundamental mathematical and physical constants, Taken from the NIST Reference on Constants, Units, and Uncertainty website: <a href="http://physics.nist.gov/cuu/Constants/">http://physics.nist.gov/cuu/Constants/</a><br>See also:  Mohr, P.J. and B.N. Taylor, “CODATA recommended values of the fundamental physical constants: 1998”, Reviews of Modern Physics,Vol.72, No.2, 2000.</p></blockquote><h3 id="NESDIS-SnowEM-Parameters-f90"><a href="#NESDIS-SnowEM-Parameters-f90" class="headerlink" title="NESDIS_SnowEM_Parameters.f90"></a>NESDIS_SnowEM_Parameters.f90</h3><blockquote><p>Module containing the parameters related to microwave snow emissivity model</p></blockquote><p>SnowEM虽然不是本项目的考察内容，但是LandEM模块调用了它，也作为依赖介绍一下，但是此处不做重点关注。<br>本module定义了一些积雪的发射率参数，将雪分为了16种类型,具体指代有待调研。</p><figure class="highlight fortran"><table><tr><td class="code"><pre><span class="line"><span class="comment">! Snow types</span></span><br><span class="line"><span class="keyword">INTEGER</span>, <span class="keyword">PUBLIC</span>, <span class="keyword">PARAMETER</span> :: INVALID_SNOW_TYPE   = -<span class="number">999</span></span><br><span class="line"><span class="keyword">INTEGER</span>, <span class="keyword">PUBLIC</span>, <span class="keyword">PARAMETER</span> :: WET_SNOW            =  <span class="number">1</span></span><br><span class="line"><span class="keyword">INTEGER</span>, <span class="keyword">PUBLIC</span>, <span class="keyword">PARAMETER</span> :: GRASS_AFTER_SNOW    =  <span class="number">2</span></span><br><span class="line"><span class="keyword">INTEGER</span>, <span class="keyword">PUBLIC</span>, <span class="keyword">PARAMETER</span> :: RS_SNOW_A           =  <span class="number">3</span></span><br><span class="line"><span class="keyword">INTEGER</span>, <span class="keyword">PUBLIC</span>, <span class="keyword">PARAMETER</span> :: POWDER_SNOW         =  <span class="number">4</span></span><br><span class="line"><span class="keyword">INTEGER</span>, <span class="keyword">PUBLIC</span>, <span class="keyword">PARAMETER</span> :: RS_SNOW_B           =  <span class="number">5</span></span><br><span class="line"><span class="keyword">INTEGER</span>, <span class="keyword">PUBLIC</span>, <span class="keyword">PARAMETER</span> :: RS_SNOW_C           =  <span class="number">6</span></span><br><span class="line"><span class="keyword">INTEGER</span>, <span class="keyword">PUBLIC</span>, <span class="keyword">PARAMETER</span> :: RS_SNOW_D           =  <span class="number">7</span></span><br><span class="line"><span class="keyword">INTEGER</span>, <span class="keyword">PUBLIC</span>, <span class="keyword">PARAMETER</span> :: THIN_CRUST_SNOW     =  <span class="number">8</span></span><br><span class="line"><span class="keyword">INTEGER</span>, <span class="keyword">PUBLIC</span>, <span class="keyword">PARAMETER</span> :: RS_SNOW_E           =  <span class="number">9</span></span><br><span class="line"><span class="keyword">INTEGER</span>, <span class="keyword">PUBLIC</span>, <span class="keyword">PARAMETER</span> :: BOTTOM_CRUST_SNOW_A = <span class="number">10</span></span><br><span class="line"><span class="keyword">INTEGER</span>, <span class="keyword">PUBLIC</span>, <span class="keyword">PARAMETER</span> :: SHALLOW_SNOW        = <span class="number">11</span></span><br><span class="line"><span class="keyword">INTEGER</span>, <span class="keyword">PUBLIC</span>, <span class="keyword">PARAMETER</span> :: DEEP_SNOW           = <span class="number">12</span></span><br><span class="line"><span class="keyword">INTEGER</span>, <span class="keyword">PUBLIC</span>, <span class="keyword">PARAMETER</span> :: CRUST_SNOW          = <span class="number">13</span></span><br><span class="line"><span class="keyword">INTEGER</span>, <span class="keyword">PUBLIC</span>, <span class="keyword">PARAMETER</span> :: MEDIUM_SNOW         = <span class="number">14</span></span><br><span class="line"><span class="keyword">INTEGER</span>, <span class="keyword">PUBLIC</span>, <span class="keyword">PARAMETER</span> :: BOTTOM_CRUST_SNOW_B = <span class="number">15</span></span><br><span class="line"><span class="keyword">INTEGER</span>, <span class="keyword">PUBLIC</span>, <span class="keyword">PARAMETER</span> :: THICK_CRUST_SNOW    = <span class="number">16</span></span><br></pre></td></tr></table></figure><h2 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h2><p>本计划对LandEM module的解析包含以下部分：</p><ol><li><p>LandEM源码解析<br> 1.1 引用关系<br> 1.2 介电常数的计算<br> 1.3 光学参数的计算<br> 1.4 辐射传输计算</p></li><li><p>基于LandEM的若干试验<br> 2.1 裸土类型TB对于土壤湿度的响应<br> 2.2 植被类型TB对于LAI的响应</p></li><li><p>讨论<br> 3.1 多层的可能性<br> 3.2 层间的反射处理</p></li></ol><p>下一节开始将进行源码分析。</p>]]></content>
      
      
      <categories>
          
          <category> Research </category>
          
      </categories>
      
      
        <tags>
            
            <tag> RTM </tag>
            
            <tag> CRTM </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CDF Matching方法</title>
      <link href="/blog/data-n-method/cdf-matching/"/>
      <url>/blog/data-n-method/cdf-matching/</url>
      
        <content type="html"><![CDATA[<h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>Cumulative Distribution Function (CDF)累计分布函数</p><p>Probablity Distribution Function (PDF)概率分布函数<br>GeoGebra演示</p><p><span style="color:grey;font-size:12px">未完待续…</span></p><h2 id="文献"><a href="#文献" class="headerlink" title="文献"></a>文献</h2><ol><li>VODCA<br>LIU water resources</li><li><a href="https://www.researchgate.net/publication/271703152_Cumulative_Density_Function_CDF_matching_approach">Soil Moisture</a></li></ol><h2 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h2><p>来源：<a href="https://www.researchgate.net/publication/271703152_Cumulative_Density_Function_CDF_matching_approach">https://www.researchgate.net/publication/271703152_Cumulative_Density_Function_CDF_matching_approach</a></p><p><img src="https://i.loli.net/2021/02/27/ZdmDEovzVh2jHpJ.png" alt="Quantile_Mapp.png"></p><h3 id="Source-code"><a href="#Source-code" class="headerlink" title="Source code"></a>Source code</h3><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="params">[SATCDF_ok,COEFF]</span>=<span class="title">QMAPP</span><span class="params">(OBS,SAT)</span></span></span><br><span class="line"><span class="comment">%--------------------------------------------------------------------------</span></span><br><span class="line"><span class="comment">%                           CDF matching approach</span></span><br><span class="line"><span class="comment">% The function allows to rescale the input data (SAT) to match the </span></span><br><span class="line"><span class="comment">% Cumulative Distribution Function (CDF) of benchmark data (OBS).</span></span><br><span class="line"><span class="comment">%</span></span><br><span class="line"><span class="comment">% Major details can be found in : </span></span><br><span class="line"><span class="comment">% L. Brocca,S. Hasenauer, T. Lacava, F. Melone, T. Moramarco,W. Wagner,</span></span><br><span class="line"><span class="comment">% W. Dorigo,P. Matgen,J. Mart韓ez-Fern醤dez,P. Llorens,J. Latron,</span></span><br><span class="line"><span class="comment">% C. Martin,M. Bittelli (2011),  Soil moisture estimation through ASCAT</span></span><br><span class="line"><span class="comment">% and AMSR-E sensors: An intercomparison and validation study across</span></span><br><span class="line"><span class="comment">% Europe, Remote Sensing of Environment,doi:10.1016/j.rse.2011.08.003.</span></span><br><span class="line"><span class="comment">%--------------------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="comment">% loading benchmark data</span></span><br><span class="line">load dataSM</span><br><span class="line">D_OBS = OBS(:,<span class="number">1</span>);</span><br><span class="line">OBSdata=(OBS(:,<span class="number">2</span>));</span><br><span class="line"></span><br><span class="line"><span class="comment">% loading data to modify</span></span><br><span class="line">D_SAT = SAT(:,<span class="number">1</span>);</span><br><span class="line">SATdata=(SAT(:,<span class="number">2</span>));</span><br><span class="line">SATCDF_ok = NaN(<span class="built_in">length</span>(SATdata),<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">1</span>:<span class="number">12</span>     <span class="comment">% for each month of the year</span></span><br><span class="line">    OBSmont = OBSdata(<span class="built_in">find</span>(month(D_OBS)==<span class="built_in">i</span>));</span><br><span class="line">    ID_SATmont = <span class="built_in">find</span>(month(D_SAT)==<span class="built_in">i</span>); SATmont = SATdata(ID_SATmont);</span><br><span class="line">    </span><br><span class="line">    POBS = [<span class="number">1</span>:<span class="built_in">length</span>(OBSmont)]&#x27;./(<span class="built_in">length</span>(OBSmont)+<span class="number">1</span>);</span><br><span class="line">    PSAT = [<span class="number">1</span>:<span class="built_in">length</span>(SATmont)]&#x27;./(<span class="built_in">length</span>(SATmont)+<span class="number">1</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">% Interpolation of input data (SAT) to the same percentiles of</span></span><br><span class="line">    <span class="comment">% benchmark data (OBS)</span></span><br><span class="line">    SATint= interp1(PSAT,<span class="built_in">sort</span>(SATmont),<span class="built_in">sort</span>(POBS),<span class="string">&#x27;linear&#x27;</span>,<span class="string">&#x27;extrap&#x27;</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">% Computation of the differences between the CDFs of OBS and SAT data</span></span><br><span class="line">    DIFF=<span class="built_in">sort</span>(OBSmont)-SATint;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">% Fitting of a polynomial curve to DIFF</span></span><br><span class="line">    COEFF= polyfit(SATint,DIFF, <span class="number">5</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">% Evaluation of the polynomial curve to SAT data </span></span><br><span class="line">    SATCDF= polyval(COEFF,SATmont)+SATmont;</span><br><span class="line">    SATCDF_ok(ID_SATmont) = SATCDF;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">% Comparison of cdf curves estimated for: benchmark data (OBSmont), </span></span><br><span class="line">    <span class="comment">% data to modify (SATmont), corrected data (SATCDF)</span></span><br><span class="line">    set(gcf,<span class="string">&#x27;position&#x27;</span>,[ <span class="number">530</span>, <span class="number">190</span>, <span class="number">1111</span>, <span class="number">794</span>])</span><br><span class="line">    subplot(<span class="number">3</span>,<span class="number">4</span>,<span class="built_in">i</span>)</span><br><span class="line">    <span class="built_in">plot</span>( <span class="built_in">sort</span>(OBSmont),(<span class="number">1</span>:<span class="built_in">length</span>(OBSmont))/(<span class="built_in">length</span>(OBSmont)+<span class="number">1</span>),<span class="string">&#x27;Color&#x27;</span>,<span class="number">0.7</span>*[<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>], <span class="string">&#x27;linewidth&#x27;</span>,<span class="number">7</span>)</span><br><span class="line">    <span class="built_in">hold</span> on</span><br><span class="line">    <span class="built_in">plot</span>(<span class="built_in">sort</span>(SATmont),(<span class="number">1</span>:<span class="built_in">length</span>(SATmont))/(<span class="built_in">length</span>(SATmont)+<span class="number">1</span>), <span class="string">&#x27;b-&#x27;</span>,<span class="string">&#x27;linewidth&#x27;</span>,<span class="number">4</span>)</span><br><span class="line">    <span class="built_in">plot</span>( <span class="built_in">sort</span>(SATCDF),(<span class="number">1</span>:<span class="built_in">length</span>(SATCDF))/(<span class="built_in">length</span>(SATCDF)+<span class="number">1</span>), <span class="string">&#x27;r--&#x27;</span>, <span class="string">&#x27;linewidth&#x27;</span>,<span class="number">2</span>)</span><br><span class="line">    xlabel(<span class="string">&#x27;data&#x27;</span>), ylabel(<span class="string">&#x27;Cumulative Density Function&#x27;</span>)</span><br><span class="line">    monthTitle =[<span class="string">&#x27;Jan&#x27;</span>;<span class="string">&#x27;Feb&#x27;</span>;<span class="string">&#x27;Mar&#x27;</span>;<span class="string">&#x27;Apr&#x27;</span>;<span class="string">&#x27;May&#x27;</span>;<span class="string">&#x27;Jun&#x27;</span>;<span class="string">&#x27;Jul&#x27;</span>;<span class="string">&#x27;Aug&#x27;</span>;<span class="string">&#x27;Sep&#x27;</span>;<span class="string">&#x27;Oct&#x27;</span>;<span class="string">&#x27;Nov&#x27;</span>;<span class="string">&#x27;Dec&#x27;</span>];</span><br><span class="line">    title(monthTitle(<span class="built_in">i</span>,:),<span class="string">&#x27;fontweight&#x27;</span>,<span class="string">&#x27;bold&#x27;</span>,<span class="string">&#x27;fontsize&#x27;</span>,<span class="number">10</span>), grid on</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">i</span>==<span class="number">12</span>, <span class="built_in">legend</span> (<span class="string">&#x27;Reference data&#x27;</span>,<span class="string">&#x27;Original biased data&#x27;</span>,<span class="string">&#x27;Corrected data&#x27;</span>,<span class="number">4</span>), <span class="keyword">end</span></span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    M_STAT_OBS(<span class="built_in">i</span>,<span class="number">1</span>)= <span class="built_in">nanmean</span>(OBSmont); V_STAT_OBS(<span class="built_in">i</span>,<span class="number">1</span>) = nanvar(OBSmont);</span><br><span class="line">    M_STAT_ST(<span class="built_in">i</span>,<span class="number">1</span>)= <span class="built_in">nanmean</span>(SATCDF);   V_STAT_ST(<span class="built_in">i</span>,<span class="number">1</span>) = nanvar(SATCDF);</span><br><span class="line">    </span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Data N&#39; Method </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CDF </tag>
            
            <tag> Method </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>西郊有密林 助君出重围</title>
      <link href="/blog/essays/xi-jiao-you-mi-lin/"/>
      <url>/blog/essays/xi-jiao-you-mi-lin/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="9427d44578d8c8c63c58891ac90c8526ecfd5f8bc189fa3fba5855f1865dbc57"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">这是一篇加密博客，请输入口令或者直接联系Jiheng吧！</span>      </label>    </div>  </div></div><script data-pjax src="/blog/lib/hbe.js"></script><link href="/blog/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> Essay </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Career </tag>
            
            <tag> Thoughts </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Typecho 框架Brave主题的配置使用</title>
      <link href="/blog/blog/typecho/aliyun-ecs-php-typecho-Brave/"/>
      <url>/blog/blog/typecho/aliyun-ecs-php-typecho-Brave/</url>
      
        <content type="html"><![CDATA[<div class="note primary no-icon flat"><p>距离大年初一开始搭建typecho服务已经很多天了，期间因为对新版本Mysql不熟悉持续踩坑，再加上赶paper稿，直至今日才算开始主题布置<br>初衷就是要使用这个温暖的主题<a href="https://blog.zwying.com/archives/59.html">Brave💕</a>，记录一下跟Qiuyan的点点滴滴。<br>感谢Veen的持续贡献。</p></div><p>Brave主题是一款适合正在搞对象的博主使用，具有计时器🧭、留言板✍、恋爱清单📜、点点滴滴记录💕等功能，基本上是保留了Cupid主题的所有功能，UI重新进行了设计。<br>基本上下面都是来自贡献者的指南，大家可以移步<a href="https://blog.zwying.com/archives/59.html">Typecho主题Brave—勇敢爱💕</a>。</p><h3 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h3><ul><li>Git下载方式，放置在<code>/var/www/html/usr/themes/</code>下。</li></ul><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#cd /var/www/html/usr/themes/ </span><br><span class="line">#git clone git clone https://github.com/zwying0814/Brave.git </span><br></pre></td></tr></table></figure><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><ul><li>进入Typecho 后台-控制台-外观-启用主题。</li><li>进入首页，外观已经改变了。<br><img src="https://i.loli.net/2021/02/19/u2hpknmYDaJGAlj.jpg" alt="brave-index.jpg"><br>可以看到头像，banner等元素有待完善。<br>启用后，创建对应页面，这里有三个页面需要创建，分别是首页、祝福板、Love List（一定要选择对应的模板！！！）。保存祝福板页面，和Love List页面的地址，后面会用到。<br>在外观-&gt;主题中设置图片元素和指定页面模板。<br>lovelist 格式</li></ul><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[loveList]</span><br><span class="line">[item status=&quot;0&quot; img=&quot;&quot;]一起看日出🌅[/item]</span><br><span class="line">[item status=&quot;0&quot; img=&quot;&quot;]一起看日落🌄[/item]</span><br><span class="line">[/loveList]</span><br><span class="line">//参数说明：status=&quot;0&quot;，img=&quot;&quot;。</span><br><span class="line">//status为0将显示灰色对勾，代表未完成此项，为1会显示绿色对勾，代表完成此项</span><br><span class="line">//img后面可以填写图片的链接，将显示在清单展开后，不填默认灰色填充</span><br></pre></td></tr></table></figure><p>我的小站<a href="http://47.111.24.82/index.php">Our Little Happiness</a></p><h2 id="后续"><a href="#后续" class="headerlink" title="后续"></a>后续</h2><p>还有一些问题没解决，日后慢慢完善：</p><ul><li>数据库对emoji的支持问题；crtl+shift+b  </li><li>站点根目录跳转的问题；</li><li>域名绑定。</li></ul>]]></content>
      
      
      <categories>
          
          <category> Blog </category>
          
          <category> Typecho </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Typecho </tag>
            
            <tag> Blog </tag>
            
            <tag> Brave </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>阿里云ECS构建Typecho应用-搭建Typecho应用</title>
      <link href="/blog/blog/typecho/aliyun-ecs-php-typecho-Typecho/"/>
      <url>/blog/blog/typecho/aliyun-ecs-php-typecho-Typecho/</url>
      
        <content type="html"><![CDATA[<ul><li>封面来自<a href="https://www.bilibili.com/video/BV1do4y1o7rm">向地平线前进</a>(截图) by 练凌飞lkemon —“祝大家永远开心！”</li></ul><h2 id="搭建Typecho之前的数据库准备"><a href="#搭建Typecho之前的数据库准备" class="headerlink" title="搭建Typecho之前的数据库准备"></a>搭建Typecho之前的数据库准备</h2><p>这些是我们继续搭建Typecho服务的基础。前几日因为数据库问题折腾了很久，总结一下：</p><ol><li>必须打开云主机的3306端口；</li><li>需要一个有密码可以登陆的账户，root权限需要改一下，建议新建一个账户，并赋予充分的权限；</li><li>Navicat远程登不上，报错是因为bind-address打开了，这样远程管理不是太方便；</li><li>轻量型ECS没有安全组，只有防火墙设置，只要打开3306端口就行；</li><li>创建数据库<code>typecho</code>。</li></ol><p><span style="color:red">[必须]</span>现在回到主线，我们需要一个Mysql账户来存取应用数据，就安排成<code>typecho</code>。</p><p>首先root登录,进入Mysql。</p><div class="note warning flat"><p>因为是mysql的root验证方式为<code>auth_socket</code>，也就是说不通过密码验证，只能通过linux系统的root用户直接进入，所以，这里不对Mysql root权限进行更改；<br>希望通过密码登录root的同学可以参考一下: <a href="/~hjh18305/space/2021/02/12/blog/typecho/mysql-root-authen-sock/">《Mysql 账户权限相关设置》</a></p></div><p>创建新用户</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> use mysql;</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">CREATE</span> <span class="keyword">USER</span> <span class="string">&#x27;typecho&#x27;</span> IDENTIFIED <span class="keyword">BY</span> <span class="string">&#x27;$passwd&#x27;</span>;</span><br></pre></td></tr></table></figure><p>查看账户权限ip，<code>%</code>表示任何ip，也可以设置成特定’ip’地址访问权限。</p><div class="note primary flat"><p>如果想要使用<code>Navicat</code>等远程登录数据库,需要设置一下，参考<a href="/~hjh18305/space/2021/02/12/blog/typecho/mysql-root-authen-sock/">《Mysql 账户权限相关设置》</a></p></div><p><span style="color:red">[必须]</span>赋予账户执行权限，参考<a href="/~hjh18305/space/2021/02/12/blog/typecho/mysql-root-authen-sock/">《Mysql 账户权限相关设置》</a></p><p>假设你都做了，navicat登陆typecho账户会发现对所有的数据库具有所有的权限。<br><img src="https://i.loli.net/2021/02/18/nF8zItCkusSAOK7.png" alt="navicat-mysql-aliyunecs"></p><p><span style="color:red">[必须]</span>创建数据库<code>typecho</code>:</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mysql&gt; creat database typecho;</span><br></pre></td></tr></table></figure><h2 id="搭建Typecho服务"><a href="#搭建Typecho服务" class="headerlink" title="搭建Typecho服务"></a>搭建Typecho服务</h2><ol><li><p>下载typecho安装包，<a href="http://typecho.org/download">link</a><br>解压，将众多文件放在Apache目录下<code>/var/www/html/</code>下。<br><img src="https://i.loli.net/2021/02/18/Byv63KFPUqIL2kM.jpg" alt="typecho-build-files"></p></li><li><p>访问<code>http://47.???.??.55(云主机外网ip)/install.php</code> 进入安装页&gt;”我准备好了, 开始下一步 »”;<br>按照之前的准备依次填入用户名和密码，以及管理员信息，你会得到一个要求你手动添加配置的要求。<br><img src="https://i.loli.net/2021/02/18/pE1QWsYtN48LMV2.png" alt="typecho-config"><br>如果提示连接数据库失败，回头去检查一下准备工作，最好先用navicat连接测试没成功了就基本没问题了。<br>按照要求创建文件，应该就成功了。记住管理员账户密码。<br><img src="https://i.loli.net/2021/02/18/oyn7ve6jGV1g9Bh.png" alt="typecho-install-success"></p></li></ol><p>同时，你可以访问控制台：<a href="http://ip/admin/index.php">http://ip/admin/index.php</a> 和 博客首页<a href="http://ip/index.php">http://ip/index.php</a><br><img src="https://i.loli.net/2021/02/18/r79EYIPVmDsJ6Le.png" alt="typecho-index"></p>]]></content>
      
      
      <categories>
          
          <category> Blog </category>
          
          <category> Typecho </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Typecho </tag>
            
            <tag> Blog </tag>
            
            <tag> Brave </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>阿里云ECS构建Typecho应用-搭建LAMP环境</title>
      <link href="/blog/blog/typecho/aliyun-ecs-php-typecho_LAMP/"/>
      <url>/blog/blog/typecho/aliyun-ecs-php-typecho_LAMP/</url>
      
        <content type="html"><![CDATA[<div class="note success flat"><p>在接触PHP以前，我一直使用的是Python-Django-Sqlite，Java-Springboot-Mysql这些选型来构建个性化的网页应用。<br>个人博客从Pelican到Vuepress再到Hexo这些静态工具，也使用过Gridea。现在又发现了基于PHP的框架<a href="http://typecho.org/">Typecho</a>，奔赴科研理想之余玩玩新东西。<br>看上了💖<a href="https://github.com/zwying0814/Brave">Brave</a>💖这一款主题，打算用一天搭起来。没有PHP基础，但是建站什么的还有些经验。<br>打算直接上阿里云ECS服务器实例。毕竟今年博士入学，学生认证走起。</p></div><h2 id="阿里云ECS实例"><a href="#阿里云ECS实例" class="headerlink" title="阿里云ECS实例"></a>阿里云ECS实例</h2><p>春节当天在阿里云上购置了一台ECS实例，链接如下<a href="https://developer.aliyun.com/plan/grow-up?spm=5176.21103406.J_3012903320.6.8b7e597cYjEwsh">开发者成长计划</a>。  </p><img src="https://i.loli.net/2021/02/13/jmFUNJLPRs4S3pt.jpg" alt="aliyun-ECS" width="50%" height="50%"><h2 id="其实阿里云提供应用镜像的选择，包括WordPress和LAMP等有选择，因为我可能用于比较多，就选了ubuntu20-04的系统镜像，可能搭建环境方面需要更多工作。"><a href="#其实阿里云提供应用镜像的选择，包括WordPress和LAMP等有选择，因为我可能用于比较多，就选了ubuntu20-04的系统镜像，可能搭建环境方面需要更多工作。" class="headerlink" title="其实阿里云提供应用镜像的选择，包括WordPress和LAMP等有选择，因为我可能用于比较多，就选了ubuntu20.04的系统镜像，可能搭建环境方面需要更多工作。    "></a>其实阿里云提供应用镜像的选择，包括WordPress和LAMP等有选择，因为我可能用于比较多，就选了ubuntu20.04的系统镜像，可能搭建环境方面需要更多工作。<br><img src="https://i.loli.net/2021/02/13/3BCVlKnd8speSjW.png" alt="aliyun-ecs-panel">    </h2><h2 id="安装LAMP环境"><a href="#安装LAMP环境" class="headerlink" title="安装LAMP环境"></a>安装LAMP环境</h2><p>LAMP&#x3D; Linux + Apache + Mysql + PHP，从系统，http服务器，数据库到开发环境的一整套。  </p><div class="note primary flat"><p>Typecho的环境要求： </p><ol><li>PHP 5.4 以上  </li><li>MySQL, PostgreSQL, SQLite 任意一种数据库支持，并在 PHP 中安装了相关扩展  </li><li>CURL 扩展支持  </li><li>mbstring 或 iconv 扩展支持</li></ol></div><h3 id="安装Apache2"><a href="#安装Apache2" class="headerlink" title="安装Apache2"></a>安装Apache2</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo apt update</span><br><span class="line">sudo apt install apache2</span><br></pre></td></tr></table></figure><p>开启apache服务,并查看服务状态：  </p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo /etc/init.d/apache2 start </span><br><span class="line">Starting apache2 (via systemctl): apache2.service.</span><br><span class="line"></span><br><span class="line">ps aux | grep apache</span><br><span class="line">root       22813  0.0  0.2   6520  4472 ?        Ss   16:24   0:00 /usr/sbin/apache2 -k start</span><br><span class="line">www-data   22815  0.0  0.2 752648  4484 ?        Sl   16:24   0:00 /usr/sbin/apache2 -k start</span><br><span class="line">www-data   22816  0.0  0.2 752648  4484 ?        Sl   16:24   0:00 /usr/sbin/apache2 -k start</span><br><span class="line">root       23544  0.0  0.0   9032   732 pts/0    S+   16:25   0:00 grep --color=auto apache</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo apache2ctl configtest </span><br><span class="line">Syntax OK</span><br><span class="line">sudo systemctl status apache2</span><br></pre></td></tr></table></figure><p>显示active说明服务正常<br><img src="https://i.loli.net/2021/02/13/Eb4pDBNPIyrSA8s.jpg" alt="apache-status"></p><p>登陆浏览器地址，公网ip地址 <code>http://公网ip</code>,默认端口80。显示如下页面</p><p><img src="https://i.loli.net/2021/02/13/Oo3AsfxHeUpvzQJ.png" alt="apache-active">  </p><hr><h3 id="安装Mysql"><a href="#安装Mysql" class="headerlink" title="安装Mysql"></a>安装Mysql</h3><p>安装Mysql服务和客户端，两行代码，比windows下简单多了。  </p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo apt install mysql-server</span><br><span class="line">sudo apt install mysql-client</span><br></pre></td></tr></table></figure><p>查看mysql</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#mysql</span><br><span class="line">Welcome to the MySQL monitor.  Commands end with ; or \g.</span><br><span class="line">Your MySQL connection id is 8</span><br><span class="line">Server version: 8.0.23-0ubuntu0.20.04.1 (Ubuntu)</span><br><span class="line">Copyright (c) 2000, 2021, Oracle and/or its affiliates.</span><br><span class="line">Type &#x27;help;&#x27; or &#x27;\h&#x27; for help. Type &#x27;\c&#x27; to clear the current input statement.</span><br><span class="line"></span><br><span class="line">mysql&gt; \s</span><br><span class="line">--------------</span><br><span class="line">mysql  Ver 8.0.23-0ubuntu0.20.04.1 for Linux on x86_64 ((Ubuntu))</span><br><span class="line"></span><br><span class="line">Connection id:8</span><br><span class="line">Current database:</span><br><span class="line">Current user:root@localhost</span><br><span class="line">SSL:Not in use</span><br><span class="line">Current pager:stdout</span><br><span class="line">Using outfile:&#x27;&#x27;</span><br><span class="line">Using delimiter:;</span><br><span class="line">Server version:8.0.23-0ubuntu0.20.04.1 (Ubuntu)</span><br><span class="line">Protocol version:10</span><br><span class="line">Connection:Localhost via UNIX socket</span><br><span class="line">Server characterset:utf8mb4</span><br><span class="line">Db     characterset:utf8mb4</span><br><span class="line">Client characterset:utf8mb4</span><br><span class="line">Conn.  characterset:utf8mb4</span><br><span class="line">UNIX socket:/var/run/mysqld/mysqld.sock</span><br><span class="line">Binary data as:Hexadecimal</span><br><span class="line">Uptime:1 min 10 sec</span><br><span class="line"></span><br><span class="line">Threads: 2  Questions: 5  Slow queries: 0  Opens: 117  Flush tables: 3  Open tables: 36  Queries per second avg: 0.071</span><br></pre></td></tr></table></figure><p>字符类型全部是<code>utf8mb4</code>,支持Emoji类型。</p><hr><h3 id="安装PHP"><a href="#安装PHP" class="headerlink" title="安装PHP"></a>安装PHP</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo apt install php</span><br><span class="line">sudo apt install php-mysql</span><br></pre></td></tr></table></figure><p>当前安装的版本是<code>php7.4</code>。<br>同时安装到位的库还有<code>libapache2-mod-php7.4</code> <code>php-common</code>  <code>php7.4-cli</code> <code>php7.4-common</code> <code>php7.4-json</code> <code>php7.4-opcache</code> <code>php7.4-readline</code><br><code>php-mysql</code> 会自动下载配套的最新稳定版的<code>php-mysql</code> <code>php7.4-mysql</code>。</p><p>安装<code>php-xml</code>, </p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo spt install php-xml</span><br></pre></td></tr></table></figure><p>安装的库有<code>libxslt1.1</code> <code>php-xml</code> <code>php7.4-xml</code>.</p><p>检验</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">root@iZbp15zw0q0jnshf9chedxZ:/home/hjh# php -a</span><br><span class="line">Interactive mode enabled</span><br><span class="line">php &gt; var_dump(function_exists(&#x27;utf8_decode&#x27;));</span><br><span class="line">bool(true)  </span><br></pre></td></tr></table></figure><p>重启服务  </p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">root@iZbp15zw0q0jnshf9chedxZ:/home/hjh# service apache2 restart</span><br><span class="line">root@iZbp15zw0q0jnshf9chedxZ:/home/hjh# service mysql restart</span><br></pre></td></tr></table></figure><p>测试Apache能否解析PHP</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">root@iZbp15zw0q0jnshf9chedxZ:/home/hjh# echo &#x27;&lt;?php echo phpinfo();?&gt;&#x27; &gt;/var/www/html/phpinfo.php</span><br></pre></td></tr></table></figure><p>浏览器访问 <code>http://公网ip/phpinfo.php</code>，应该有如下PHP信息。<br> <img src="https://i.loli.net/2021/02/13/Gc3uCymkefDN4AR.jpg" alt="aliyun-ECS" width="50%" height="50%"></p><p>编辑<code>/etc/apache2/apache2.conf</code>配置文件：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># Do NOT add a slash at the end of the directory path.</span><br><span class="line">#ServerRoot &quot;/etc/apache2&quot;</span><br><span class="line">###加上如下两行</span><br><span class="line">AddType application/x-httpd-php .php .htm .html</span><br><span class="line">AddDefaultCharset UTF-8</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Blog </category>
          
          <category> Typecho </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Typecho </tag>
            
            <tag> LAMP </tag>
            
            <tag> Aliyun </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>云主机Mysql账户权限相关设置</title>
      <link href="/blog/blog/typecho/mysql-root-authen-sock/"/>
      <url>/blog/blog/typecho/mysql-root-authen-sock/</url>
      
        <content type="html"><![CDATA[<div class="note success no-icon flat"><p>本篇文章服务于Aliyun轻量级ECS的MYSQL数据库，用于Navicat，typecho等用途的连接</p></div><h3 id="root的验证方式"><a href="#root的验证方式" class="headerlink" title="root的验证方式"></a>root的验证方式</h3><p>首先root登录,进入Mysql，因为是mysql的root验证方式为<code>auth_socket</code>，也就是说不通过密码验证，只能通过linux系统的root用户直接进入。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hjh@AliECS:/home/hjh$ cat /etc/mysql/debian.cnf </span><br><span class="line">#Automatically generated for Debian scripts. DO NOT TOUCH!</span><br><span class="line">[client]</span><br><span class="line">host     = localhost</span><br><span class="line">user     = debian-sys-maint</span><br><span class="line">password = SDr2K4V3OFSD46t7</span><br><span class="line">socket   = /var/run/mysqld/mysqld.sock</span><br></pre></td></tr></table></figure><p>这个password用于下一步验证  </p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hjh@AliECS:/home/hjh$ mysql -udebian-sys-maint -p SDr2K4V3OFSD46t7(修改)</span><br><span class="line">mysql&gt; UPDATE user SET authentication_string=PASSWORD(&#x27;newpassword&#x27;) where USER=&#x27;root&#x27;;</span><br><span class="line">或者&gt; alter user &#x27;用户名&#x27;@&#x27;登录主机&#x27; identified by &#x27;密码(自定义)&#x27;; 这种方式</span><br></pre></td></tr></table></figure><p>此时依然会不生效，需要修改验证策略：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mysql&gt; use mysql;</span><br><span class="line">mysql&gt; select user, plugin from user;</span><br><span class="line">+------------------+-----------------------+</span><br><span class="line">| user             | plugin                |</span><br><span class="line">+------------------+-----------------------+</span><br><span class="line">| root             | auth_socket           |</span><br><span class="line">| debian-sys-maint | caching_sha2_password |</span><br><span class="line">| mysql.infoschema | caching_sha2_password |</span><br><span class="line">| mysql.session    | caching_sha2_password |</span><br><span class="line">| mysql.sys        | caching_sha2_password |</span><br><span class="line">+------------------+-----------------------+</span><br><span class="line">5 rows in set (0.00 sec)</span><br><span class="line">mysql&gt; update user set plugin=&#x27;caching_sha2_password&#x27; where user=&#x27;root&#x27;;</span><br><span class="line">mysql&gt; flush privileges;</span><br></pre></td></tr></table></figure><p>重启服务：<code>sudo service mysql restart</code>。  </p><p>目前只是步骤是这样，但是新的加密方式<code>sha2()</code>需要我们在设置密码时注意加密方式，目前有待验证。  </p><h3 id="远程访问Aliyun-ECS-Mysql-服务器"><a href="#远程访问Aliyun-ECS-Mysql-服务器" class="headerlink" title="远程访问Aliyun ECS Mysql 服务器"></a>远程访问Aliyun ECS Mysql 服务器</h3><p>要远程登录数据库，需要满足3个前提：</p><ol><li>开放ALiyunECS的防火墙3306端口准入；</li><li>设置<code>/etc/mysql/mysql.conf.d/mysqld.cnf</code>文件：</li></ol><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">user= mysql</span><br><span class="line"># pid-file= /var/run/mysqld/mysqld.pid</span><br><span class="line"># socket= /var/run/mysqld/mysqld.sock</span><br><span class="line">port= 3306  ##默认端口</span><br><span class="line">datadir= /var/lib/mysql</span><br><span class="line">..... </span><br><span class="line">注释掉下面的两行，即只能本地访问</span><br><span class="line">#bind-address= 127.0.0.1</span><br><span class="line">#mysqlx-bind-address= 127.0.0.1</span><br></pre></td></tr></table></figure><ol start="3"><li>有一个可以远程登录的账号，<br>创建新用户</li></ol><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mysql&gt; use mysql;</span><br><span class="line">mysql&gt; CREATE USER &#x27;typecho&#x27; IDENTIFIED BY &#x27;$passwd&#x27;;</span><br></pre></td></tr></table></figure><p>查看账户权限ip，<code>%</code>表示任何ip，也可以设置成特定’ip’地址访问权限。  </p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mysql&gt; SELECT DISTINCT CONCAT(&#x27;User: &#x27;&#x27;&#x27;,user,&#x27;&#x27;&#x27;@&#x27;&#x27;&#x27;,host,&#x27;&#x27;&#x27;;&#x27;) AS query FROM mysql.user;</span><br><span class="line">+---------------------------------------+</span><br><span class="line">| query                                 |</span><br><span class="line">+---------------------------------------+</span><br><span class="line">| User: &#x27;typecho&#x27;@&#x27;%&#x27;;                  |</span><br><span class="line">| User: &#x27;debian-sys-maint&#x27;@&#x27;localhost&#x27;; |</span><br><span class="line">| User: &#x27;mysql.infoschema&#x27;@&#x27;localhost&#x27;; |</span><br><span class="line">| User: &#x27;mysql.session&#x27;@&#x27;localhost&#x27;;    |</span><br><span class="line">| User: &#x27;mysql.sys&#x27;@&#x27;localhost&#x27;;        |</span><br><span class="line">| User: &#x27;root&#x27;@&#x27;localhost&#x27;;             |</span><br><span class="line">+---------------------------------------+</span><br><span class="line">6 rows in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">示例ip修改：</span><br><span class="line">mysql&gt; update mysql.user set host=&#x27;%&#x27; where user=&#x27;root&#x27;;</span><br></pre></td></tr></table></figure><p>typecho是<code>%</code>权限，方便使用<code>Navicat</code>进行远程登录数据库。<br>以上的三个前提是对于远程访问的Mysql适用的，如果仅仅为本地云服务提供数据支持，可以不用设置。</p><h3 id="赋予账户操作权限"><a href="#赋予账户操作权限" class="headerlink" title="赋予账户操作权限"></a>赋予账户操作权限</h3><p>按照上一步操作，Navicat连接只能看到 information_shema 一张表，这是因为typecho这个用户还没有权限。</p><p>查看typecho的权限：  </p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mysql&gt; show grants for typecho;</span><br></pre></td></tr></table></figure><p>授予typecho全局级别（全部数据库）的全部权限。  </p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mysql&gt; GRANT ALL PRIVILEGES ON *.* TO &#x27;typecho&#x27;@&#x27;%&#x27; WITH GRANT OPTION;</span><br><span class="line">mysql&gt; flush privileges;</span><br></pre></td></tr></table></figure><p>重新连接Navicat，会发现所有的表都可以操作了。<br><img src="https://i.loli.net/2021/02/18/nF8zItCkusSAOK7.png" alt="navicat-mysql-aliyunecs"></p><p>【参考】<a href="https://blog.csdn.net/GreekMrzzJ/article/details/82262899">轻量应用服务器MySQL远程连接踩坑</a></p>]]></content>
      
      
      <categories>
          
          <category> Blog </category>
          
          <category> Typecho </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Typecho </tag>
            
            <tag> Aliyun </tag>
            
            <tag> Navicat </tag>
            
            <tag> Mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>从零开始挂载磁盘阵列</title>
      <link href="/blog/devops/data04-nfs-mountage/"/>
      <url>/blog/devops/data04-nfs-mountage/</url>
      
        <content type="html"><![CDATA[<h4 id="场景"><a href="#场景" class="headerlink" title="场景"></a>场景</h4><p>之前课题组就有一个磁盘阵列，大概是2018年购置的，raid6的阵列，一共130TB的净存储空间。实话说已经不小了，奈何GPM DPR和ENV的数据太过巨大，原始数据迅速就塞满了，后来大家就到处找空间。我做一次反演，原始数据倒要分好几段存储，苦不堪言。<br>这次又添置了一个新的阵列，瞬间富裕起来了。36*12T的raid6，6块用于热备份，净空间有328T。<br>预装的系统为 <code>Ubuntu 20.04.1 LTS (GNU/Linux 5.4.0-58-generic x86_64)</code>，大爱ubuntu。</p><p>要立即用起来，那就要挂载到计算节点上。之前是学校超算的老师过来操作的。当时不在场，小磁盘挂载还是操作过的，决定自己来。<br>机房的结构大致是这样的，机柜之间有一些飞线。pdu使用的美标，没有画出来，但是加机器时需要提前准备好特用的电源线。<br><img src="https://i.loli.net/2020/12/24/OVnhoMjfquEmakZ.png" alt="机架结构"></p><p>计算节点和存储阵列的网络关系如下，<code>node01</code>和<code>node05</code>是可以独立登录的，拥有静态互联网IP，可以校内访问。<br>两个Raid阵列也是可以校内登录的。所有节点和阵列使用静态局域网ip地址进行通讯。</p><p><img src="https://i.loli.net/2020/12/24/cAVp6UuzE17miGD.png" alt="集群网络"></p><p>dataserver2有两个网线，一根接校园网交换机，自动获取ip 222.195.xxx.xxx。另一根插在局域网交换机上。</p><hr><h2 id="目前的任务：1-开启openssh服务2-设置静态局域网ip3-设置NFS系统共享"><a href="#目前的任务：1-开启openssh服务2-设置静态局域网ip3-设置NFS系统共享" class="headerlink" title="目前的任务：1. 开启openssh服务2. 设置静态局域网ip3. 设置NFS系统共享"></a>目前的任务：<br>1. 开启openssh服务<br>2. 设置静态局域网ip<br>3. 设置NFS系统共享</h2><h4 id="设置远程登录"><a href="#设置远程登录" class="headerlink" title="设置远程登录"></a>设置远程登录</h4><figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line"><span class="function">user@dataserver2:~$<span class="title">sudo</span> <span class="title">apt</span> <span class="title">install</span> <span class="title">openssh</span>-<span class="title">server</span></span></span><br><span class="line"><span class="function"><span class="title">user</span>@<span class="title">dataserver2</span>:~$<span class="title">sudo</span> <span class="title">service</span> <span class="title">ssh</span> <span class="title">start</span>|<span class="title">restart</span>|<span class="title">status</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"><span class="title">user</span>@<span class="title">dataserver2</span>:~$<span class="title">ps</span> -<span class="title">e</span> | <span class="title">grep</span> <span class="title">ssh</span>   </span></span><br><span class="line"><span class="function">    967 ?        00:00:00 <span class="title">sshd</span>      </span></span><br><span class="line"><span class="function">   2000 ?        00:00:00 <span class="title">ssh</span>-<span class="title">agent</span></span></span><br><span class="line"><span class="function">   </span></span><br><span class="line"><span class="function">设置开机启动服务</span></span><br><span class="line"><span class="function"><span class="title">user</span>@<span class="title">dataserver2</span>:~$<span class="title">sudo</span> <span class="title">systemctl</span> <span class="title">enable</span> <span class="title">ssh</span></span></span><br></pre></td></tr></table></figure><p>这个时候一般就可以远程登录到22端口了，如果失败，无非是去配置中修改允许远程登录，允许密码登录等。  </p><figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">[C:\~]$ ssh usr@<span class="number">222</span>.<span class="number">195</span>.xxx.xxx</span><br></pre></td></tr></table></figure><h4 id="网络通远程登录"><a href="#网络通远程登录" class="headerlink" title="网络通远程登录"></a>网络通远程登录</h4><p>如果需要远程上网，需要登录学校网络通，LUG@USTC提供了各种版本的登录脚本。</p><p>一般<code>wget</code>是自带的，所以用这个，更多方式请访问<a href="https://lug.ustc.edu.cn/wiki/scripts/wlt/">【USTC 网络通脚本】</a></p><figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">wget --post-data=&quot;name=user&amp;password=passwd&amp;<span class="built_in">cmd</span>=<span class="built_in">set</span>&amp;<span class="built_in">type</span>=<span class="number">1</span>&amp;exp=<span class="number">0</span>&quot; http://wlt.ustc.edu.cn/cgi-bin/ip -O -</span><br><span class="line"></span><br><span class="line">#<span class="built_in">type</span> :出口</span><br><span class="line">#exp = <span class="number">0</span> :永久    <span class="number">120</span> :动态    <span class="number">3600</span>: <span class="number">1</span>小时    <span class="number">14400</span> :<span class="number">4</span>小时    <span class="number">39600</span> :<span class="number">11</span>小时    <span class="number">50400</span>: <span class="number">14</span>小时</span><br></pre></td></tr></table></figure><h4 id="设置静态子网IP"><a href="#设置静态子网IP" class="headerlink" title="设置静态子网IP"></a>设置静态子网IP</h4><p>校园网的IP地址是用于ssh远程登录用的，所以对于集群来说意义不大，可以暂时不用设成静态的。<br>但是局域网的ip就必须是静态的，否者变化会导致机器之间互联失败。</p><figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line"><span class="function">user@dataserver2:~$ <span class="title">sudo</span> <span class="title">apt</span> <span class="title">install</span> <span class="title">net</span>-<span class="title">tools</span></span></span><br><span class="line"><span class="function"><span class="title">user</span>@<span class="title">dataserver2</span>:~$ <span class="title">ifconfig</span></span></span><br><span class="line"><span class="function"><span class="title">user</span>@<span class="title">user</span>-<span class="title">RS540</span>-<span class="title">E9</span>-<span class="title">RS36</span>-<span class="title">E</span>:~$ <span class="title">ifconfig</span></span></span><br><span class="line"><span class="function"><span class="title">enp23s0f0</span>: <span class="title">flags</span>=4163&lt;<span class="title">UP</span>,<span class="title">BROADCAST</span>,<span class="title">RUNNING</span>,<span class="title">MULTICAST</span>&gt;  <span class="title">mtu</span> 1500</span></span><br><span class="line"><span class="function">        <span class="title">inet</span> <span class="title">xxx.xxx.xxx.xxx</span>  <span class="title">netmask</span> 255.255.255.0  <span class="title">broadcast</span> <span class="title">xxx.xxx.xxx</span>.255</span></span><br><span class="line"><span class="function">        <span class="title">inet6</span> <span class="title">xxxx:xxx</span>:<span class="title">xxx:xxx</span>:<span class="title">xxxx:xxxx</span>:<span class="title">xxxx:xxxx</span>  <span class="title">prefixlen</span> 64  <span class="title">scopeid</span> 0<span class="title">x0</span>&lt;<span class="title">global</span>&gt;</span></span><br><span class="line"><span class="function">        <span class="title">inet6</span> <span class="title">xxxx:xxx</span>:<span class="title">xxx:xxx</span>:<span class="title">xxxx:xxxx</span>:<span class="title">xxxx:xxxx</span> <span class="title">prefixlen</span> 64  <span class="title">scopeid</span> 0<span class="title">x0</span>&lt;<span class="title">global</span>&gt;</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"><span class="title">enp23s0f1</span>: <span class="title">flags</span>=4163&lt;<span class="title">UP</span>,<span class="title">BROADCAST</span>,<span class="title">RUNNING</span>,<span class="title">MULTICAST</span>&gt;  <span class="title">mtu</span> 1500</span></span><br><span class="line"><span class="function">        <span class="title">ether</span> <span class="title">xx:xx</span>:<span class="title">xx</span>:3<span class="title">x</span>:8<span class="title">x:ax</span>  <span class="title">txqueuelen</span> 1000  (以太网)</span></span><br><span class="line"><span class="function">......</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"><span class="title">lo</span>: <span class="title">flags</span>=73&lt;<span class="title">UP</span>,<span class="title">LOOPBACK</span>,<span class="title">RUNNING</span>&gt;  <span class="title">mtu</span> 65536</span></span><br><span class="line"><span class="function">        <span class="title">inet</span> 127.0.0.1  <span class="title">netmask</span> 255.0.0.0</span></span><br><span class="line"><span class="function">        <span class="title">inet6</span> ::1  <span class="title">prefixlen</span> 128  <span class="title">scopeid</span> 0<span class="title">x10</span>&lt;<span class="title">host</span>&gt;</span></span><br><span class="line"><span class="function">......</span></span><br></pre></td></tr></table></figure><p>两个网卡：</p><ul><li>enp23s0f0连接了互联网，有自动获取的IPv4 和IPv6地址，掩码，网关等。</li><li>enp23s0f1连接到局域网，没有IP地址，这里需要手动配置。</li></ul><p>我选择的是在ubuntu的网络界面的手动的配置，参数如下：</p><div class="note primary no-icon flat"><p>选择手动<br>地址：192.168.1.106<br>子网掩码：255.255.255.0<br>网关：192.168.1.1<br>首选DNS服务器：192.168.1.1<br>备用DNS服务器：192.168.1.1  </p></div><p>如果用脚本配置，ubuntu 17.10 之前采用的网络配置是编辑<code>/etc/network/interfaces</code> </p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">auto lo</span><br><span class="line">iface lo inet loopback</span><br><span class="line"></span><br><span class="line">auto enp23s0f1</span><br><span class="line">iface enp23s0f1 inet static</span><br><span class="line">address 192.168.1.106</span><br><span class="line">netmask 255.255.255.0</span><br><span class="line">gateway 192.168.1.1</span><br></pre></td></tr></table></figure><p>然后重启网络<code>sudo /etc/init.d/networking restart</code></p><p>这种方式我在在20.04版本中使用enp23s0f1直接没了，网上的经验设置一堆东西，裂开。。。</p><p>ubuntu 18.04开始在改成netplan方式，配置写在&#x2F;etc&#x2F;netplan&#x2F;01-netcfg.yaml或者类似名称的yaml文件里。<br>修改yaml配置文件</p><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">network:</span></span><br><span class="line">  <span class="attr">ethernets:</span></span><br><span class="line">    <span class="attr">enp23s0f1:</span>     <span class="comment">#配置的网卡的名称</span></span><br><span class="line">      <span class="attr">addresses:</span> [<span class="number">192.168</span><span class="number">.1</span><span class="string">.l06/24</span>]    <span class="comment">#配置的静态ip地址和掩码</span></span><br><span class="line">      <span class="attr">dhcp4:</span> <span class="literal">no</span>    <span class="comment">#关闭DHCP，如果需要打开DHCP则写yes</span></span><br><span class="line">      <span class="attr">optional:</span> <span class="literal">true</span></span><br><span class="line">      <span class="attr">gateway4:</span> <span class="number">192.168</span><span class="number">.1</span><span class="number">.1</span>    <span class="comment">#网关地址</span></span><br><span class="line">      <span class="attr">nameservers:</span></span><br><span class="line">         <span class="attr">addresses:</span> [<span class="number">192.168</span><span class="number">.1</span><span class="number">.1</span>,<span class="number">192.168</span><span class="number">.1</span><span class="number">.1</span>]    <span class="comment">#DNS服务器地址，多个DNS服务器地址需要用英文逗号分隔开</span></span><br><span class="line">  <span class="attr">version:</span> <span class="number">2</span></span><br><span class="line">  <span class="attr">renderer:</span> <span class="string">networkd</span>    <span class="comment">#指定后端采用systemd-networkd或者Network Manager，可不填写则默认使用systemd-workd</span></span><br></pre></td></tr></table></figure><p>配置生效</p><figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">$sudo netplan apply</span><br><span class="line">$ifconfig</span><br><span class="line"><span class="function">enp23s0f1: <span class="title">flags</span>=4163&lt;<span class="title">UP</span>,<span class="title">BROADCAST</span>,<span class="title">RUNNING</span>,<span class="title">MULTICAST</span>&gt;  <span class="title">mtu</span> 1500</span></span><br><span class="line"><span class="function">        <span class="title">inet</span> 192.168.1.106  <span class="title">netmask</span> 255.255.255.0  <span class="title">broadcast</span> 192.168.1.255</span></span><br><span class="line"><span class="function">        <span class="title">inet6</span> <span class="title">fe80</span>::8<span class="title">a1b:f67b</span>:658<span class="title">a:b5d</span>  <span class="title">prefixlen</span> 64  <span class="title">scopeid</span> 0<span class="title">x20</span>&lt;<span class="title">link</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="NFS配置"><a href="#NFS配置" class="headerlink" title="NFS配置"></a>NFS配置</h4><p>下面的内容就是之前一篇文章说过的，但是要更细。<br>给dataserver2配置nfs文件</p><figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">$sudo apt install nfs-kernel-server</span><br><span class="line">$sudo vim /etc/exports</span><br><span class="line">##添加</span><br><span class="line">/home/d1 <span class="number">192</span>.<span class="number">168</span>.<span class="number">1</span>.<span class="number">1</span>/<span class="number">24</span>(rw,no_root_squash,async,no_subtree_check)</span><br></pre></td></tr></table></figure><p><code>/home/d1</code>就是要共享出去的磁盘。<br>磁盘阵列是通过UUID(Universally Unique Identifier)开机识别挂载在<code>/home/d1</code>下的，如下。挂载点有点迷惑，懒得改了。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">usr@dataserver2:~$ cat /etc/fstab </span><br><span class="line"># /etc/fstab: static file system information.</span><br><span class="line">#</span><br><span class="line"># Use &#x27;blkid&#x27; to print the universally unique identifier for a</span><br><span class="line"># device; this may be used with UUID= as a more robust way to name devices</span><br><span class="line"># that works even if disks are added and removed. See fstab(5).</span><br><span class="line">#</span><br><span class="line"># &lt;file system&gt; &lt;mount point&gt;   &lt;type&gt;  &lt;options&gt;       &lt;dump&gt;  &lt;pass&gt;</span><br><span class="line"># / was on /dev/sdb3 during installation</span><br><span class="line">UUID=6a78e337-c489-4e02-89b4-475082eecc20 /               ext4    errors=remount-ro 0       1</span><br><span class="line"># /boot was on /dev/sdb1 during installation</span><br><span class="line">UUID=dc675322-a343-4f30-b6d2-dae3b520b031 /boot           ext4    defaults        0       2</span><br><span class="line"># /home was on /dev/sdb4 during installation</span><br><span class="line">UUID=2409b86a-5035-41d1-88be-3e4ba8f24a8e /home           ext4    defaults        0       2</span><br><span class="line"># /home/d1 was on /dev/sda1 during installation</span><br><span class="line">UUID=a5798281-8081-4ce6-b495-1d27412e6125 /home/d1        xfs     defaults        0       0</span><br><span class="line"># swap was on /dev/sdb2 during installation</span><br><span class="line">UUID=0b70f6a0-4b4e-48b6-a12c-fa710d085c39 none            swap    sw              0       0</span><br></pre></td></tr></table></figure><p>关于(rw,no_root_squash,async,no_subtree_check)配置参数可以参考<a href="https://blog.csdn.net/nirenxiaoxiao/article/details/17711969">【NFS exports参数说明】</a></p><p><code>192.168.1.1/24</code>也就是<code>192.168.1.1/255.255.255.0</code><br>ip地址<code>192.168.1.1</code>至<code>192.168.1.255</code>段所有的地址和子网掩码<code>255.255.255.0</code>的与运算结果都是相同的。<br>由于<code>192.168.1.1</code>是路由器的地址，<code>192.168.1.255</code>广播地址，这两个地地址已经被占用。<br>从<code>192.168.1.2-192.168.1.254</code>都可以访问你。如果是<code>255.255.255.255</code>的话，代表这个网段只有你一个主机，任何人都访问不了你</p><p>生效<code>sudo exportfs -ra</code></p><h4 id="添加机器别名，nfs共享"><a href="#添加机器别名，nfs共享" class="headerlink" title="添加机器别名，nfs共享"></a>添加机器别名，nfs共享</h4><p>进入计算节点node01，按照局域网ip地址给dataserver2 添加别名。</p><figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">$cat /etc/hosts</span><br><span class="line"><span class="number">127</span>.<span class="number">0</span>.<span class="number">0</span>.<span class="number">1</span>localhost.localdomainlocalhost.localdomainlocalhost4localhost4.localdomain4localhost</span><br><span class="line">::<span class="number">1</span>localhost.localdomainlocalhost.localdomainlocalhost6localhost6.localdomain6localhost</span><br><span class="line"><span class="number">192</span>.<span class="number">168</span>.<span class="number">1</span>.<span class="number">100</span> node00</span><br><span class="line"><span class="number">192</span>.<span class="number">168</span>.<span class="number">1</span>.<span class="number">101</span> node01</span><br><span class="line"><span class="number">192</span>.<span class="number">168</span>.<span class="number">1</span>.<span class="number">102</span> node02</span><br><span class="line"><span class="number">192</span>.<span class="number">168</span>.<span class="number">1</span>.<span class="number">103</span> node03</span><br><span class="line"><span class="number">192</span>.<span class="number">168</span>.<span class="number">1</span>.<span class="number">104</span> node04</span><br><span class="line"><span class="number">192</span>.<span class="number">168</span>.<span class="number">1</span>.<span class="number">105</span> node05</span><br><span class="line"><span class="number">192</span>.<span class="number">168</span>.<span class="number">1</span>.<span class="number">201</span> dataserver1</span><br><span class="line"><span class="number">192</span>.<span class="number">168</span>.<span class="number">1</span>.<span class="number">106</span> dataserver2 </span><br></pre></td></tr></table></figure><p>正常情况应该是保存之后立即生效。此后就可以在node01下使用dataserver2的别名了，比如<code>ssh usr@dataserver2</code><br>可以看到之前的计算节点和阵列都是在一个C类地址段内，按照255.255.255.0的掩码是可以互相访问的。</p><p>创建挂载点<code>sudo mkdir /data04</code><br>开启nfs共享<code>sudo mount -t nfs dataserver2:/home/d1 /data04</code></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#df -h</span><br><span class="line">Filesystem            Size  Used Avail Use% Mounted on</span><br><span class="line">/dev/sda2              30G  7.2G   21G  26% /</span><br><span class="line">tmpfs                  63G   84K   63G   1% /dev/shm</span><br><span class="line">/dev/sda3              74G   95M   70G   1% /localdisk</span><br><span class="line">node00:/home           74G   58G   13G  83% /home</span><br><span class="line">node00:/data01         11T  9.4T  358G  97% /data01</span><br><span class="line">node00:/data02        3.6T  3.3T  167G  96% /data02</span><br><span class="line">node00:/data03        3.6T  3.0T  465G  87% /data03</span><br><span class="line">dataserver1:/data00   131T  122T  2.4T  99% /data00</span><br><span class="line">/dev/sdb1             1.9T  1.2T  726G  62% /mnt/g2t</span><br><span class="line">dataserver2:/home/d1  328T  2.4T  326T   1% /data04</span><br></pre></td></tr></table></figure><h4 id="开机挂载"><a href="#开机挂载" class="headerlink" title="开机挂载"></a>开机挂载</h4><p>编辑开机挂载信息，追加<code>/data04</code></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#cat /etc/rc.d/mount.sh</span><br><span class="line">mount -t nfs -o nfsvers=3 node00:/home   /home</span><br><span class="line">mount -t nfs -o nfsvers=3 node00:/data01 /data01</span><br><span class="line">mount -t nfs -o nfsvers=3 node00:/data02 /data02</span><br><span class="line">mount -t nfs -o nfsvers=3 node00:/data03 /data03</span><br><span class="line">mount -t nfs -o proto=udp dataserver1:/data00 /data00</span><br><span class="line">mount -t nfs -o proto=udp dataserver2:/home/d1 /data04</span><br></pre></td></tr></table></figure><p>这个脚本是自己创建的，引用于<code>/etc/rc.d/rc.local</code>开机执行</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#cat /etc/rc.d/rc.local</span><br><span class="line">#!/bin/sh</span><br><span class="line">#</span><br><span class="line"># This script will be executed *after* all the other init scripts.</span><br><span class="line"># You can put your own initialization stuff in here if you don&#x27;t</span><br><span class="line"># want to do the full Sys V style init stuff.</span><br><span class="line"></span><br><span class="line">touch /var/lock/subsys/local</span><br><span class="line">/bin/sh /etc/rc.d/mount.sh</span><br></pre></td></tr></table></figure><p>写得比较乱，以后再整理，目的是以后维护知道自己怎么搞的。</p><hr><p><a href="https://blog.csdn.net/aa13390360/article/details/102048987">ubuntu固定内网ip地址</a><br><a href="https://lug.ustc.edu.cn/wiki/scripts/wlt/">USTC 网络通脚本</a><br><a href="https://blog.csdn.net/nirenxiaoxiao/article/details/17711969">NFS exports参数说明</a></p>]]></content>
      
      
      <categories>
          
          <category> Dev&amp;Ops </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Server </tag>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>集群节点文件系统共享NFS设置</title>
      <link href="/blog/devops/nfs-file-share-in-nodes/"/>
      <url>/blog/devops/nfs-file-share-in-nodes/</url>
      
        <content type="html"><![CDATA[<h3 id="场景"><a href="#场景" class="headerlink" title="场景"></a>场景</h3><p>最近需要急速反演一套GMI Emissivity数据(chuanxi)。 最麻烦和耗时的工作来自于原始数据的下载：</p><ol><li>GMI1B，GMI2A GROPF， 201811 ~ 202007 （800 GB）</li><li>H8 L2CLP  （300 GB）</li><li>ERA5 Plevels+Surface (100 GB)</li></ol><p>所以，服务器为了安全考虑没有联网，本地下载到一块陈年（2014年产）2TB硬盘上<br>放弃了数据上传，太慢了，简单粗暴，直接插在机架上。</p><p><img src="https://i.loli.net/2020/12/15/YpdebR5gtHuAX8w.jpg" alt="hd-pluge-20201017.jpg"></p><hr><h3 id="查看磁盘"><a href="#查看磁盘" class="headerlink" title="查看磁盘"></a>查看磁盘</h3><p>查看当前磁盘挂载情况，可以看出目前系统根目录是创建在&#x2F;dev&#x2F;sda盘上的</p><figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">[hjh@node01] ~ $ df -h</span><br><span class="line">Filesystem           Size  Used Avail Use% Mounted on</span><br><span class="line">/dev/sda2             <span class="number">30</span>G  <span class="number">7</span>.<span class="number">2</span>G   <span class="number">21</span>G  <span class="number">26</span>% /        ## 根目录是创建在sda磁盘上的</span><br><span class="line">tmpfs                 <span class="number">63</span>G   <span class="number">84</span>K   <span class="number">63</span>G   <span class="number">1</span>% /dev/shm</span><br><span class="line">/dev/sda3             <span class="number">74</span>G   <span class="number">95</span>M   <span class="number">70</span>G   <span class="number">1</span>% /localdisk</span><br><span class="line"><span class="function">node00:/<span class="title">home</span>          74<span class="title">G</span>   58<span class="title">G</span>   13<span class="title">G</span>  83% /<span class="title">home</span>    ## 来自<span class="title">node00</span>的共享</span></span><br><span class="line"><span class="function"><span class="title">node00</span>:/<span class="title">data01</span>        11<span class="title">T</span>  9.4<span class="title">T</span>  358<span class="title">G</span>  97% /<span class="title">data01</span></span></span><br><span class="line"><span class="function"><span class="title">node00</span>:/<span class="title">data02</span>       3.6<span class="title">T</span>  3.3<span class="title">T</span>  167<span class="title">G</span>  96% /<span class="title">data02</span></span></span><br><span class="line"><span class="function"><span class="title">node00</span>:/<span class="title">data03</span>       3.6<span class="title">T</span>  3.0<span class="title">T</span>  465<span class="title">G</span>  87% /<span class="title">data03</span></span></span><br><span class="line"><span class="function"><span class="title">dataserver1</span>:/<span class="title">data00</span>  131<span class="title">T</span>  122<span class="title">T</span>  2.6<span class="title">T</span>  98% /<span class="title">data00</span>  ##来自阵列的共享</span></span><br><span class="line"><span class="function"></span></span><br></pre></td></tr></table></figure><p>插上上述的2TB磁盘，使用<code>ls -l /dev</code> 查看磁盘标识</p><figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">[hjh@node01] ~ $ ls -l /dev</span><br><span class="line">total <span class="number">0</span></span><br><span class="line">···</span><br><span class="line">brw-rw----   <span class="number">1</span> root disk      <span class="number">8</span>,   <span class="number">0</span> Aug <span class="number">10</span> <span class="number">10</span>:<span class="number">22</span> sda</span><br><span class="line">brw-rw----   <span class="number">1</span> root disk      <span class="number">8</span>,   <span class="number">1</span> Aug <span class="number">10</span> <span class="number">10</span>:<span class="number">22</span> sda1</span><br><span class="line">brw-rw----   <span class="number">1</span> root disk      <span class="number">8</span>,   <span class="number">2</span> Aug <span class="number">10</span> <span class="number">10</span>:<span class="number">22</span> sda2</span><br><span class="line">brw-rw----   <span class="number">1</span> root disk      <span class="number">8</span>,   <span class="number">3</span> Aug <span class="number">10</span> <span class="number">10</span>:<span class="number">22</span> sda3</span><br><span class="line">brw-rw----   <span class="number">1</span> root disk      <span class="number">8</span>,  <span class="number">16</span> Oct <span class="number">17</span> <span class="number">14</span>:<span class="number">53</span> sdb</span><br><span class="line">brw-rw----   <span class="number">1</span> root disk      <span class="number">8</span>,  <span class="number">17</span> Oct <span class="number">17</span> <span class="number">14</span>:<span class="number">53</span> sdb1</span><br><span class="line">···</span><br></pre></td></tr></table></figure><p>忽略一堆没用的信息会发现几个disk组的磁盘标识，可以看到10月17日新加入的磁盘sdb。这个盘就是我们要手动挂载的。</p><p>也可以使用<code>fdisk -l</code> 来查看</p><figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">[root@node01] /home/hjh $ sudo fdisk -l</span><br><span class="line"></span><br><span class="line">Disk /dev/sda: <span class="number">250</span>.<span class="number">1</span> GB, <span class="number">250059350016</span> bytes</span><br><span class="line"><span class="number">255</span> heads, <span class="number">63</span> sectors/track, <span class="number">30401</span> cylinders</span><br><span class="line">Units = cylinders of <span class="number">16065</span> * <span class="number">512</span> = <span class="number">8225280</span> bytes</span><br><span class="line">Sector size (logical/physical): <span class="number">512</span> bytes / <span class="number">512</span> bytes</span><br><span class="line">I/O size (minimum/optimal): <span class="number">512</span> bytes / <span class="number">512</span> bytes</span><br><span class="line">Disk identifier: <span class="number">0</span>x000ad772</span><br><span class="line"></span><br><span class="line">   Device Boot      <span class="built_in">Start</span>         End      Blocks   Id  System</span><br><span class="line">/dev/sda1               <span class="number">1</span>       <span class="number">16710</span>   <span class="number">134217728</span>   <span class="number">82</span>  Linux swap / Solaris</span><br><span class="line">/dev/sda2   *       <span class="number">16710</span>       <span class="number">20626</span>    <span class="number">31457280</span>   <span class="number">83</span>  Linux</span><br><span class="line">/dev/sda3           <span class="number">20626</span>       <span class="number">30402</span>    <span class="number">78522368</span>   <span class="number">83</span>  Linux</span><br><span class="line"></span><br><span class="line">Disk /dev/sdb: <span class="number">2000</span>.<span class="number">4</span> GB, <span class="number">2000398934016</span> bytes</span><br><span class="line"><span class="number">255</span> heads, <span class="number">63</span> sectors/track, <span class="number">243201</span> cylinders</span><br><span class="line">Units = cylinders of <span class="number">16065</span> * <span class="number">512</span> = <span class="number">8225280</span> bytes</span><br><span class="line">Sector size (logical/physical): <span class="number">512</span> bytes / <span class="number">512</span> bytes</span><br><span class="line">I/O size (minimum/optimal): <span class="number">512</span> bytes / <span class="number">512</span> bytes</span><br><span class="line">Disk identifier: <span class="number">0</span>xe37ec37d</span><br><span class="line"></span><br><span class="line">   Device Boot      <span class="built_in">Start</span>         End      Blocks   Id  System</span><br><span class="line">/dev/sdb1               <span class="number">1</span>      <span class="number">243202</span>  <span class="number">1953512448</span>    <span class="number">7</span>  HPFS/NTFS</span><br></pre></td></tr></table></figure><h3 id="挂载"><a href="#挂载" class="headerlink" title="挂载"></a>挂载</h3><p>登陆root权限</p><figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">创建挂载点</span><br><span class="line">[hjh@node01] ~ # <span class="built_in">mkdir</span> /mnt/g2t</span><br><span class="line"></span><br><span class="line">挂载ext4等格式的盘</span><br><span class="line">[hjh@node01] ~ # mount /dev/sdb1 /mnt/g2t</span><br><span class="line"></span><br><span class="line">挂载exfat格式：</span><br><span class="line">[hjh@node01] ~ # mount.exfat -o uid=<span class="number">516</span>,gid=<span class="number">516</span>,umask=<span class="number">0022</span> /dev/sdb1 /mnt/g2t</span><br><span class="line"></span><br><span class="line">挂载ntfs格式,适用于本次操作：</span><br><span class="line">[hjh@node01] ~ # mount.ntfs-<span class="number">3</span>g -o uid=<span class="number">516</span>,gid=<span class="number">516</span>,umask=<span class="number">0022</span> /dev/sdb1 /mnt/g2t</span><br></pre></td></tr></table></figure><p>UID和GID 指定磁盘拥有者，可以 <code>cat/etc/passwd</code>查看</p><p>查看挂载结果</p><figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">[hjh@node01] ~ $ df -h</span><br><span class="line">Filesystem           Size  Used Avail Use% Mounted on</span><br><span class="line">···</span><br><span class="line"><span class="function">dataserver1:/<span class="title">data00</span>  131<span class="title">T</span>  122<span class="title">T</span>  2.6<span class="title">T</span>  98% /<span class="title">data00</span></span></span><br><span class="line"><span class="function">/<span class="title">dev</span>/<span class="title">sdb1</span>            1.9<span class="title">T</span>  1.2<span class="title">T</span>  726<span class="title">G</span>  62% /<span class="title">mnt</span>/<span class="title">g2t</span></span></span><br></pre></td></tr></table></figure><p>可以看到已经挂载成功了,<code>/mnt</code>目录下可以看到g2t盘属于hjh(uid&#x3D;516),属性是755</p><figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">[hjh@node01] ~ $ ls -l /mnt/</span><br><span class="line">drwxr-xr-x <span class="number">1</span> hjh  hjh  <span class="number">4096</span> Nov <span class="number">17</span> <span class="number">16</span>:<span class="number">27</span> g2t</span><br></pre></td></tr></table></figure><h3 id="挂载nfs文件共享系统"><a href="#挂载nfs文件共享系统" class="headerlink" title="挂载nfs文件共享系统"></a>挂载nfs文件共享系统</h3><p>目的是node01:&#x2F;mnt&#x2F;g2t 这个挂载好的系统共享到其他nodexx节点。<br>先设置<code>/etc/exports</code>问卷网，参考如下设置：</p><figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">[hjh@node01] ~ $cat /etc/exports</span><br><span class="line">/disks/hjh/disk1   <span class="number">192</span>.<span class="number">168</span>.<span class="number">1</span>.<span class="number">1</span>/<span class="number">255</span>.<span class="number">255</span>.<span class="number">255</span>.<span class="number">0</span>(rw,no_root_squash,async)</span><br><span class="line">/disks/hjh/disk2   <span class="number">192</span>.<span class="number">168</span>.<span class="number">1</span>.<span class="number">1</span>/<span class="number">255</span>.<span class="number">255</span>.<span class="number">255</span>.<span class="number">0</span>(rw,no_root_squash,async)</span><br><span class="line">/disks/zhang    <span class="number">192</span>.<span class="number">168</span>.<span class="number">1</span>.<span class="number">1</span>/<span class="number">255</span>.<span class="number">255</span>.<span class="number">255</span>.<span class="number">0</span>(rw,no_root_squash,async)</span><br><span class="line">/mnt/g2t           <span class="number">192</span>.<span class="number">168</span>.<span class="number">1</span>.<span class="number">1</span>/<span class="number">255</span>.<span class="number">255</span>.<span class="number">255</span>.<span class="number">0</span>(rw,no_root_squash,async)</span><br></pre></td></tr></table></figure><p>设好后重启nfs服务<code>exportfs -ra</code>。<br>然后其他节点再处理:<br>登录node05 root用户</p><figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">[hjh@node05] ~ # <span class="built_in">mkdir</span> /mnt/g2t</span><br><span class="line">[hjh@node05] ~ # mount -t nfs node01:/mnt/g2t /mnt/g2t</span><br></pre></td></tr></table></figure><p>可以百度nfs服务设置。</p><figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">[hjh@node05] ~ $ df -h</span><br><span class="line">Filesystem           Size  Used Avail Use% Mounted on</span><br><span class="line">/dev/sda             <span class="number">3</span>.<span class="number">6</span>T  <span class="number">331</span>G  <span class="number">3</span>.<span class="number">1</span>T  <span class="number">10</span>% /d6</span><br><span class="line">····</span><br><span class="line"><span class="function">node00:/<span class="title">data01</span>        11<span class="title">T</span>  9.4<span class="title">T</span>  358<span class="title">G</span>  97% /<span class="title">data01</span></span></span><br><span class="line"><span class="function">····</span></span><br><span class="line"><span class="function"><span class="title">dataserver1</span>:/<span class="title">data00</span>  131<span class="title">T</span>  122<span class="title">T</span>  2.6<span class="title">T</span>  98% /<span class="title">data00</span></span></span><br><span class="line"><span class="function">···</span></span><br><span class="line"><span class="function"><span class="title">node01</span>:/<span class="title">mnt</span>/<span class="title">g2t</span>      1.9<span class="title">T</span>  1.2<span class="title">T</span>  726<span class="title">G</span>  62% /<span class="title">mnt</span>/<span class="title">g2t</span></span></span><br></pre></td></tr></table></figure><p>可以看到来自其他节点的共享盘。</p>]]></content>
      
      
      <categories>
          
          <category> Dev&amp;Ops </category>
          
      </categories>
      
      
        <tags>
            
            <tag> NFS </tag>
            
            <tag> Ubuntu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>NCL进行轨道裁剪</title>
      <link href="/blog/data-n-method/research-ncl-crop-orbit-swath/"/>
      <url>/blog/data-n-method/research-ncl-crop-orbit-swath/</url>
      
        <content type="html"><![CDATA[<p>以AE_L2A数据为例进行处理。<br>下载的数据包括全球16~17条轨道。</p><p>初步裁剪：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">;;;获得轨道的四至点行列下标</span><br><span class="line">ji = region_ind(Latitude_Low_Res_2d,Longitude_Low_Res_2d, latS, latN, lonW, lonE)</span><br><span class="line">jStrt = ji(0) ; lat start</span><br><span class="line">jLast = ji(1) ; lat last</span><br><span class="line">iStrt = ji(2) ; lon start</span><br><span class="line">iLast = ji(3) ; lon last</span><br><span class="line">LAT2D = Latitude_Low_Res_2d(jStrt:jLast,iStrt:iLast)</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/jihenghu/hexo-asset@master/image/ae_swath_crop_domain.png"><br>grey dashed表示的是全部的轨道覆盖范围。<br>阴影区是上述代码裁处的涉及到ROI(region of interest)的轨道。这样可以节省内存开销。<br>进一步的，使用land&gt; 50% 进行水体缺测<br><img src="https://cdn.jsdelivr.net/gh/jihenghu/hexo-asset@master/image/ae_swath_crop_domain_land50.png">  </p>]]></content>
      
      
      <categories>
          
          <category> Data N&#39; Method </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Method </tag>
            
            <tag> NCL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>卫星信号积分问题初探</title>
      <link href="/blog/data-n-method/rs-incremental-soild-angle/"/>
      <url>/blog/data-n-method/rs-incremental-soild-angle/</url>
      
        <content type="html"><![CDATA[<p>最近阅读被动微波天线信号积分时，亲自画了一张图像，展示立体角微分表达式的推导场景：  </p><p align="center"><img src="rs-solid-angle-geometery.png" title="soil angle" alt="soil angle" style="height:300px;width:auto;"> </p>天线瞬时接受的信号来自于卫星瞬时视野IFOV内部地面上的不同位置的信号贡献效果：天线温度为T<sub>A</sub>，地面上p点的亮温贡献为T<sub>B</sub>(p)   <p align="center"><img src="soild-angle-equa-1.png" title="equa_1" alt="equa_1"> <img src="soild-angle-equa-2.png" title="equa_2" alt="equa_2"> </p><p>但是，由于卫星在积分时段内T内是移动的，有效视场EFOV必须是瞬时视场的时间积分，并且瞬时视场是时间的函数。<br>那么序号为i的EFOV时刻积分区间[t<sub>i</sub>-T&#x2F;2,t<sub>i</sub>+T&#x2F;2],有效天线温度为：  </p><p align="center"><img src="soild-angle-equa-3.png" title="equa_3" alt="equa_3"> </p><p>虽然随着卫星移动和扫描，TB的采样位置会随时间变化，但是在极短的积分时间内(&lt;8ms)，可以近视忽略亮温场的变化。<br>那么在t<sub>i</sub>的TA可以表示为等效的天线增益图案和一个近视不变EFOV内亮温场的积分：</p><p align="center"><img src="soild-angle-equa-4.png" title="equa_4" alt="equa_4"> </p>等效的天线增益图案可以表示为时间的积分：<p align="center"><img src="soild-angle-equa-5.png" title="equa_5" alt="equa_5"> </p><p>按照Backus-Gilbert,Stogryn等人的处理思路，观测Resample过程中，粗分辨率的重建信号和内部多个i序号的高分辨率观测的关系应该是一个线性平均问题：</p><img src="soild-angle-equa-6.png" title="equa_6" alt="equa_6"> <p>使用一组权重系数对信号进行重建，权重系数的约束条件为：</p><p><img src="/blog/soild-angle-equa-7.png" alt="equa_7"></p><div class="note info flat"><h3 id="NSIDC0630-ATBD"><a href="#NSIDC0630-ATBD" class="headerlink" title="NSIDC0630 ATBD"></a>NSIDC0630 ATBD</h3><p>In generating gridded data, only measurements from a single sensor and channel are processed. Measurements have different azimuth and incidence angles (though the incidence angle variation is small).<br>Measurements from multiple orbit passes over a narrow local time may be combined.<br>When multiple measurements are combined, the resulting images represent a non-linear weighted average of the measurements over the averaging period.<br>There is an implicit assumption that the surface characteristics remain constant over the imaging period and that there is no azimuth variation in the true surface TB.</p></div>  ]]></content>
      
      
      <categories>
          
          <category> Data N&#39; Method </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Satellite </tag>
            
            <tag> Remote_sensing </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>修复开启Pjax环境下Charts类插件异常加载</title>
      <link href="/blog/blog/hexo/fix-charts-pjax/"/>
      <url>/blog/blog/hexo/fix-charts-pjax/</url>
      
        <content type="html"><![CDATA[<h3 id="场景"><a href="#场景" class="headerlink" title="场景"></a>场景</h3><p>使用<code>butterfly</code>主题，<mark class="hl-label default">success@配置全局吸底式播放器</mark> ，需要开启Pjax服务，预加载站内资源。<br>但是在使用’hexo-charts’,’hexo-calendar’时，出现对象重复创建导致的报错。</p><p>类似这样的插件，初始化时会受pjax影响无法二次渲染，只能刷新才能销毁原有的声明对象。<br>报错信息：<br><code>VM5117:1 Uncaught SyntaxError: Identifier ‘calendarChart’ has already been declared</code><br>就是说下面这里重复初始化除了问题：<br><small>calendar 插件的部分源码</small>  </p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">  &lt;script type=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><br><span class="line">.......</span><br><span class="line">    <span class="keyword">let</span> calendarChart = echarts.<span class="title function_">init</span>(<span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;calendar&#x27;</span>));</span><br><span class="line">    <span class="keyword">let</span> endDate = <span class="keyword">new</span> <span class="title class_">Date</span>().<span class="title function_">getTime</span>()</span><br><span class="line">.......</span><br></pre></td></tr></table></figure><h3 id="求助"><a href="#求助" class="headerlink" title="求助"></a>求助</h3><p>网上的建议一大堆，有要求修改pjax源码的，有要修改pjax初始化绑定对象的。<br>由于次的问题情形都不是很好的解决办法，也无法手动配置Pjax设置，修改源码更不可能，版本差异导致的修改需要自己对pjax源码有充分的理解。<br>无奈之下求助<a href="https://blog.hclonely.com/posts/bdd7db89/">@HCLonely</a><br><img src="https://cdn.jsdelivr.net/gh/jihenghu/hexo-asset@master/image/pjax-charts-report.png">  </p><p>获得的建议如下：  </p><ul><li>使用<code>var</code> 关键字代替<code>let</code> 进行对象的重新创建；</li><li>使用自执行函数<code>(function()&#123; /* code */ &#125;)()</code> 进行刷新加载。</li></ul><p>都是对插件源码进行修改。看样子没办法了，还好这几个插件的js源码都比较简单。</p><div class="note warning flat"><p>不想修改源码是因为如果动了博客配置之外的插件或者主题文件的源码，那么你就多一样需要维护的版本了。对于以后的升级，站点项目移植来说还是挺麻烦的。所以尽量使用配置文件和脚本注入，不要动主题源码。</p></div><h3 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h3><p>第一个建议很好理解，但是用起来太麻烦，需要修改的变量声明很多<br>如<code>hexo-calendar</code>的源码注入部分：</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">...</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">let</span> calendarChart = echarts.<span class="title function_">init</span>(<span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;$&#123;id&#125;&#x27;</span>));</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">let</span> endDate = <span class="keyword">new</span> <span class="title class_">Date</span>().<span class="title function_">getTime</span>()</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">let</span> startDate = <span class="keyword">new</span> <span class="title class_">Date</span>(endDate - $&#123;weeks&#125;*<span class="number">7</span>*<span class="number">24</span>*<span class="number">3600</span>*<span class="number">1000</span>).<span class="title function_">getTime</span>()</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">let</span> startDay = <span class="title class_">Math</span>.<span class="title function_">ceil</span>(startDate/(<span class="number">24</span>*<span class="number">3600</span>*<span class="number">1000</span>))</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">let</span> endDay = <span class="title class_">Math</span>.<span class="title function_">ceil</span>(endDate/(<span class="number">24</span>*<span class="number">3600</span>*<span class="number">1000</span>))</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">let</span> commitData = $&#123;commitData&#125;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">let</span> seriesData = []</span></span><br><span class="line"><span class="language-javascript">...</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>第二条,可以避免上述的问题。对上述的代码进行封装，每次进入页面时会自动销毁重新加载相关对象。<br>不过这些charts类插件都依赖于Echarts库，所以需要在主题配置文件中注入echarts源。</p><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="string">theme/butterfly/_config.yml</span></span><br><span class="line"><span class="attr">inject:</span></span><br><span class="line">  <span class="attr">bottom:</span></span><br><span class="line">   <span class="bullet">-</span> <span class="string">&lt;script</span> <span class="string">src=&quot;https://cdn.jsdelivr.net/npm/echarts@4.8.0/dist/echarts.min.js&quot;&gt;&lt;/script&gt;</span></span><br></pre></td></tr></table></figure><p>最后修复成功：</p><div id="calendar_box" style="width:100%;overflow-x:auto;overflow-y:hidden;"><div id="calendar" style="width: 790px;height:165px;"></div></div><script src="https://cdn.jsdelivr.net/npm/echarts@4.8.0/dist/echarts.min.js"></script><script type="text/javascript">  (function(){    function dateFormat(date){      date = new Date(date)      return date.getFullYear() + '-' + (date.getMonth() + 1).toString().padStart(2, '0') + '-' + date.getDate().toString().padStart(2, '0')    }    let calendarChart = echarts.init(document.getElementById('calendar'));    let endDate = new Date().getTime()    let startDate = new Date(endDate - 40*7*24*3600*1000).getTime()    let startDay = Math.ceil(startDate/(24*3600*1000))    let endDay = Math.ceil(endDate/(24*3600*1000))    let commitData = {"":1}    let seriesData = []    for(let i = startDay;i <= endDay;i++){      let date = i*24*3600*1000      let formatDate = dateFormat(date)      let times = commitData[formatDate] || 0      seriesData.push([formatDate, times])    }    let option = {      title: {        text: "热点日历",        x: "center"      },      backgroundColor: "#f9f9f9",      tooltip: {        padding: 10,        backgroundColor: "#555",        borderColor: "#777",        borderWidth: 1,        formatter: function(a) {          var b = a.value;          return '<div style="font-size: 14px;">' + b[0] + "：" + b[1] + "</div>"        }      },      visualMap: {        show: !1,        showLabel: !0,        min: 0,        max: 4,        calculable: !1,        inRange: {          symbol: "rect",          color: ["#ebedf0", "#c6e48b", "#7bc96f", "#239a3b", "#196127"]        },        itemWidth: 12,        itemHeight: 12,        orient: "horizontal",        left: "center",        top: 0      },      calendar: [{        top: 50,        left: "center",        range: [dateFormat(startDate), dateFormat(endDate)],        cellSize: [13, 13],        splitLine: {          show: !1        },        name: {          textStyle: {            color: "#3C4858"          }        },        itemStyle: {          borderColor: "#fff",          borderWidth: 2        },        yearLabel: {          show: !1        },        monthLabel: {          nameMap: "cn",          fontSize: 11,          color: "#3C4858"        },        dayLabel: {          formatter: "{start} 1st",          nameMap: "cn",          fontSize: 11,          color: "#3C4858"        }      }],      series: [{        type: "heatmap",        coordinateSystem: "calendar",        calendarIndex: 0,        data: seriesData      }]    };    calendarChart.setOption(option);    let box = document.getElementById("calendar_box")    let child = document.getElementById("calendar")    window.addEventListener('load',function(){        box.scrollLeft = (child.clientWidth - box.clientWidth) / 2    })  })();</script><div id="posts-chart"></div><p>最后感谢@HCLonely提供的方案，和包括他在内的开源贡献者提供的众多有趣而实用的插件。</p><div class="note success flat"><ul><li>HCLonely已经对<a href="https://github.com/HCLonely/hexo-calendar">Hexo-calendar</a>插件进行了以上修复，直接使用就行了。具体操作详见<a href="https://blog.hclonely.com/posts/bdd7db89/">hexo-calendar 活动日历插件</a></li></ul></div>]]></content>
      
      
      <categories>
          
          <category> Blog </category>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Butterfly </tag>
            
            <tag> Hexo </tag>
            
            <tag> Pjax </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Butterfly主题美化</title>
      <link href="/blog/blog/hexo/butterfly-beautify/"/>
      <url>/blog/blog/hexo/butterfly-beautify/</url>
      
        <content type="html"><![CDATA[<div class="note primary flat"><p>记录我对butterfly主题的一些修改，持续更新。</p></div><h3 id="置顶标签"><a href="#置顶标签" class="headerlink" title="置顶标签"></a>置顶标签</h3><p>适用于已卸载自带的<code>hexo-generator-index</code>插件,添加使用<code>hexo-generator-indexed</code>插件实现置顶功能的小伙伴。<br>在post类中的front-matter列表中使用<code>sticky: 1</code> 实现置顶，数字越大，置顶优先级越高。<br>详见<a href="https://demo.jerryc.me/posts/4aa8abbe/#%E6%96%87%E7%AB%A0%E7%BD%AE%E9%A0%82">Butterfly 文档</a>  </p><p>修改<code>themes\butterfly\layout\includes\mixins\post-ui.pug</code>模板  </p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mixin postUI(posts)</span><br><span class="line">  each article , index in page.posts.data</span><br><span class="line">    .recent-post-item</span><br><span class="line">      if (is_home() &amp;&amp; (article.top || article.sticky &gt; 0))  ##判断是否有置顶属性sticky</span><br><span class="line">        span.top-flag= _p(&#x27;Highlighted&#x27;)                     ##添加一个p标签&lt;p class=&quot;top-flag&quot;&gt;Highlighted&lt;/p&gt;</span><br><span class="line">      - let link = article.link || article.path</span><br><span class="line">      - let title = article.title || _p(&#x27;no_title&#x27;)</span><br></pre></td></tr></table></figure><p>使用注入方式设置样式,主题配置文件：</p><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">inject:</span></span><br><span class="line">  <span class="attr">head:</span></span><br><span class="line">    <span class="comment">## 设置置顶标签的样式</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&#x27;&lt;style&gt;.top-flag&#123;display:inline-block;text-align:center;width:280px;line-height:20px;position:absolute;top:20px;right:-110px;z-index:2;overflow:hidden;transform:rotate(45deg);-ms-transform:rotate(45deg);-moz-transform:rotate(45deg);-webkit-transform:rotate(45deg);-o-transform:rotate(45deg);border:1px dashed;box-shadow:0 0 0 1px #fff,0 21px 5px -18px rgba(0,0,0,.6);background-color:#eef3fc;color:#2160c4;font-size:12px&#125;&lt;/style&gt;&#x27;</span> </span><br><span class="line">    <span class="comment">## 修改文章列表的position和overflow属性让置顶标签来继承</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&#x27;&lt;style&gt;.recent-post-item&#123;position:relative;overflow:hidden&#125;&lt;/style&gt;&#x27;</span></span><br></pre></td></tr></table></figure><p>效果<br><img src="https://cdn.jsdelivr.net/gh/jihenghu/hexo-asset@master/image/butterfly-beautify-indexed-label.png">  </p><hr><h3 id="Label标签高亮"><a href="#Label标签高亮" class="headerlink" title="Label标签高亮"></a>Label标签高亮</h3><p>在Hexo-Next主题中使用的较多，在此扩展到Butterfly上。效果就是给文本加上有颜色的高亮。<br>使用方法：  </p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;% label [class]@Text %&#125;</span><br><span class="line"> *</span><br><span class="line"> * [class] : default | primary | success | info | warning | danger.</span><br><span class="line"> * If not defined, default class will be selected.</span><br></pre></td></tr></table></figure><p>这是一个闭合标签，不需要<code>&#123;% endlabel %&#125;</code>这种形式，例如：<br>&#96;</p>]]></content>
      
      
      <categories>
          
          <category> Blog </category>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Butterfly </tag>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Butterfly的一些特性</title>
      <link href="/blog/blog/hexo/hello-world-misc/"/>
      <url>/blog/blog/hexo/hello-world-misc/</url>
      
        <content type="html"><![CDATA[<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;% note default %&#125;</span><br><span class="line">default 提示块标籤</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note primary no-icon %&#125;</span><br><span class="line">primary 提示块标籤</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note success %&#125;</span><br><span class="line">success 提示块标籤</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note info %&#125;</span><br><span class="line">info 提示块标籤</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note warning %&#125;</span><br><span class="line">warning 提示块标籤</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note danger %&#125;</span><br><span class="line">danger 提示块标籤</span><br><span class="line">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><div class="note default flat"><p>default 提示块标籤</p></div><div class="note primary no-icon flat"><p>primary 提示块标籤</p></div><div class="note success flat"><p>success 提示块标籤</p></div><div class="note info flat"><p>info 提示块标籤</p></div><div class="note warning flat"><p>warning 提示块标籤</p></div><div class="note danger flat"><p>danger 提示块标籤</p></div><h3 id="Gallery"><a href="#Gallery" class="headerlink" title="Gallery"></a>Gallery</h3><div class="gallery-group-main">  <figure class="gallery-group">  <img class="gallery-group-img no-lightbox" src='https://i.loli.net/2019/11/10/T7Mu8Aod3egmC4Q.png' alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">壁纸</div>  <p>收藏的一些壁纸</p>  <a href='/blog/Gallery/wallpaper'></a>  </figcaption>  </figure>    <figure class="gallery-group">  <img class="gallery-group-img no-lightbox" src='https://i.loli.net/2019/12/25/8t97aVlp4hgyBGu.jpg' alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">漫威</div>  <p>关于漫威的图片</p>  <a href='/blog/Gallery/marvel'></a>  </figcaption>  </figure>    <figure class="gallery-group">  <img class="gallery-group-img no-lightbox" src='https://i.loli.net/2019/12/25/hOqbQ3BIwa6KWpo.jpg' alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">OH MY GIRL</div>  <p>关于OH MY GIRL的图片</p>  <a href='/blog/Gallery/ohmygirl'></a>  </figcaption>  </figure>  </div><div class="gallery">    <div class="fj-gallery  data" data-rowHeight="220" data-limit="10">    <span class="gallery-data">[{"url":"https://i.loli.net/2019/12/25/Fze9jchtnyJXMHN.jpg","alt":""},{"url":"https://i.loli.net/2019/12/25/ryLVePaqkYm4TEK.jpg","alt":""},{"url":"https://i.loli.net/2019/12/25/gEy5Zc1Ai6VuO4N.jpg","alt":""},{"url":"https://i.loli.net/2019/12/25/d6QHbytlSYO4FBG.jpg","alt":""},{"url":"https://i.loli.net/2019/12/25/6nepIJ1xTgufatZ.jpg","alt":""},{"url":"https://i.loli.net/2019/12/25/E7Jvr4eIPwUNmzq.jpg","alt":""},{"url":"https://i.loli.net/2019/12/25/mh19anwBSWIkGlH.jpg","alt":""},{"url":"https://i.loli.net/2019/12/25/2tu9JC8ewpBFagv.jpg","alt":""}]</span>    </div>    <button class="gallery-load-more"><span>Load More</span><i class="fa-solid fa-arrow-down"></i></button>    </div><div class="mermaid-wrap"><pre class="mermaid-src" hidden>  pie    title Key elements in Product X    &quot;Calcium&quot; : 42.96    &quot;Potassium&quot; : 50.05    &quot;Magnesium&quot; : 10.01    &quot;Iron&quot; :  5  </pre></div>]]></content>
      
      
      <categories>
          
          <category> Blog </category>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Butterfly </tag>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>What makes a good PhD student?</title>
      <link href="/blog/research/What%20makes%20a%20good%20PhD%20student/"/>
      <url>/blog/research/What%20makes%20a%20good%20PhD%20student/</url>
      
        <content type="html"><![CDATA[<div class="note success flat"><h3 id="史记·平津侯主父列传"><a href="#史记·平津侯主父列传" class="headerlink" title="史记·平津侯主父列传"></a>史记·平津侯主父列传</h3><p>大丈夫生不得五鼎食,死亦当五鼎烹耳   </p></div>  <p>开始读博压力很大，每天感觉时间流逝的飞快，工作又像一团乱麻，索性可以做的东西很多。<br>分享一篇来自《Nature》（Vol 441 11,May 2006） 的tips，对照一下自己。  </p><div class="row">    <embed src="2006Nature-What-Makes-A-Good-PhD-Student.pdf" width="100%" height="550" type="application/pdf"></div><p>Doing a PhD should be fun and rewarding, because you can spend all your working time discovering things and pursuing ideas — and getting paid for it, without any administrative responsibilities.<br>Those who stick with a career in science do so because, despite the relatively poor pay, long hours and lack of security, it is all we want to do.<br>Unfortunately most new PhD students are ill-prepared, and as a consequence very few will fulfil their aspirations to be independent scientists.<br>The main reasons for this are the ‘grade creep’ inherent at most universities, making it difficult to identify the really talented first-class graduates from the rest, and the pressure on universities to graduate as many PhD students as possible.<br>The consequence is that we enrol far too many of them without telling them clearly what doing a doctorate should entail.<br>We therefore set ourselves, and the students, on a path of frustration and disappointment.  </p><p>So what should we be telling prospective PhD students?  </p><ul><li>Choose a supervisor whose work you admire and who is well supported by grants and departmental infrastructure.  </li><li>Take <strong>responsibility</strong> for your project.  </li><li><strong>Work hard</strong> — long days all week and part of most weekends. <blockquote><p>If research is your passion this should be easy, and if it isn’t, you are probably in the wrong field.<br>Note who goes home with a full briefcase to work on at the end of the day.<br>This is a cause of success, not a consequence.  </p></blockquote></li><li>Take some weekends off, and decent holidays, so you don’t burn out.  </li><li>Read the <strong>literature</strong> in your immediate area, both current and past, and around it.   <blockquote><p>You can’t possibly make an original contribution to the literature unless you know what is already there.    </p></blockquote></li><li><strong>Plan</strong> your days and weeks carefully to dovetail experiments so that you have a minimum amount of downtime.  </li><li>Keep a good lab book and <strong>write it up</strong> every day.  </li><li>Be <strong>creative</strong>. Think about what you are doing and why, and look for better ways to go.   <blockquote><p>Don’t see your PhD as just a road map laid out by your supervisor.  </p></blockquote></li><li>Develop good <strong>writing skills</strong>: they will make your scientific career immeasurably easier.  </li><li>To be successful you must be at least four of the following: <strong>smart, motivated, creative, hard-working, skilful and lucky</strong>.  <blockquote><p>You can’t depend on luck, so you had better focus on the others!</p></blockquote></li></ul><div class="note info flat"><p>作者, Austra<br>Georgia Chenevix-Trench is principal research fellow at the Queensland Institute of Medical Research, Royal Brisbane Hospital, Herstonlia.<br>➧ <a href="http://www.qimr.edu.au/research/labs/georgiat/Guideforphds.doc">www.qimr.edu.au/research/labs/georgiat/Guideforphds.doc</a>  </p></div>]]></content>
      
      
      <categories>
          
          <category> Research </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Notes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>倒腾Django-创建django应用前端模板</title>
      <link href="/blog/blog/django/build.django.blog.templates/"/>
      <url>/blog/blog/django/build.django.blog.templates/</url>
      
        <content type="html"><![CDATA[<div class="note success no-icon flat"><p>Django系列是我在接触Python应用框架以后学习的后台框架。同时还有python的三大框架Flask，Django，Tornado。都有过了解，从此开始想后端领域进发。<br>相较于Spring-boot这类JAVA框架，Django可以说是十分新手友好了。VUE+Django+Mysql完全满足企业级的应用要求。我这里就是使用Sqlite进行M(odel)T(emplate)V(iew)框架搭建。<br>从此我开始接触后端。再后来开始使用JAVA框架，学习云服务。但是用的最多的还是Django，用它重构了Luoo网，用它搭建了课题组网站。<br>这是最初在win10虚拟机上开始的学习笔记,那时候参考的是‘追梦人物’的博客教程。我这里只是记录，年代久了，而且很乱。详细的入门级的教程可以去学习dusai大哥&gt; dusaiphoto.com。</p></div><h2 id="使用模板系统"><a href="#使用模板系统" class="headerlink" title="使用模板系统"></a>使用模板系统</h2><p>在 blog\urls.py 中写入这些代码：<br>blog&#x2F;urls.py  </p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> django.conf.urls <span class="keyword">import</span> url</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> . <span class="keyword">import</span> views</span><br><span class="line"></span><br><span class="line">urlpatterns = [</span><br><span class="line">    url(<span class="string">r&#x27;^$&#x27;</span>, views.index, name=<span class="string">&#x27;index&#x27;</span>),</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>在我们的项目根目录（即 <code>manage.py</code> 文件所在目录）下建立一个名为 <code>templates </code>的文件夹，用来存放我们的模板。<br>然后在 <code>templates\ </code>目录下建立一个名为<code>blog</code>的文件夹，用来存放和 <code>blog </code>应用相关的模板。<br>我们在 <code>templates\blog </code>目录下建立一个名为 <code>index.html </code>的文件，此时你的目录结构应该是这样的：  </p><figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">blogproject\</span><br><span class="line">    manage.py</span><br><span class="line">    blogproject\</span><br><span class="line">        __init__.py</span><br><span class="line">        settings.py</span><br><span class="line">        ...</span><br><span class="line">    blog\</span><br><span class="line">        __init__.py</span><br><span class="line">        models.py</span><br><span class="line">        ,,,</span><br><span class="line">    templates\</span><br><span class="line">        blog\</span><br><span class="line">            index.html</span><br></pre></td></tr></table></figure><p>在<code> templates\blog\index.html</code> 文件里写入下面的代码：  </p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>&#123;&#123; title &#125;&#125;<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>&#123;&#123; welcome &#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>这是一个标准的 HTML 文档，只是里面有两个比较奇怪的地方：<code>&#123;&#123; title &#125;&#125;</code>，<code>&#123;&#123; welcome &#125;&#125; </code>。<br>这是 Django 规定的语法。用 <code>&#123;&#123; &#125;&#125;</code> 包起来的变量叫做模板变量。<br>Django 在渲染这个模板的时候会根据我们传递给模板的变量替换掉这些变量，最终在模板中显示的将会是我们传递的值。  </p><p>在 <code>settings.py </code>找到<code>TEMPLATES</code>选项，它的内容是这样的：<br>blogproject&#x2F;settings.py</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">TEMPLATES = [</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="string">&#x27;BACKEND&#x27;</span>: <span class="string">&#x27;django.template.backends.django.DjangoTemplates&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;DIRS&#x27;</span>: [],</span><br><span class="line">        <span class="string">&#x27;APP_DIRS&#x27;</span>: <span class="literal">True</span>,</span><br><span class="line">        <span class="string">&#x27;OPTIONS&#x27;</span>: &#123;</span><br><span class="line">            <span class="string">&#x27;context_processors&#x27;</span>: [</span><br><span class="line">                <span class="string">&#x27;django.template.context_processors.debug&#x27;</span>,</span><br><span class="line">                <span class="string">&#x27;django.template.context_processors.request&#x27;</span>,</span><br><span class="line">                <span class="string">&#x27;django.contrib.auth.context_processors.auth&#x27;</span>,</span><br><span class="line">                <span class="string">&#x27;django.contrib.messages.context_processors.messages&#x27;</span>,</span><br><span class="line">            ],</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;,</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>其中 DIRS 就是设置模板的路径，在 <code>[]</code> 中写入 <code>os.path.join(BASE_DIR, &#39;templates&#39;)</code>，即像下面这样：  </p><p>blogproject&#x2F;settings.py  </p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">TEMPLATES = [</span><br><span class="line">    &#123;</span><br><span class="line">        ...</span><br><span class="line">        <span class="string">&#x27;DIRS&#x27;</span>: [os.path.join(BASE_DIR, <span class="string">&#x27;templates&#x27;</span>)],</span><br><span class="line">        ...</span><br><span class="line">    &#125;,</span><br><span class="line">]</span><br><span class="line">```  </span><br><span class="line">`BASE_DIR` 是 `settings.py` 在配置开头前面定义的变量，记录的是工程根目录 `blogproject\ `的值（注意是最外层的` blogproject\` 目录）。</span><br><span class="line">在这个目录下有模板文件所在的目录 `templates\`，于是利用`os.path.join` 把这两个路径连起来，构成完整的模板路径，`Django` 就知道去这个路径下面找我们的模板了。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">视图函数可以改一下了：  </span><br><span class="line">blog/views.py  </span><br><span class="line">```python</span><br><span class="line"><span class="keyword">from</span> django.http <span class="keyword">import</span> HttpResponse</span><br><span class="line"><span class="keyword">from</span> django.shortcuts <span class="keyword">import</span> render</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">index</span>(<span class="params">request</span>):</span><br><span class="line">    <span class="keyword">return</span> render(request, <span class="string">&#x27;blog/index.html&#x27;</span>, context=&#123;</span><br><span class="line">                      <span class="string">&#x27;title&#x27;</span>: <span class="string">&#x27;我的博客首页&#x27;</span>, </span><br><span class="line">                      <span class="string">&#x27;welcome&#x27;</span>: <span class="string">&#x27;欢迎访问我的博客首页&#x27;</span></span><br><span class="line">                  &#125;)</span><br></pre></td></tr></table></figure><p><code>cmd python manage.py runserver</code>   重启服务并查看效果。  </p>]]></content>
      
      
      <categories>
          
          <category> Blog </category>
          
          <category> Django </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Django </tag>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>倒腾Django-创建 Admin 后台管理员账户</title>
      <link href="/blog/blog/django/build.django.admin/"/>
      <url>/blog/blog/django/build.django.admin/</url>
      
        <content type="html"><![CDATA[<div class="note success no-icon flat"><p>Django系列是我在接触Python应用框架以后学习的后台框架。同时还有python的三大框架Flask，Django，Tornado。都有过了解，从此开始想后端领域进发。<br>相较于Spring-boot这类JAVA框架，Django可以说是十分新手友好了。VUE+Django+Mysql完全满足企业级的应用要求。我这里就是使用Sqlite进行M(odel)T(emplate)V(iew)框架搭建。<br>从此我开始接触后端。再后来开始使用JAVA框架，学习云服务。但是用的最多的还是Django，用它重构了Luoo网，用它搭建了课题组网站。<br>这是最初在win10虚拟机上开始的学习笔记,那时候参考的是‘追梦人物’的博客教程。我这里只是记录，年代久了，而且很乱。详细的入门级的教程可以去学习dusai大哥&gt; dusaiphoto.com。</p></div><h2 id="创建-Admin-后台管理员账户"><a href="#创建-Admin-后台管理员账户" class="headerlink" title="创建 Admin 后台管理员账户"></a>创建 Admin 后台管理员账户</h2><p>运行 python manage.py createsuperuser 命令新建一个：  </p><figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line"><span class="function">C:\<span class="title">Users</span>\<span class="title">Herrera</span>\<span class="title">djangoopt</span>\<span class="title">djblog</span>&gt;<span class="title">python</span> <span class="title">manage.py</span> <span class="title">createsuperuser</span></span></span><br><span class="line"><span class="function"><span class="title">Username</span> (<span class="title">leave</span> <span class="title">blank</span> <span class="title">to</span> <span class="title">use</span> &#x27;<span class="title">herrera</span>&#x27;): <span class="title">jihenghu</span></span></span><br><span class="line"><span class="function"><span class="title">Email</span> <span class="title">address</span>: <span class="title">hjh18305</span>@<span class="title">gmail.com</span></span></span><br><span class="line"><span class="function"><span class="title">Password</span>:</span></span><br><span class="line"><span class="function"><span class="title">Password</span> (<span class="title">again</span>):</span></span><br><span class="line"><span class="function"><span class="title">Superuser</span> <span class="title">created</span> <span class="title">successfully</span>.</span></span><br></pre></td></tr></table></figure><p>[jihenghu 888888888]</p><h2 id="在-Admin-后台注册模型"><a href="#在-Admin-后台注册模型" class="headerlink" title="在 Admin 后台注册模型"></a>在 Admin 后台注册模型</h2><p>这样 Django Admin 才能知道它们的存在，注册非常简单，只需要在 blog\admin.py 中加入下面的代码：  </p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#blog/admin.py</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> django.contrib <span class="keyword">import</span> admin</span><br><span class="line"><span class="keyword">from</span> .models <span class="keyword">import</span> Post, Category, Tag</span><br><span class="line"></span><br><span class="line">admin.site.register(Post)</span><br><span class="line">admin.site.register(Category)</span><br><span class="line">admin.site.register(Tag)</span><br></pre></td></tr></table></figure><p>python manage.py runserver启动服务，访问：localhost:8000&#x2F;admin&#x2F; 即可进入后台。  </p><p>在 admin post 列表页面，我们只看到了文章的标题<br>但是我们希望它显示更加详细的信息，这需要我们来定制 Admin 了，在 admin.py 添加如下代码：<br>blog&#x2F;admin.py  </p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> django.contrib <span class="keyword">import</span> admin</span><br><span class="line"><span class="keyword">from</span> .models <span class="keyword">import</span> Post, Category, Tag</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">PostAdmin</span>(admin.ModelAdmin):</span><br><span class="line">    list_display = [<span class="string">&#x27;title&#x27;</span>, <span class="string">&#x27;created_time&#x27;</span>, <span class="string">&#x27;modified_time&#x27;</span>, <span class="string">&#x27;category&#x27;</span>, <span class="string">&#x27;author&#x27;</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 把新增的 PostAdmin 也注册进来</span></span><br><span class="line">admin.site.register(Post, PostAdmin)</span><br><span class="line">admin.site.register(Category)</span><br><span class="line">admin.site.register(Tag)</span><br></pre></td></tr></table></figure><p>刷新 Admin Post 列表页面，可以看到显示的效果好多了。  </p>]]></content>
      
      
      <categories>
          
          <category> Blog </category>
          
          <category> Django </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Django </tag>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>倒腾Django-创建django应用blog</title>
      <link href="/blog/blog/django/build.django.blog/"/>
      <url>/blog/blog/django/build.django.blog/</url>
      
        <content type="html"><![CDATA[<div class="note success no-icon flat"><p>Django系列是我在接触Python应用框架以后学习的后台框架。同时还有python的三大框架Flask，Django，Tornado。都有过了解，从此开始想后端领域进发。<br>相较于Spring-boot这类JAVA框架，Django可以说是十分新手友好了。VUE+Django+Mysql完全满足企业级的应用要求。我这里就是使用Sqlite进行M(odel)T(emplate)V(iew)框架搭建。<br>从此我开始接触后端。再后来开始使用JAVA框架，学习云服务。但是用的最多的还是Django，用它重构了Luoo网，用它搭建了课题组网站。<br>这是最初在win10虚拟机上开始的学习笔记,那时候参考的是‘追梦人物’的博客教程。我这里只是记录，年代久了，而且很乱。详细的入门级的教程可以去学习dusai大哥&gt; dusaiphoto.com。</p></div><p>环境：cmd(windows NT)<br>工具：Python (V 3.6.4)  </p><h2 id="工作目录"><a href="#工作目录" class="headerlink" title="工作目录"></a>工作目录</h2><figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line"><span class="function">C:\<span class="title">Users</span>\<span class="title">Herrera</span>&gt;<span class="title">mkdir</span> <span class="title">djangoopt</span></span></span><br><span class="line"><span class="function"><span class="title">C</span>:\<span class="title">Users</span>\<span class="title">Herrera</span>&gt;<span class="title">cd</span> <span class="title">djangoopt</span></span></span><br><span class="line"><span class="function"><span class="title">C</span>:\<span class="title">Users</span>\<span class="title">Herrera</span>\<span class="title">djangoopt</span>&gt;<span class="title">dir</span> #查看文件夹内容</span></span><br></pre></td></tr></table></figure><h2 id="Install"><a href="#Install" class="headerlink" title="Install"></a>Install</h2><h3 id="安装-python3-，pip"><a href="#安装-python3-，pip" class="headerlink" title="安装 python3 ，pip"></a>安装 python3 ，pip</h3><p>官网下载软件包：python-3.6.4-amd64.exe<br>双击安装：期间会有勾选PIP 安装的选项，顺带安装pip工具  </p><figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line"><span class="function">C:\<span class="title">Users</span>\<span class="title">Herrera</span>&gt;<span class="title">python</span> -<span class="title">V</span></span></span><br><span class="line"><span class="function"><span class="title">Python</span> 3.6.4</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"><span class="title">C</span>:\<span class="title">Users</span>\<span class="title">Herrera</span>&gt;<span class="title">pip</span> -<span class="title">V</span></span></span><br><span class="line"><span class="function"><span class="title">pip</span> 9.0.1 <span class="title">from</span> <span class="title">c</span>:\<span class="title">users</span>\<span class="title">herrera</span>\<span class="title">appdata</span>\<span class="title">local</span>\<span class="title">programs</span>\<span class="title">python</span>\<span class="title">python36</span>\<span class="title">lib</span>\<span class="title">site</span>-<span class="title">packages</span> (<span class="title">python</span> 3.6)</span></span><br><span class="line"><span class="function"></span></span><br></pre></td></tr></table></figure><h3 id="安装-Django"><a href="#安装-Django" class="headerlink" title="安装 Django"></a>安装 Django</h3><p>我们用 <code>django==1.10.6 </code>来安装指定的 <code>Django</code> 版本以保证和教程中的一致。  </p><figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line"><span class="function">C:\<span class="title">WINDOWS</span>\<span class="title">system32</span>&gt;<span class="title">pip</span> <span class="title">install</span> <span class="title">django</span>==1.10.6</span></span><br><span class="line"><span class="function"><span class="title">You</span> <span class="title">are</span> <span class="title">using</span> <span class="title">pip</span> <span class="title">version</span> 9.0.1, <span class="title">however</span> <span class="title">version</span> 9.0.2 <span class="title">is</span> <span class="title">available</span>.</span></span><br><span class="line"><span class="function"><span class="title">You</span> <span class="title">should</span> <span class="title">consider</span> <span class="title">upgrading</span> <span class="title">via</span> <span class="title">the</span> &#x27;<span class="title">python</span> -<span class="title">m</span> <span class="title">pip</span> <span class="title">install</span> --<span class="title">upgrade</span> <span class="title">pip</span>&#x27; <span class="title">command</span>.</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"><span class="title">C</span>:\<span class="title">Users</span>\<span class="title">Herrera</span>&gt;<span class="title">pip</span> <span class="title">install</span> <span class="title">django</span>==1.10.6</span></span><br><span class="line"><span class="function"><span class="title">Collecting</span> <span class="title">django</span>==1.10.6</span></span><br><span class="line"><span class="function">  <span class="title">Downloading</span> <span class="title">Django</span>-1.10.6-<span class="title">py2.py3</span>-<span class="title">none</span>-<span class="title">any.whl</span> (6.8<span class="title">MB</span>)</span></span><br><span class="line"><span class="function">    100% |████████████████████████████████| 6.8<span class="title">MB</span> 121<span class="title">kB</span>/<span class="title">s</span></span></span><br><span class="line"><span class="function"><span class="title">Installing</span> <span class="title">collected</span> <span class="title">packages</span>: <span class="title">django</span></span></span><br><span class="line"><span class="function"><span class="title">Successfully</span> <span class="title">installed</span> <span class="title">django</span>-1.10.6</span></span><br><span class="line"><span class="function"><span class="title">You</span> <span class="title">are</span> <span class="title">using</span> <span class="title">pip</span> <span class="title">version</span> 9.0.1, <span class="title">however</span> <span class="title">version</span> 9.0.2 <span class="title">is</span> <span class="title">available</span>.</span></span><br><span class="line"><span class="function"><span class="title">You</span> <span class="title">should</span> <span class="title">consider</span> <span class="title">upgrading</span> <span class="title">via</span> <span class="title">the</span> &#x27;<span class="title">python</span> -<span class="title">m</span> <span class="title">pip</span> <span class="title">install</span> --<span class="title">upgrade</span> <span class="title">pip</span>&#x27; <span class="title">command</span>.</span></span><br></pre></td></tr></table></figure><p>如果直接 <code>pip install django</code> 的话有可能安装最新的 <code>Django</code> 发行版本，而不是 <code>Django 1.10.6</code>。  </p><p>测试：  </p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">C:\Users\Herrera&gt;python</span><br><span class="line">Python <span class="number">3.6</span><span class="number">.4</span> (v3<span class="number">.6</span><span class="number">.4</span>:d48eceb, Dec <span class="number">19</span> <span class="number">2017</span>, 06:<span class="number">54</span>:<span class="number">40</span>) [MSC v<span class="number">.1900</span> <span class="number">64</span> bit (AMD64)] on win32</span><br><span class="line"><span class="type">Type</span> <span class="string">&quot;help&quot;</span>, <span class="string">&quot;copyright&quot;</span>, <span class="string">&quot;credits&quot;</span> <span class="keyword">or</span> <span class="string">&quot;license&quot;</span> <span class="keyword">for</span> more information.</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> django</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">print</span>(django.get_version())</span><br><span class="line"><span class="number">1.10</span><span class="number">.6</span></span><br></pre></td></tr></table></figure><p>查看pip安装记录：  </p><figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line"><span class="function">C:\<span class="title">Users</span>\<span class="title">Herrera</span>&gt;<span class="title">pip</span> <span class="title">list</span></span></span><br><span class="line"><span class="function"><span class="title">DEPRECATION</span>: <span class="title">The</span> <span class="title">default</span> <span class="title">format</span> <span class="title">will</span> <span class="title">switch</span> <span class="title">to</span> <span class="title">columns</span> <span class="title">in</span> <span class="title">the</span> <span class="title">future</span>. <span class="title">You</span> <span class="title">can</span> <span class="title">use</span> --<span class="title">format</span>=(<span class="title">legacy</span>|<span class="title">columns</span>) (<span class="title">or</span> <span class="title">define</span> <span class="title">a</span> <span class="title">format</span>=(<span class="title">legacy</span>|<span class="title">columns</span>) <span class="title">in</span> <span class="title">your</span> <span class="title">pip.conf</span> <span class="title">under</span> <span class="title">the</span> [<span class="title">list</span>] <span class="title">section</span>) <span class="title">to</span> <span class="title">disable</span> <span class="title">this</span> <span class="title">warning</span>.</span></span><br><span class="line"><span class="function"><span class="title">Django</span> (1.10.6)</span></span><br><span class="line"><span class="function"><span class="title">pip</span> (9.0.1)</span></span><br><span class="line"><span class="function"><span class="title">setuptools</span> (28.8.0)</span></span><br><span class="line"><span class="function"><span class="title">wheel</span> (0.30.0)</span></span><br><span class="line"><span class="function"><span class="title">You</span> <span class="title">are</span> <span class="title">using</span> <span class="title">pip</span> <span class="title">version</span> 9.0.1, <span class="title">however</span> <span class="title">version</span> 9.0.2 <span class="title">is</span> <span class="title">available</span>.</span></span><br><span class="line"><span class="function"><span class="title">You</span> <span class="title">should</span> <span class="title">consider</span> <span class="title">upgrading</span> <span class="title">via</span> <span class="title">the</span> &#x27;<span class="title">python</span> -<span class="title">m</span> <span class="title">pip</span> <span class="title">install</span> --<span class="title">upgrade</span> <span class="title">pip</span>&#x27; <span class="title">command</span>.</span></span><br></pre></td></tr></table></figure><h2 id="创建Django工程"><a href="#创建Django工程" class="headerlink" title="创建Django工程"></a>创建<code>Django</code>工程</h2><p>在我们的工作目录 djangoopt 下创建:   </p><figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line"><span class="function">C:\<span class="title">Users</span>\<span class="title">Herrera</span>\<span class="title">djangoopt</span>&gt;<span class="title">django</span>-<span class="title">admin</span> <span class="title">startproject</span> <span class="title">djblog</span></span></span><br><span class="line"><span class="function"><span class="title">C</span>:\<span class="title">Users</span>\<span class="title">Herrera</span>\<span class="title">djangoopt</span>&gt;<span class="title">tree</span> . /<span class="title">F</span></span></span><br><span class="line"><span class="function">文件夹 <span class="title">PATH</span> 列表</span></span><br><span class="line"><span class="function">卷序列号为 <span class="title">B035</span>-7893</span></span><br><span class="line"><span class="function"><span class="title">C</span>:\<span class="title">USERS</span>\<span class="title">HERRERA</span>\<span class="title">DJANGOOPT</span></span></span><br><span class="line"><span class="function">│  <span class="title">build.django.blog.md</span></span></span><br><span class="line"><span class="function">│</span></span><br><span class="line"><span class="function">└─<span class="title">djblog</span></span></span><br><span class="line"><span class="function">    │  <span class="title">manage.py</span></span></span><br><span class="line"><span class="function">    │</span></span><br><span class="line"><span class="function">    └─<span class="title">djblog</span></span></span><br><span class="line"><span class="function">            <span class="title">settings.py</span></span></span><br><span class="line"><span class="function">            <span class="title">urls.py</span></span></span><br><span class="line"><span class="function">            <span class="title">wsgi.py</span></span></span><br><span class="line"><span class="function">            <span class="title">__init__.py</span></span></span><br></pre></td></tr></table></figure><p>这就是我们的博客后台文件：<br>最顶层的 djblog\ 目录是我们刚刚指定的工程目录。djblog\ 目录下面有一个 manage.py 文件，manage 是管理的意思，顾名思义 manage.py 就是 Django 为我们生成的管理这个项目的 Python 脚本文件，以后用到时会再次介绍。与 manage.py 同级的还有一个 djblog\ 的目录，这里面存放了一些 Django 的配置文件，例如 settings.py、urls.py 等等，以后用到时会详细介绍。</p><p>manage.py  </p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#!/usr/bin/env python</span><br><span class="line">import os</span><br><span class="line">import sys</span><br><span class="line"></span><br><span class="line">if __name__ == &quot;__main__&quot;:</span><br><span class="line">    os.environ.setdefault(&quot;DJANGO_SETTINGS_MODULE&quot;, &quot;djblog.settings&quot;)</span><br><span class="line">    try:</span><br><span class="line">        from django.core.management import execute_from_command_line</span><br><span class="line">    except ImportError:</span><br><span class="line">        # The above import may fail for some other reason. Ensure that the</span><br><span class="line">        # issue is really that Django is missing to avoid masking other</span><br><span class="line">        # exceptions on Python 2.</span><br><span class="line">        try:</span><br><span class="line">            import django</span><br><span class="line">        except ImportError:</span><br><span class="line">            raise ImportError(</span><br><span class="line">                &quot;Couldn&#x27;t import Django. Are you sure it&#x27;s installed and &quot;</span><br><span class="line">                &quot;available on your PYTHONPATH environment variable? Did you &quot;</span><br><span class="line">                &quot;forget to activate a virtual environment?&quot;</span><br><span class="line">            )</span><br><span class="line">        raise</span><br><span class="line">    execute_from_command_line(sys.argv)</span><br></pre></td></tr></table></figure><h2 id="开启服务"><a href="#开启服务" class="headerlink" title="开启服务"></a>开启服务</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">C:\Users\Herrera\djangoopt\djblog&gt;python manage.py runserver</span><br><span class="line">Performing system checks...</span><br><span class="line"></span><br><span class="line">System check identified no issues (0 silenced).</span><br><span class="line"></span><br><span class="line">You have 13 unapplied migration(s). Your project may not work properly until you apply the migrations for app(s): admin, auth, contenttypes, sessions.</span><br><span class="line">Run &#x27;python manage.py migrate&#x27; to apply them.</span><br><span class="line">March 17, 2018 - 14:22:42</span><br><span class="line">Django version 1.10.6, using settings &#x27;djblog.settings&#x27;</span><br><span class="line">Starting development server at http://127.0.0.1:8000/</span><br><span class="line">Quit the server with CTRL-BREAK.</span><br><span class="line">[17/Mar/2018 14:23:25] &quot;GET / HTTP/1.1&quot; 200 1767</span><br><span class="line">[17/Mar/2018 14:25:03] &quot;GET / HTTP/1.1&quot; 200 1767</span><br></pre></td></tr></table></figure><p>说明服务已开启<br>登陆<code>http://127.0.0.1:8000/</code> 查看：<br><img src="/blog/%7Bfilename%7D/images/hello.png" alt="ceshi"></p><p>命令栏工具下按 Ctrl + c 可以退出开发服务器（按一次没用的话连续多按几次）。重新开启则再次运行 python manage.py runserver 。  </p><hr><h2 id="一些配置"><a href="#一些配置" class="headerlink" title="一些配置"></a>一些配置</h2><p>C:\Users\Herrera\djangoopt\djblog\djblog\setting.py  </p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 把英文改为中文</span></span><br><span class="line"><span class="comment">#LANGUAGE_CODE = &#x27;en-us&#x27;</span></span><br><span class="line">LANGUAGE_CODE = <span class="string">&#x27;zh-hans&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 把国际时区改为中国时区</span></span><br><span class="line"><span class="comment">#TIME_ZONE = &#x27;UTC&#x27;</span></span><br><span class="line">TIME_ZONE = <span class="string">&#x27;Asia/Shanghai&#x27;</span></span><br></pre></td></tr></table></figure><p>再次开启服务：<br><img src="/blog/%7Bfilename%7D/images/hello1.png" alt="ceshi1">  </p><h2 id="创建-blog-app"><a href="#创建-blog-app" class="headerlink" title="创建 blog app"></a>创建 blog app</h2><figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line"><span class="function">C:\<span class="title">Users</span>\<span class="title">Herrera</span>\<span class="title">djangoopt</span>\<span class="title">djblog</span>&gt;<span class="title">python</span> <span class="title">manage.py</span> <span class="title">startapp</span> <span class="title">blog</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"><span class="title">C</span>:\<span class="title">Users</span>\<span class="title">Herrera</span>\<span class="title">djangoopt</span>\<span class="title">djblog</span>&gt;<span class="title">tree</span> /<span class="title">F</span> <span class="title">blog</span></span></span><br><span class="line"><span class="function">文件夹 <span class="title">PATH</span> 列表</span></span><br><span class="line"><span class="function">卷序列号为 <span class="title">B035</span>-7893</span></span><br><span class="line"><span class="function"><span class="title">C</span>:\<span class="title">USERS</span>\<span class="title">HERRERA</span>\<span class="title">DJANGOOPT</span>\<span class="title">DJBLOG</span>\<span class="title">BLOG</span></span></span><br><span class="line"><span class="function">│  <span class="title">admin.py</span></span></span><br><span class="line"><span class="function">│  <span class="title">apps.py</span></span></span><br><span class="line"><span class="function">│  <span class="title">models.py</span></span></span><br><span class="line"><span class="function">│  <span class="title">tests.py</span></span></span><br><span class="line"><span class="function">│  <span class="title">views.py</span></span></span><br><span class="line"><span class="function">│  <span class="title">__init__.py</span></span></span><br><span class="line"><span class="function">│</span></span><br><span class="line"><span class="function">└─<span class="title">migrations</span></span></span><br><span class="line"><span class="function">        <span class="title">__init__.py</span></span></span><br></pre></td></tr></table></figure><p>这个应用的文件夹结构 Django 已经为我们建立好了，但它还只是包含各种文件的一个文件夹而已，Django 目前还不知道这是一个应用。我们得告诉 Django 这是我们建立的应用，专业一点说就是在 Django 的配置文件中注册这个应用。  </p><p>C:\Users\Herrera\djangoopt\djblog\djblog\setting.py  </p><figure class="highlight plaintext"><figcaption><span>Application definition</span></figcaption><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">INSTALLED_APPS = [</span><br><span class="line">    &#x27;django.contrib.admin&#x27;,</span><br><span class="line">    &#x27;django.contrib.auth&#x27;,</span><br><span class="line">    &#x27;django.contrib.contenttypes&#x27;,</span><br><span class="line">    &#x27;django.contrib.sessions&#x27;,</span><br><span class="line">    &#x27;django.contrib.messages&#x27;,</span><br><span class="line">    &#x27;django.contrib.staticfiles&#x27;,</span><br><span class="line">&#x27;blog&#x27;,#注册blog应用</span><br><span class="line">]</span><br></pre></td></tr></table></figure><h2 id="migration"><a href="#migration" class="headerlink" title="migration"></a>migration</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">C:\Users\Herrera\djangoopt\djblog&gt;python manage.py makemigrations</span><br><span class="line">Migrations for &#x27;blog&#x27;:</span><br><span class="line">  blog\migrations\0001_initial.py:</span><br><span class="line">    - Create model Category</span><br><span class="line">    - Create model Post</span><br><span class="line">    - Create model Tag</span><br><span class="line">    - Add field tags to post</span><br></pre></td></tr></table></figure><p>C:\Users\Herrera\djangoopt\djblog\blog\migrations 下面会多出：<code>0001_initial.py</code> 这个文件是 Django 用来记录我们对模型做了哪些修改的文件。  </p><p>go on</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">C:\Users\Herrera\djangoopt\djblog&gt;python manage.py migrate</span><br><span class="line">Operations to perform:</span><br><span class="line">  Apply all migrations: admin, auth, blog, contenttypes, sessions</span><br><span class="line">Running migrations:</span><br><span class="line">  Applying contenttypes.0001_initial... OK</span><br><span class="line">  Applying auth.0001_initial... OK</span><br><span class="line">  Applying admin.0001_initial... OK</span><br><span class="line">  Applying admin.0002_logentry_remove_auto_add... OK</span><br><span class="line">  Applying contenttypes.0002_remove_content_type_name... OK</span><br><span class="line">  Applying auth.0002_alter_permission_name_max_length... OK</span><br><span class="line">  Applying auth.0003_alter_user_email_max_length... OK</span><br><span class="line">  Applying auth.0004_alter_user_username_opts... OK</span><br><span class="line">  Applying auth.0005_alter_user_last_login_null... OK</span><br><span class="line">  Applying auth.0006_require_contenttypes_0002... OK</span><br><span class="line">  Applying auth.0007_alter_validators_add_error_messages... OK</span><br><span class="line">  Applying auth.0008_alter_user_username_max_length... OK</span><br><span class="line">  Applying blog.0001_initial... OK</span><br><span class="line">  Applying sessions.0001_initial... OK</span><br></pre></td></tr></table></figure><p>不过此时还只是告诉了 Django 我们做了哪些改变，为了让 Django 真正地为我们创建数据库表，接下来又执行了 python manage.py migrate 命令。<br>Django 通过检测应用中 migrations\ 目录下的文件，得知我们对数据库做了哪些操作，然后它把这些操作翻译成数据库操作语言，从而把这些操作作用于真正的数据库。  </p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">C:\Users\Herrera\djangoopt\djblog&gt;python manage.py sqlmigrate blog 0001</span><br><span class="line">BEGIN;</span><br><span class="line">--</span><br><span class="line">-- Create model Category</span><br><span class="line">--</span><br><span class="line">CREATE TABLE &quot;blog_category&quot; (&quot;id&quot; integer NOT NULL PRIMARY KEY AUTOINCREMENT, &quot;name&quot; varchar(100) NOT NULL);</span><br><span class="line">--</span><br><span class="line">-- Create model Post</span><br><span class="line">--</span><br><span class="line">CREATE TABLE &quot;blog_post&quot; (&quot;id&quot; integer NOT NULL PRIMARY KEY AUTOINCREMENT, &quot;title&quot; varchar(70) NOT NULL, &quot;body&quot; text NOT NULL, &quot;created_time&quot; datetime NOT NULL, &quot;modified_time&quot; datetime NOT NULL, &quot;excerpt&quot; varchar(200) NOT NULL, &quot;author_id&quot; integer NOT NULL REFERENCES &quot;auth_user&quot; (&quot;id&quot;), &quot;category_id&quot; integer NOT NULL REFERENCES &quot;blog_category&quot; (&quot;id&quot;));</span><br><span class="line">--</span><br><span class="line">-- Create model Tag</span><br><span class="line">--</span><br><span class="line">CREATE TABLE &quot;blog_tag&quot; (&quot;id&quot; integer NOT NULL PRIMARY KEY AUTOINCREMENT, &quot;name&quot; varchar(100) NOT NULL);</span><br><span class="line">--</span><br><span class="line">-- Add field tags to post</span><br><span class="line">--</span><br><span class="line">CREATE TABLE &quot;blog_post_tags&quot; (&quot;id&quot; integer NOT NULL PRIMARY KEY AUTOINCREMENT, &quot;post_id&quot; integer NOT NULL REFERENCES &quot;blog_post&quot; (&quot;id&quot;), &quot;tag_id&quot; integer NOT NULL REFERENCES &quot;blog_tag&quot; (&quot;id&quot;));</span><br><span class="line">CREATE INDEX &quot;blog_post_4f331e2f&quot; ON &quot;blog_post&quot; (&quot;author_id&quot;);</span><br><span class="line">CREATE INDEX &quot;blog_post_b583a629&quot; ON &quot;blog_post&quot; (&quot;category_id&quot;);</span><br><span class="line">CREATE UNIQUE INDEX &quot;blog_post_tags_post_id_4925ec37_uniq&quot; ON &quot;blog_post_tags&quot; (&quot;post_id&quot;, &quot;tag_id&quot;);</span><br><span class="line">CREATE INDEX &quot;blog_post_tags_f3aa1999&quot; ON &quot;blog_post_tags&quot; (&quot;post_id&quot;);</span><br><span class="line">CREATE INDEX &quot;blog_post_tags_76f094bc&quot; ON &quot;blog_post_tags&quot; (&quot;tag_id&quot;);</span><br><span class="line">COMMIT;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>你将看到输出了经 Django 翻译后的数据库表创建语句，这有助于你理解 Django ORM 的工作机制。  </p><h3 id="选择数据库版本"><a href="#选择数据库版本" class="headerlink" title="选择数据库版本"></a>选择数据库版本</h3><p>我们没有安装任何的数据库软件，Django 就帮我们迁移了数据库。这是因为我们使用了 Python 内置的 SQLite3 数据库。<br>SQLite3 是一个十分轻巧的数据库，它仅有一个文件。<br>你可以看一到项目根目录下多出了一个 db.sqlite3 的文件，这就是 SQLite3 数据库文件，Django 博客的数据都会保存在这个数据库文件里。<br>Django 在 settings.py 里为我们做了一些默认的数据库配置：  </p><p>blogproject&#x2F;settings.py  </p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">## 其它配置选项...</span><br><span class="line">DATABASES = &#123;</span><br><span class="line">    &#x27;default&#x27;: &#123;</span><br><span class="line">        &#x27;ENGINE&#x27;: &#x27;django.db.backends.sqlite3&#x27;,</span><br><span class="line">        &#x27;NAME&#x27;: os.path.join(BASE_DIR, &#x27;db.sqlite3&#x27;),</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">## 其它配置选项...</span><br></pre></td></tr></table></figure><p>可以看到默认的数据库引擎就是使用的 SQLite3。<br>当然一些人倾向于使用 MySQL 等大型数据库，至于 Django 如何配置 MySQL 这里就不赘述了，你可以自行使用搜索引擎或者查阅 Django 的官方文档解决。<br>对于一个小型博客而言，SQLite3 数据库足以胜任。  </p>]]></content>
      
      
      <categories>
          
          <category> Blog </category>
          
          <category> Django </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Django </tag>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MLSE和NDVI 数据及使用方法</title>
      <link href="/blog/data-n-method/mlse-ndvi-user-guide/"/>
      <url>/blog/data-n-method/mlse-ndvi-user-guide/</url>
      
        <content type="html"><![CDATA[<h2 id="文件说明"><a href="#文件说明" class="headerlink" title="文件说明"></a>文件说明</h2><p><code>mlse.land98.res1 </code> 为最新反演的地表微波比辐射率数据，第1个分辨率对应的卫星像斑直径为56km，格点距离10km<br><code>mlse.land98.res3 </code> 为最新反演的地表微波比辐射率数据，第3个分辨率对应的卫星像斑直径为21km，格点距离10km<br><code>MYD13C2.006</code> 是月平均NDVI数据，存储格式是HDF格式，分辨率是5km<br><code>MYD13C1.005</code> 是16天平均NDVI数据，存储格式是HDF格式，分辨率是5km   </p><h3 id="通道信息"><a href="#通道信息" class="headerlink" title="通道信息"></a>通道信息</h3><ul><li>res1：<br>6.925v, 6.925h, 10.65v, 10.65h, 18.7v, 18.7h, 23.8v, 23.8h, 36.5v, 36.5h, 89.0v, 89.0h  单位GHz  </li><li>res3：<br>18.7v, 18.7h, 23.8v, 23.8h, 36.5v, 36.5h, 89.0v, 89.0h  单位GHz</li></ul><hr><h2 id="读取MLSE数据"><a href="#读取MLSE数据" class="headerlink" title="读取MLSE数据"></a>读取MLSE数据</h2><p>mlse是以TXT文件格式存储的，可以用NCL或者Fortran读取。  </p><p>诸参数说明如下：  </p><figure class="highlight fortran"><table><tr><td class="code"><pre><span class="line">ip   <span class="keyword">integer</span>型 每个AMSR-E数据点所拥有的唯一ID；  </span><br><span class="line">ipp  <span class="keyword">integer</span>型 筛选landflag&gt;<span class="number">98</span>的样本点时引入，应等于ip；  </span><br><span class="line">newl <span class="keyword">integer</span>型 样本对应的大气廓线层数；  </span><br><span class="line"></span><br><span class="line">qc   <span class="keyword">integer</span>型 cloud quality control ：  </span><br><span class="line">           qc = <span class="number">0</span> ;clear sky</span><br><span class="line">           qc = <span class="number">1</span> ; <span class="keyword">pure</span> water cloud   </span><br><span class="line">           qc = <span class="number">2</span> ; <span class="keyword">pure</span> ice cloud  </span><br><span class="line">           qc = <span class="number">3</span> ; mixed cloud <span class="keyword">exist</span>  </span><br><span class="line">           qc = <span class="number">4</span> ; uncertain cloud <span class="keyword">exist</span>  </span><br><span class="line"></span><br><span class="line">lon  <span class="built_in">float</span> 经度；  </span><br><span class="line">lat  <span class="built_in">float</span> 纬度；  </span><br><span class="line"></span><br><span class="line">cwc  <span class="built_in">float</span> 云液态水柱积分 g/cm2  手动计算；  </span><br><span class="line">cic  <span class="built_in">float</span> 云冰水柱积分   g/cm2  手动计算；  </span><br><span class="line">tw1  <span class="built_in">float</span> 云液态水柱积分 g/cm2  模式输出；  </span><br><span class="line">tw2  <span class="built_in">float</span> 云冰水柱积分   g/cm2  模式输出；  </span><br><span class="line"></span><br><span class="line">lst  <span class="built_in">float</span>  地表温度 k；  </span><br><span class="line">t2m  <span class="built_in">float</span>  两米温度 k；  </span><br><span class="line"></span><br><span class="line">stime  <span class="built_in">float</span>  扫面时间 h+m/<span class="number">60</span>；  </span><br><span class="line">landflag  <span class="built_in">int</span>  陆地分数 <span class="number">0</span>-<span class="number">100</span>；  </span><br><span class="line"></span><br><span class="line">tb    <span class="built_in">float</span>(<span class="number">12</span>) <span class="number">12</span>个通道天顶亮温观测；  </span><br><span class="line">mlse  <span class="built_in">float</span>(<span class="number">12</span>) <span class="number">12</span>个通道地表微博比辐射率反演结果； </span><br><span class="line"></span><br><span class="line">tbsurf 即表面微波亮温计算公式:</span><br><span class="line">            tbsurf=LST*MLSE </span><br><span class="line">```  </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">### 利用fortran读取  </span><br><span class="line"></span><br><span class="line">读取mlse.land98.res1  </span><br><span class="line">```Fortran</span><br><span class="line">CC F77(fixed <span class="keyword">form</span>) code</span><br><span class="line">       <span class="keyword">integer</span>   ip,cip,newl,qc,i,j</span><br><span class="line">       <span class="keyword">real</span>      lon,lat</span><br><span class="line">       <span class="keyword">real</span>      cwc,cic,tw1,tw2,lst,t2m</span><br><span class="line">       <span class="keyword">real</span>      mlse(<span class="number">12</span>),tb(<span class="number">12</span>),stime,landflag </span><br><span class="line"></span><br><span class="line"><span class="number">1100</span>    read(<span class="number">12</span>,*,<span class="keyword">end</span>=<span class="number">1101</span>) ip,cip,newl,qc,lon,lat,</span><br><span class="line">     +               (mlse(i),i=<span class="number">1</span>,<span class="number">12</span>),(tb(i),i=<span class="number">1</span>,<span class="number">12</span>),</span><br><span class="line">     +               cwc,cic,tw1,tw2,lst,stime,t2m,landflag</span><br></pre></td></tr></table></figure><p>读取mlse.land98.res3  </p><figure class="highlight fortran"><table><tr><td class="code"><pre><span class="line">CC F77(fixed <span class="keyword">form</span>) code</span><br><span class="line">       <span class="keyword">integer</span>   ip,cip,newl,qc,i,j</span><br><span class="line">       <span class="keyword">real</span>      lon,lat</span><br><span class="line">       <span class="keyword">real</span>      cwc,cic,tw1,tw2,lst,t2m</span><br><span class="line">       <span class="keyword">real</span>      mlse(<span class="number">8</span>),tb(<span class="number">8</span>),stime,landflag </span><br><span class="line"></span><br><span class="line"><span class="number">1100</span>    read(<span class="number">12</span>,*,<span class="keyword">end</span>=<span class="number">1101</span>) ip,cip,newl,qc,lon,lat,</span><br><span class="line">     +               (mlse(i),i=<span class="number">1</span>,<span class="number">8</span>),(tb(i),i=<span class="number">1</span>,<span class="number">8</span>),</span><br><span class="line">     +               cwc,cic,tw1,tw2,lst,stime,t2m,landflag</span><br></pre></td></tr></table></figure><p>详细参考 <code>do.mlse.month.ave.f</code> 文件，利用Fortran求取月平均。  </p><h3 id="利用NCL读取"><a href="#利用NCL读取" class="headerlink" title="利用NCL读取"></a>利用NCL读取</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">filein=&quot;./mlse.land98.res1/mlse.land98.res1.200804&quot;+dd+&quot;.txt&quot;      </span><br><span class="line">nrows = numAsciiRow(filein); 读取行数</span><br><span class="line">ncols = numAsciiCol(filein); 读取列数</span><br><span class="line"></span><br><span class="line">array = asciiread(filein,(/nrows,ncols/),&quot;float&quot;) ;  读取数据阵</span><br><span class="line">;分配变量</span><br><span class="line">ip    = floattoint(array(:,0)); </span><br><span class="line">cip   = floattoint(array(:,1)); </span><br><span class="line">newl  = floattoint(array(:,2)); </span><br><span class="line">qc    = floattoint(array(:,3));         </span><br><span class="line">flon  = array(:,4);   </span><br><span class="line">flat  = array(:,5);   </span><br><span class="line">mlse  = array(:,6:17);   </span><br><span class="line">tb    = array(:,18:29); </span><br><span class="line">cwc   = array(:,30); </span><br><span class="line">cic   = array(:,31); </span><br><span class="line">tw1   = array(:,32); </span><br><span class="line">tw2   = array(:,33); </span><br><span class="line">lst   = array(:,34); </span><br><span class="line">stime = array(:,35); </span><br><span class="line">t2m   = array(:,36); </span><br><span class="line">land  = array(:,37); </span><br></pre></td></tr></table></figure><p>详细参考 <code>mlse.res1.spatial.distribution.ncl</code> 文件，利用NCL格点化20080426的MLSE，并画出空间分布图。  </p><p>注意，读取mlse.land98.res3时 mlse和tb只有8列：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">...  </span><br><span class="line">...  </span><br><span class="line">    mlse  = array(:,6:17-4);   </span><br><span class="line">    tb    = array(:,18-4:29-8); </span><br><span class="line">    cwc   = array(:,30-8); </span><br><span class="line">    cic   = array(:,31-8); </span><br><span class="line">    tw1   = array(:,32-8); </span><br><span class="line">    tw2   = array(:,33-8); </span><br><span class="line">    lst   = array(:,34-8); </span><br><span class="line">    stime = array(:,35-8); </span><br><span class="line">    t2m   = array(:,36-8); </span><br><span class="line">    land  = array(:,37-8); </span><br></pre></td></tr></table></figure><hr><h2 id="读取NDVI"><a href="#读取NDVI" class="headerlink" title="读取NDVI"></a>读取NDVI</h2><p>NDVI是以HDF文件格式存储的，可以用NCL读取；<br>HDF可以用 <a href="https://www.giss.nasa.gov/tools/panoply/">panoply</a> 或者<a href="https://support.hdfgroup.org/products/java/hdfview/">HDF view</a> 打开hdf文件查看其属性和变量。</p><h3 id="利用NCL读取-1"><a href="#利用NCL读取-1" class="headerlink" title="利用NCL读取"></a>利用NCL读取</h3><p>在装有NCL的环境中运行<code>ncl_filedump</code>,可以得到HDF文件内部变量和属性信息:  </p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Herrera@Herrera-PC /cygdrive/e/given/MYD13C2.006</span><br><span class="line"><span class="variable">$ncl_filedump</span> -c MYD13C2.A2008001.006.2015171174851.hdf &gt; info.txt</span><br></pre></td></tr></table></figure><p>打开’info.txt’即可看到详情。</p><p>ncl提取hdf文件的<code>CMG_0_05_Deg_Monthly_NDVI</code>  ,  <code>YDim_MOD_Grid_monthly_CMG_VI</code> 和 <code>XDim_MOD_Grid_monthly_CMG_VI</code>  变量</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">filename =&quot;./MYD13C2.A2008001.006.2015171174851.hdf&quot;</span><br><span class="line">eos_file = addfile(filename, &quot;r&quot;) ; Read file</span><br><span class="line">eos_he2 = addfile(filename+&quot;.he2&quot;,&quot;r&quot;)</span><br><span class="line">data_raw = eos_file-&gt;CMG_0_05_Deg_Monthly_NDVI</span><br><span class="line">;;printVarSummary(data_raw)</span><br><span class="line"></span><br><span class="line">data = tofloat(data_raw/data_raw@scale_factor+data_raw@add_offset)</span><br><span class="line"></span><br><span class="line">lat = eos_he2-&gt;YDim_MOD_Grid_monthly_CMG_VI</span><br><span class="line">lon = eos_he2-&gt;XDim_MOD_Grid_monthly_CMG_VI</span><br></pre></td></tr></table></figure><p>详细参考 <code>make.ndvi.series.regions.ncl</code> 文件，求取设定区域的NDVI区域平均时间序列。</p><hr><p>胡继恒 16研 QQ：1831743701  Email：<a href="mailto:&#104;&#106;&#104;&#x31;&#x38;&#51;&#x30;&#x35;&#64;&#109;&#97;&#x69;&#x6c;&#x2e;&#117;&#115;&#116;&#99;&#46;&#101;&#100;&#117;&#46;&#99;&#x6e;">&#104;&#106;&#104;&#x31;&#x38;&#51;&#x30;&#x35;&#64;&#109;&#97;&#x69;&#x6c;&#x2e;&#117;&#115;&#116;&#99;&#46;&#101;&#100;&#117;&#46;&#99;&#x6e;</a></p>]]></content>
      
      
      <categories>
          
          <category> Data N&#39; Method </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Emissivity </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript学习笔记-Underscore Arrays</title>
      <link href="/blog/learnote/underscore-arrays/"/>
      <url>/blog/learnote/underscore-arrays/</url>
      
        <content type="html"><![CDATA[<h2 id="Array-Functions"><a href="#Array-Functions" class="headerlink" title="Array Functions"></a>Array Functions</h2><p>Note: All array functions will also work on the arguments object. However, Underscore functions are not designed to work on “sparse” arrays.</p><h3 id="first"><a href="#first" class="headerlink" title="first"></a>first</h3><p> <code>_.first(array, [n])</code> Aliases: head, take<br>Returns the first element of an array. Passing n will return the first n elements of the array.</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">_.first([5, 4, 3, 2, 1]);</span><br><span class="line">=&gt; 5</span><br></pre></td></tr></table></figure><h3 id="initial"><a href="#initial" class="headerlink" title="initial"></a>initial</h3><p><code>_.initial(array, [n])</code><br>Returns everything but the last entry of the array. Especially useful on the arguments object. Pass n to exclude the last n elements from the result.</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">_.initial([5, 4, 3, 2, 1]);</span><br><span class="line">=&gt; [5, 4, 3, 2]</span><br></pre></td></tr></table></figure><h3 id="last"><a href="#last" class="headerlink" title="last"></a>last</h3><p><code>_.last(array, [n]) </code><br>Returns the last element of an array. Passing n will return the last n elements of the array.</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">_.last([5, 4, 3, 2, 1]);</span><br><span class="line">=&gt; 1</span><br></pre></td></tr></table></figure><h3 id="rest"><a href="#rest" class="headerlink" title="rest"></a>rest</h3><p><code>_.rest(array, [index]) </code>Aliases: tail, drop<br>Returns the rest of the elements in an array. Pass an index to return the values of the array from that index onward.</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">_.rest([5, 4, 3, 2, 1]);</span><br><span class="line">=&gt; [4, 3, 2, 1] </span><br></pre></td></tr></table></figure><h3 id="compact"><a href="#compact" class="headerlink" title="compact"></a>compact</h3><p><code>_.compact(array) </code><br>Returns a copy of the array with all falsy values removed. In JavaScript, false, null, 0, “”, undefined and NaN are all falsy.</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">_.compact([0, 1, false, 2, &#x27;&#x27;, 3]);</span><br><span class="line">=&gt; [1, 2, 3]</span><br></pre></td></tr></table></figure><h3 id="flatten"><a href="#flatten" class="headerlink" title="flatten"></a>flatten</h3><p>_.flatten(array, [shallow])<br>Flattens a nested array (the nesting can be to any depth). If you pass shallow, the array will only be flattened a single level.</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">_.flatten([1, [2], [3, [[4]]]]);</span><br><span class="line">=&gt; [1, 2, 3, 4];</span><br><span class="line"></span><br><span class="line">_.flatten([1, [2], [3, [[4]]]], true);</span><br><span class="line">=&gt; [1, 2, 3, [[4]]];</span><br></pre></td></tr></table></figure><h3 id="without"><a href="#without" class="headerlink" title="without"></a>without</h3><p>_.without(array, *values)<br>Returns a copy of the array with all instances of the values removed.</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">_.without([1, 2, 1, 0, 3, 1, 4], 0, 1);</span><br><span class="line">=&gt; [2, 3, 4]</span><br></pre></td></tr></table></figure><h3 id="union"><a href="#union" class="headerlink" title="union"></a>union</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">_.union(*arrays)   </span><br></pre></td></tr></table></figure><p>Computes the union of the passed-in arrays: the list of unique items, in order, that are present in one or more of the arrays.</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">_.union([1, 2, 3], [101, 2, 1, 10], [2, 1]);</span><br><span class="line">=&gt; [1, 2, 3, 101, 10]</span><br></pre></td></tr></table></figure><h3 id="intersection"><a href="#intersection" class="headerlink" title="intersection"></a>intersection</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">_.intersection(*arrays)</span><br></pre></td></tr></table></figure><p>Computes the list of values that are the intersection of all the arrays. Each value in the result is present in each of the arrays.</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">_.intersection([1, 2, 3], [101, 2, 1, 10], [2, 1]);</span><br><span class="line">=&gt; [1, 2]</span><br></pre></td></tr></table></figure><h3 id="difference"><a href="#difference" class="headerlink" title="difference"></a>difference</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">_.difference(array, *others) </span><br></pre></td></tr></table></figure><p>Similar to without, but returns the values from array that are not present in the other arrays.</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">_.difference([1, 2, 3, 4, 5], [5, 2, 10]);</span><br><span class="line">=&gt; [1, 3, 4]</span><br></pre></td></tr></table></figure><h3 id="uniq"><a href="#uniq" class="headerlink" title="uniq"></a>uniq</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">_.uniq(array, [isSorted], [iteratee]) Alias: unique </span><br></pre></td></tr></table></figure><p>Produces a duplicate-free version of the array, using &#x3D;&#x3D;&#x3D; to test object equality. In particular only the first occurence of each value is kept. If you know in advance that the array is sorted, passing true for isSorted will run a much faster algorithm. If you want to compute unique items based on a transformation, pass an iteratee function.</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">_.uniq([1, 2, 1, 4, 1, 3]);</span><br><span class="line">=&gt; [1, 2, 4, 3]</span><br></pre></td></tr></table></figure><h3 id="zip"><a href="#zip" class="headerlink" title="zip"></a>zip</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">_.zip(*arrays) </span><br></pre></td></tr></table></figure><p>Merges together the values of each of the arrays with the values at the corresponding position. Useful when you have separate data sources that are coordinated through matching array indexes. Use with apply to pass in an array of arrays. If you’re working with a matrix of nested arrays, this can be used to transpose the matrix.</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">_.zip([&#x27;moe&#x27;, &#x27;larry&#x27;, &#x27;curly&#x27;], [30, 40, 50], [true, false, false]);</span><br><span class="line">=&gt; [[&quot;moe&quot;, 30, true], [&quot;larry&quot;, 40, false], [&quot;curly&quot;, 50, false]]</span><br></pre></td></tr></table></figure><h3 id="unzip"><a href="#unzip" class="headerlink" title="unzip"></a>unzip</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">_.unzip(array)</span><br></pre></td></tr></table></figure><p>The opposite of zip. Given an array of arrays, returns a series of new arrays, the first of which contains all of the first elements in the input arrays, the second of which contains all of the second elements, and so on.</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">_.unzip([[&quot;moe&quot;, 30, true], [&quot;larry&quot;, 40, false], [&quot;curly&quot;, 50, false]]);</span><br><span class="line">=&gt; [[&#x27;moe&#x27;, &#x27;larry&#x27;, &#x27;curly&#x27;], [30, 40, 50], [true, false, false]]</span><br></pre></td></tr></table></figure><h3 id="object"><a href="#object" class="headerlink" title="object"></a>object</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">_.object(list, [values]) </span><br></pre></td></tr></table></figure><p>Converts arrays into objects. Pass either a single list of [key, value] pairs, or a list of keys, and a list of values. If duplicate keys exist, the last value wins.</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">_.object([&#x27;moe&#x27;, &#x27;larry&#x27;, &#x27;curly&#x27;], [30, 40, 50]);</span><br><span class="line">=&gt; &#123;moe: 30, larry: 40, curly: 50&#125;</span><br><span class="line"></span><br><span class="line">_.object([[&#x27;moe&#x27;, 30], [&#x27;larry&#x27;, 40], [&#x27;curly&#x27;, 50]]);</span><br><span class="line">=&gt; &#123;moe: 30, larry: 40, curly: 50&#125;</span><br></pre></td></tr></table></figure><h3 id="indexOf"><a href="#indexOf" class="headerlink" title="indexOf"></a>indexOf</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">_.indexOf(array, value, [isSorted]) </span><br></pre></td></tr></table></figure><p>Returns the index at which value can be found in the array, or -1 if value is not present in the array. If you’re working with a large array, and you know that the array is already sorted, pass true for isSorted to use a faster binary search … or, pass a number as the third argument in order to look for the first matching value in the array after the given index.</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">_.indexOf([1, 2, 3], 2);</span><br><span class="line">=&gt; 1</span><br></pre></td></tr></table></figure><h3 id="lastIndexOf"><a href="#lastIndexOf" class="headerlink" title="lastIndexOf"></a>lastIndexOf</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">_.lastIndexOf(array, value, [fromIndex]) </span><br></pre></td></tr></table></figure><p>Returns the index of the last occurrence of value in the array, or -1 if value is not present. Pass fromIndex to start your search at a given index.</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">_.lastIndexOf([1, 2, 3, 1, 2, 3], 2);</span><br><span class="line">=&gt; 4</span><br></pre></td></tr></table></figure><h3 id="sortedIndex"><a href="#sortedIndex" class="headerlink" title="sortedIndex"></a>sortedIndex</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">_.sortedIndex(list, value, [iteratee], [context])</span><br></pre></td></tr></table></figure><p>Uses a binary search to determine the index at which the value should be inserted into the list in order to maintain the list’s sorted order. If an iteratee function is provided, it will be used to compute the sort ranking of each value, including the value you pass. The iteratee may also be the string name of the property to sort by (eg. length).</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">_.sortedIndex([10, 20, 30, 40, 50], 35);</span><br><span class="line">=&gt; 3</span><br><span class="line"></span><br><span class="line">var stooges = [&#123;name: &#x27;moe&#x27;, age: 40&#125;, &#123;name: &#x27;curly&#x27;, age: 60&#125;];</span><br><span class="line">_.sortedIndex(stooges, &#123;name: &#x27;larry&#x27;, age: 50&#125;, &#x27;age&#x27;);</span><br><span class="line">=&gt; 1</span><br></pre></td></tr></table></figure><h3 id="findIndex"><a href="#findIndex" class="headerlink" title="findIndex"></a>findIndex</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">_.findIndex(array, predicate, [context]) </span><br></pre></td></tr></table></figure><p>Similar to _.indexOf, returns the first index where the predicate truth test passes; otherwise returns -1.</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">_.findIndex([4, 6, 8, 12], isPrime);</span><br><span class="line">=&gt; -1 // not found</span><br><span class="line">_.findIndex([4, 6, 7, 12], isPrime);</span><br><span class="line">=&gt; 2</span><br></pre></td></tr></table></figure><h3 id="findLastIndex"><a href="#findLastIndex" class="headerlink" title="findLastIndex"></a>findLastIndex</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">_.findLastIndex(array, predicate, [context]) </span><br></pre></td></tr></table></figure><p>Like _.findIndex but iterates the array in reverse, returning the index closest to the end where the predicate truth test passes.</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">var users = [&#123;&#x27;id&#x27;: 1, &#x27;name&#x27;: &#x27;Bob&#x27;, &#x27;last&#x27;: &#x27;Brown&#x27;&#125;,</span><br><span class="line">             &#123;&#x27;id&#x27;: 2, &#x27;name&#x27;: &#x27;Ted&#x27;, &#x27;last&#x27;: &#x27;White&#x27;&#125;,</span><br><span class="line">             &#123;&#x27;id&#x27;: 3, &#x27;name&#x27;: &#x27;Frank&#x27;, &#x27;last&#x27;: &#x27;James&#x27;&#125;,</span><br><span class="line">             &#123;&#x27;id&#x27;: 4, &#x27;name&#x27;: &#x27;Ted&#x27;, &#x27;last&#x27;: &#x27;Jones&#x27;&#125;];</span><br><span class="line">_.findLastIndex(users, &#123;</span><br><span class="line">  name: &#x27;Ted&#x27;</span><br><span class="line">&#125;);</span><br><span class="line">=&gt; 3</span><br></pre></td></tr></table></figure><h3 id="range"><a href="#range" class="headerlink" title="range"></a>range</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">_.range([start], stop, [step])</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>A function to create flexibly-numbered lists of integers, handy for each and map loops. start, if omitted, defaults to 0; step defaults to 1. Returns a list of integers from start (inclusive) to stop (exclusive), incremented (or decremented) by step, exclusive. Note that ranges that stop before they start are considered to be zero-length instead of negative — if you’d like a negative range, use a negative step.</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">_.range(10);</span><br><span class="line">=&gt; [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]</span><br><span class="line">_.range(1, 11);</span><br><span class="line">=&gt; [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]</span><br><span class="line">_.range(0, 30, 5);</span><br><span class="line">=&gt; [0, 5, 10, 15, 20, 25]</span><br><span class="line">_.range(0, -10, -1);</span><br><span class="line">=&gt; [0, -1, -2, -3, -4, -5, -6, -7, -8, -9]</span><br><span class="line">_.range(0);</span><br><span class="line">=&gt; []</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Learn note </category>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript学习笔记-Underscore Collections</title>
      <link href="/blog/learnote/underscore-collections/"/>
      <url>/blog/learnote/underscore-collections/</url>
      
        <content type="html"><![CDATA[<h2 id="Installation"><a href="#Installation" class="headerlink" title="Installation"></a>Installation</h2><ul><li>Node.js  <code>npm install underscore</code></li><li>Meteor.js  <code>meteor add underscore</code></li><li>Require.js  <code>require([&quot;underscore&quot;], ...</code></li><li>Bower  <code>bower install underscore</code></li><li>Component  <code>component install jashkenas/underscore</code></li></ul><h2 id="collections-工具"><a href="#collections-工具" class="headerlink" title="collections 工具"></a>collections 工具</h2><h3 id="map-filter"><a href="#map-filter" class="headerlink" title="map&#x2F;filter"></a>map&#x2F;filter</h3><p>和Array的map()与filter()类似，但是underscore的map()和filter()可以作用于Object。<br>当作用于Object时，传入的函数为function (value, key)，第一个参数接收value，第二个参数接收key：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">var obj = &#123;</span><br><span class="line">    name: &#x27;bob&#x27;,</span><br><span class="line">    school: &#x27;No.1 middle school&#x27;,</span><br><span class="line">    address: &#x27;xueyuan road&#x27;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">var upper = _.map(obj, (value, key)=&gt;key+&quot;: &quot;+value);</span><br><span class="line">console.log(JSON.stringify(upper)); //[&quot;name: bob&quot;,&quot;school: No.1 middle school&quot;,&quot;address: xueyuan road&quot;]</span><br><span class="line"></span><br><span class="line">var upper = _.filter(obj, (value, key)=&gt;key===&#x27;name&#x27;);</span><br><span class="line">console.log(JSON.stringify(upper)); //[&#x27;bob&#x27;]</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>_.mapObject 返回对象。</p><h3 id="some-every"><a href="#some-every" class="headerlink" title="_.some _.every"></a>_.some _.every</h3><p>当集合的所有元素都满足条件时，_.every()函数返回true，当集合的至少一个元素满足条件时，_.some()函数返回true：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#x27;use strict&#x27;;</span><br><span class="line">// 所有元素都大于0？</span><br><span class="line">_.every([1, 4, 7, -3, -9], (x) =&gt; x &gt; 0); // false</span><br><span class="line">// 至少一个元素大于0？</span><br><span class="line">_.some([1, 4, 7, -3, -9], (x) =&gt; x &gt; 0); // true</span><br></pre></td></tr></table></figure><p>当集合是Object时，我们可以同时获得value和key：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#x27;use strict&#x27;;</span><br><span class="line">var obj = &#123;</span><br><span class="line">    name: &#x27;bob&#x27;,</span><br><span class="line">    school: &#x27;No.1 middle school&#x27;,</span><br><span class="line">    address: &#x27;xueyuan road&#x27;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">// 判断key和value是否全部是小写：</span><br><span class="line">var r1 = .every(obj, function (value, key) &#123;</span><br><span class="line">    return .every(value+key,(x)=&gt;x&gt;=&#x27;a&#x27;&amp;&amp;x=&lt;&#x27;z&#x27;);</span><br><span class="line">&#125;);</span><br><span class="line">var r2 = .some(obj, function (value, key) &#123;</span><br><span class="line">    return .some(value+key,(x)=&gt;x&gt;=&#x27;a&#x27;&amp;&amp;x=&lt;&#x27;z&#x27;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="max-min"><a href="#max-min" class="headerlink" title="max &#x2F; min"></a>max &#x2F; min</h3><p>这两个函数直接返回集合中最大和最小的数：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">var arr = [3, 5, 7, 9];</span><br><span class="line">_.max(arr); // 9</span><br><span class="line">_.min(arr); // 3</span><br><span class="line"></span><br><span class="line">_.max(&#123; a: 1, b: 2, c: 3 &#125;); // 3</span><br></pre></td></tr></table></figure><p>如果集合是Object，max()和min()只作用于value，忽略掉key：</p><h3 id="groupBy"><a href="#groupBy" class="headerlink" title="groupBy"></a>groupBy</h3><p>groupBy()把集合的元素按照key归类，key由传入的函数返回：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">var scores = [20, 81, 75, 40, 91, 59, 77, 66, 72, 88, 99];</span><br><span class="line">var groups = _.groupBy(scores, function (x) &#123;</span><br><span class="line">    if (x &lt; 60) &#123;</span><br><span class="line">        return &#x27;C&#x27;;</span><br><span class="line">    &#125; else if (x &lt; 80) &#123;</span><br><span class="line">        return &#x27;B&#x27;;</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        return &#x27;A&#x27;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line">// 结果:</span><br><span class="line">// &#123;</span><br><span class="line">//   A: [81, 91, 88, 99],</span><br><span class="line">//   B: [75, 77, 66, 72],</span><br><span class="line">//   C: [20, 40, 59]</span><br><span class="line">// &#125;</span><br></pre></td></tr></table></figure><h3 id="shuffle-sample"><a href="#shuffle-sample" class="headerlink" title="shuffle &#x2F; sample"></a>shuffle &#x2F; sample</h3><p>shuffle()用洗牌算法随机打乱一个集合；<br>sample()则是随机选择一个或多个元素。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">_.shuffle([1, 2, 3, 4, 5, 6]); // [3, 5, 4, 6, 2, 1] 注意每次结果都不一样：</span><br><span class="line"></span><br><span class="line">// 注意每次结果都不一样：</span><br><span class="line">// 随机选1个：</span><br><span class="line">_.sample([1, 2, 3, 4, 5, 6]); // 2</span><br><span class="line">// 随机选3个：</span><br><span class="line">_.sample([1, 2, 3, 4, 5, 6], 3); // [6, 1, 4]</span><br></pre></td></tr></table></figure><p><a href="http://underscorejs.org/#collections">more functions</a><br><a href="https://github.com/jashkenas/underscore">github-underscore</a>  </p>]]></content>
      
      
      <categories>
          
          <category> Learn note </category>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript学习笔记-jQuery Selector</title>
      <link href="/blog/learnote/js-jQuery-selector/"/>
      <url>/blog/learnote/js-jQuery-selector/</url>
      
        <content type="html"><![CDATA[<h2 id="jQuery-selector"><a href="#jQuery-selector" class="headerlink" title="jQuery selector"></a><code>jQuery</code> selector</h2><p>选择器是jQuery的核心。一个选择器写出来类似$(‘#dom-id’)。</p><p>对于原生JS，选择器：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 按ID查找：</span></span><br><span class="line"><span class="keyword">var</span> a = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;dom-id&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 按tag查找：</span></span><br><span class="line"><span class="keyword">var</span> divs = <span class="variable language_">document</span>.<span class="title function_">getElementsByTagName</span>(<span class="string">&#x27;div&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 查找&lt;p class=&quot;red&quot;&gt;：</span></span><br><span class="line"><span class="keyword">var</span> ps = <span class="variable language_">document</span>.<span class="title function_">getElementsByTagName</span>(<span class="string">&#x27;p&#x27;</span>);</span><br><span class="line"><span class="comment">// 过滤出class=&quot;red&quot;:</span></span><br><span class="line"><span class="comment">// <span class="doctag">TODO:</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 查找&lt;table class=&quot;green&quot;&gt;里面的所有&lt;tr&gt;：</span></span><br><span class="line"><span class="keyword">var</span> table = ...</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i=<span class="number">0</span>; i&lt;table.<span class="property">children</span>; i++) &#123;</span><br><span class="line">    <span class="comment">// <span class="doctag">TODO:</span> 过滤出&lt;tr&gt;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code> jQuery</code> 的选择器就是帮助我们快速定位到一个或多个<code>DOM</code> 节点。</p><h3 id="按ID查找"><a href="#按ID查找" class="headerlink" title="按ID查找"></a>按ID查找</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 查找&lt;div id=&quot;abc&quot;&gt;:</span></span><br><span class="line"><span class="keyword">var</span> div = $(<span class="string">&#x27;#abc&#x27;</span>);</span><br></pre></td></tr></table></figure><p><code>div</code> 返回 <code>jQuery</code> 对象<code>[&lt;div id=&quot;abc&quot;&gt;...&lt;/div&gt;]</code></p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//jQuery对象和DOM对象之间可以互相转化：</span></span><br><span class="line"><span class="keyword">var</span> div = $(<span class="string">&#x27;#abc&#x27;</span>); <span class="comment">// jQuery对象</span></span><br><span class="line"><span class="keyword">var</span> divDom = div.<span class="title function_">get</span>(<span class="number">0</span>); <span class="comment">// 假设存在div，获取第1个DOM元素</span></span><br><span class="line"><span class="keyword">var</span> another = $(divDom); <span class="comment">// 重新把DOM包装为jQuery对象</span></span><br></pre></td></tr></table></figure><h3 id="按tag查找"><a href="#按tag查找" class="headerlink" title="按tag查找"></a>按tag查找</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> ps = $(<span class="string">&#x27;p&#x27;</span>); <span class="comment">// 返回所有&lt;p&gt;节点</span></span><br><span class="line">ps.<span class="property">length</span>; <span class="comment">// 数一数页面有多少个&lt;p&gt;节点</span></span><br></pre></td></tr></table></figure><h3 id="按class查找"><a href="#按class查找" class="headerlink" title="按class查找"></a>按class查找</h3><p>按<code>class</code>查找注意在<code>class</code> 名称前加一个<code>.</code>：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> a = $(<span class="string">&#x27;.red&#x27;</span>); <span class="comment">// 所有节点包含class=&quot;red&quot;都将返回</span></span><br><span class="line"><span class="comment">// 例如:</span></span><br><span class="line"><span class="comment">// &lt;div class=&quot;red&quot;&gt;...&lt;/div&gt;</span></span><br><span class="line"><span class="comment">// &lt;p class=&quot;green red&quot;&gt;...&lt;/p&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//查找同时包含red和green的节点：</span></span><br><span class="line"><span class="keyword">var</span> a = $(<span class="string">&#x27;.red.green&#x27;</span>); <span class="comment">// 注意没有空格！</span></span><br><span class="line"><span class="comment">// 符合条件的节点：</span></span><br><span class="line"><span class="comment">// &lt;div class=&quot;red green&quot;&gt;...&lt;/div&gt;</span></span><br><span class="line"><span class="comment">// &lt;div class=&quot;blue green red&quot;&gt;...&lt;/div&gt;</span></span><br></pre></td></tr></table></figure><h3 id="按属性查找"><a href="#按属性查找" class="headerlink" title="按属性查找"></a>按属性查找</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> email = $(<span class="string">&#x27;[name=email]&#x27;</span>); <span class="comment">// 找出&lt;??? name=&quot;email&quot;&gt;</span></span><br><span class="line"><span class="keyword">var</span> passwordInput = $(<span class="string">&#x27;[type=password]&#x27;</span>); <span class="comment">// 找出&lt;??? type=&quot;password&quot;&gt;</span></span><br><span class="line"><span class="keyword">var</span> a = $(<span class="string">&#x27;[items=&quot;A B&quot;]&#x27;</span>); <span class="comment">// 找出&lt;??? items=&quot;A B&quot;&gt; 包含空格等特殊字符时，需要用双引号括起来。</span></span><br></pre></td></tr></table></figure><h4 id="前缀查找或者后缀查找："><a href="#前缀查找或者后缀查找：" class="headerlink" title="前缀查找或者后缀查找："></a>前缀查找或者后缀查找：</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> icons = $(<span class="string">&#x27;[name^=icon]&#x27;</span>); <span class="comment">// 找出所有name属性值以icon开头的DOM</span></span><br><span class="line"><span class="comment">// 例如: name=&quot;icon-1&quot;, name=&quot;icon-2&quot;</span></span><br><span class="line"><span class="keyword">var</span> names = $(<span class="string">&#x27;[name$=with]&#x27;</span>); <span class="comment">// 找出所有name属性值以with结尾的DOM</span></span><br><span class="line"><span class="comment">// 例如: name=&quot;startswith&quot;, name=&quot;endswith&quot;</span></span><br></pre></td></tr></table></figure><p>通过class属性查找，且不受class包含多个名称的影响：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> icons = $(<span class="string">&#x27;[class^=&quot;icon-&quot;]&#x27;</span>); <span class="comment">// 找出所有class包含至少一个以`icon-`开头的DOM</span></span><br><span class="line"><span class="comment">// 例如: class=&quot;icon-clock&quot;, class=&quot;abc icon-home&quot;</span></span><br></pre></td></tr></table></figure><h3 id="组合查找"><a href="#组合查找" class="headerlink" title="组合查找"></a>组合查找</h3><p>根据tag和attr来组合查找：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> emailInput = $(<span class="string">&#x27;input[name=email]&#x27;</span>); <span class="comment">// 不会找出&lt;div name=&quot;email&quot;&gt;</span></span><br></pre></td></tr></table></figure><p>根据tag和class来组合查找：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> tr = $(<span class="string">&#x27;tr.red&#x27;</span>); <span class="comment">// 找出&lt;tr class=&quot;red ...&quot;&gt;...&lt;/tr&gt;</span></span><br></pre></td></tr></table></figure><h3 id="多项选择器"><a href="#多项选择器" class="headerlink" title="多项选择器"></a>多项选择器</h3><p>多项选择器就是把多个选择器用,组合起来一块选：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">$(<span class="string">&#x27;p,div&#x27;</span>); <span class="comment">// 把&lt;p&gt;和&lt;div&gt;都选出来</span></span><br><span class="line">$(<span class="string">&#x27;p.red,p.green&#x27;</span>); <span class="comment">// 把&lt;p class=&quot;red&quot;&gt;和&lt;p class=&quot;green&quot;&gt;都选出来</span></span><br></pre></td></tr></table></figure><h3 id="小练习"><a href="#小练习" class="headerlink" title="小练习"></a>小练习</h3><p>使用jQuery选择器分别选出指定元素：</p><ul><li>仅选择JavaScript  </li><li>仅选择Erlang  </li><li>选择JavaScript和Erlang  </li><li>选择所有编程语言  </li><li>选择名字input  </li><li>选择邮件和名字input</li></ul><p>DOM:</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- HTML结构 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;test-jquery&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">&quot;para-1&quot;</span> <span class="attr">class</span>=<span class="string">&quot;color-red&quot;</span>&gt;</span>JavaScript<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">&quot;para-2&quot;</span> <span class="attr">class</span>=<span class="string">&quot;color-green&quot;</span>&gt;</span>Haskell<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;color-red color-green&quot;</span>&gt;</span>Erlang<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">name</span>=<span class="string">&quot;name&quot;</span> <span class="attr">class</span>=<span class="string">&quot;color-black&quot;</span>&gt;</span>Python<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">class</span>=<span class="string">&quot;test-form&quot;</span> <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span> <span class="attr">action</span>=<span class="string">&quot;#0&quot;</span> <span class="attr">onsubmit</span>=<span class="string">&quot;return false;&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">legend</span>&gt;</span>注册新用户<span class="tag">&lt;/<span class="name">legend</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">fieldset</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">label</span>&gt;</span>名字: <span class="tag">&lt;<span class="name">input</span> <span class="attr">name</span>=<span class="string">&quot;name&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">label</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">label</span>&gt;</span>邮件: <span class="tag">&lt;<span class="name">input</span> <span class="attr">name</span>=<span class="string">&quot;email&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">label</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">label</span>&gt;</span>口令: <span class="tag">&lt;<span class="name">input</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">label</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span>&gt;</span>注册<span class="tag">&lt;/<span class="name">button</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">fieldset</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">var</span> selected = <span class="literal">null</span>;</span></span><br><span class="line"><span class="language-javascript">selected =$(<span class="string">&#x27;#para-1&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">selected =$(<span class="string">&#x27;.color-red.color-green&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">selected =$(<span class="string">&#x27;.color-red&#x27;</span>);<span class="comment">//selected =$(&#x27;.color-red.color-green,#para-1&#x27;);</span></span></span><br><span class="line"><span class="language-javascript">selected =$(<span class="string">&#x27;[class^=color-]&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">selected =$(<span class="string">&#x27;form&gt;fieldset&gt;p&gt;label&gt;input[name=name]&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">selected =$(<span class="string">&#x27;input[name=name],input[name=email]&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">if</span> (!(selected <span class="keyword">instanceof</span> jQuery)) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">return</span> <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;不是有效的jQuery对象!&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript">$(<span class="string">&#x27;#test-jquery&#x27;</span>).<span class="title function_">find</span>(<span class="string">&#x27;*&#x27;</span>).<span class="title function_">css</span>(<span class="string">&#x27;background-color&#x27;</span>, <span class="string">&#x27;&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">selected.<span class="title function_">css</span>(<span class="string">&#x27;background-color&#x27;</span>, <span class="string">&#x27;#ffd351&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">&lt;script&gt;</span></span><br><span class="line"><span class="language-javascript"></span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Learn note </category>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript学习笔记-jQuery Descendant Selector</title>
      <link href="/blog/learnote/js-jQuery-descendant-selector/"/>
      <url>/blog/learnote/js-jQuery-descendant-selector/</url>
      
        <content type="html"><![CDATA[<h2 id="层级选择器-Descendant-Selector"><a href="#层级选择器-Descendant-Selector" class="headerlink" title="层级选择器 Descendant Selector "></a>层级选择器 <code>Descendant Selector </code></h2><p>如果两个DOM元素具有层级关系，就可以用<code> $(&#39;ancestor descendant&#39;)</code> 来选择，层级之间用空格隔开。</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- HTML结构 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;testing&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;lang&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;lang-javascript&quot;</span>&gt;</span>JavaScript<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;lang-python&quot;</span>&gt;</span>Python<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;lang-lua&quot;</span>&gt;</span>Lua<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">$(<span class="string">&#x27;ul.lang li.lang-javascript&#x27;</span>); <span class="comment">// [&lt;li class=&quot;lang-javascript&quot;&gt;JavaScript&lt;/li&gt;]</span></span><br><span class="line">$(<span class="string">&#x27;div.testing li.lang-javascript&#x27;</span>); <span class="comment">// [&lt;li class=&quot;lang-javascript&quot;&gt;JavaScript&lt;/li&gt;]</span></span><br></pre></td></tr></table></figure><p><code>$(&#39;form[name=upload] input&#39;);</code> 把选择范围限定在name属性为upload的表单里。如果页面有很多表单，其他表单的<input>不会被选择。</p><p>多层选择也是允许的：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">$(<span class="string">&#x27;form.test p input&#x27;</span>); <span class="comment">// 在form表单选择被&lt;p&gt;包含的&lt;input&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Learn note </category>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript学习笔记-jQuery</title>
      <link href="/blog/learnote/js-jQuery/"/>
      <url>/blog/learnote/js-jQuery/</url>
      
        <content type="html"><![CDATA[<h2 id="使用jQuery"><a href="#使用jQuery" class="headerlink" title="使用jQuery"></a>使用<code>jQuery</code></h2><p>在<code>&lt;script&gt;</code> 标签内引用<code>src</code> 属性</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;!doctype html&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&#x27;utf-8&#x27;</span>&gt;</span><span class="tag">&lt;/<span class="name">meta</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;//code.jquery.com/jquery-3.3.1.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&#x27;button&#x27;</span> <span class="attr">onclick</span>=<span class="string">&quot;alert(&#x27;jQuery版本：&#x27; + $.fn.jquery)&quot;</span>&gt;</span>获取版本号 <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span></span><br></pre></td></tr></table></figure><h2 id="符号"><a href="#符号" class="headerlink" title="$ 符号"></a><code>$</code> 符号</h2><p><code> jQuery</code> 把所有功能全部封装在一个全局变量<code> jQuery</code> 中，而<code> $</code> 也是一个合法的变量名，它是变量<code> jQuery</code> 的别名：  </p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="variable language_">window</span>.<span class="property">jQuery</span>; <span class="comment">// jQuery(selector, context)</span></span><br><span class="line"><span class="variable language_">window</span>.<span class="property">$</span>; <span class="comment">// jQuery(selector, context)</span></span><br><span class="line">$ === jQuery; <span class="comment">// true</span></span><br><span class="line"><span class="title function_">typeof</span>($); <span class="comment">// &#x27;function&#x27;</span></span><br></pre></td></tr></table></figure><p><code>$</code>本质上就是一个函数，但是函数也是对象，于是<code>$</code>除了可以直接调用外，也可以有很多其他属性。</p>]]></content>
      
      
      <categories>
          
          <category> Learn note </category>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript学习笔记-删除DOM元素</title>
      <link href="/blog/learnote/js-dom-delete/"/>
      <url>/blog/learnote/js-dom-delete/</url>
      
        <content type="html"><![CDATA[<p>删除一个DOM节点就比插入要容易得多。<br>要删除一个节点，首先要获得该节点本身以及它的父节点，然后，调用父节点的removeChild把自己删掉：    </p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">/ 拿到待删除节点:</span><br><span class="line"><span class="keyword">var</span> self = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;to-be-removed&#x27;</span>);</span><br><span class="line"><span class="comment">// 拿到父节点:</span></span><br><span class="line"><span class="keyword">var</span> parent = self.<span class="property">parentElement</span>;</span><br><span class="line"><span class="comment">// 删除:</span></span><br><span class="line"><span class="keyword">var</span> removed = parent.<span class="title function_">removeChild</span>(self);</span><br><span class="line">removed === self; <span class="comment">// true</span></span><br></pre></td></tr></table></figure><p>当你遍历一个父节点的子节点并进行删除操作时，要注意，children属性是一个只读属性，并且它在子节点变化时会实时更新  </p><p>试验：  </p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- HTML结构 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">id</span>=<span class="string">&quot;test-list&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>JavaScript<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>Swift<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>HTML<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>ANSI C<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>CSS<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>DirectX<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure><p>把与Web开发技术不相关的节点删掉：<br>我的方案 ：    </p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> i,a</span><br><span class="line"><span class="keyword">var</span> list=<span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;test-list&quot;</span>);</span><br><span class="line">i=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(i&lt;list.<span class="property">children</span>.<span class="property">length</span>)&#123;</span><br><span class="line">     a=list.<span class="property">children</span>[i];     </span><br><span class="line">     <span class="keyword">if</span> (a.<span class="property">innerHTML</span>===<span class="string">&#x27;Swift&#x27;</span>||a.<span class="property">innerHTML</span>===<span class="string">&#x27;ANSI C&#x27;</span>||a.<span class="property">innerHTML</span>===<span class="string">&#x27;DirectX&#x27;</span>)&#123;</span><br><span class="line">         list.<span class="title function_">removeChild</span>(a);</span><br><span class="line">         i--;</span><br><span class="line">         &#125;;</span><br><span class="line">     i++;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>思考：删除以后<code>children</code> 会变吗，<code>i-- </code>有没有必要？  </p><p>测试了一下，如果要删除的元素有相邻的情况比如:  </p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">id</span>=<span class="string">&quot;test-list&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>JavaScript<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>Swift<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>HTML<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>ANSI C<span class="tag">&lt;/<span class="name">li</span>&gt;</span>     </span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>DirectX<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>CSS<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure><p>删除<code> ANSI C</code> 以后<code> children</code> 会继续减小1，<code> DirectX</code> 将会被跳过无法删除，<code> i--</code> 可以有效避免这种情况。<br>所以选择<code> while</code> 结构可以控制循环变量。  </p><p>测试源码open in browser:  </p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!Doctype&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">meta</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>js test<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">function</span> <span class="title function_">remove</span>(<span class="params">tag</span>)&#123;</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">var</span> i,a</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">var</span> list=<span class="variable language_">document</span>.<span class="title function_">getElementById</span>(tag);</span></span><br><span class="line"><span class="language-javascript">i=<span class="number">0</span>;</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">while</span>(i&lt;list.<span class="property">children</span>.<span class="property">length</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">     a=list.<span class="property">children</span>[i];     </span></span><br><span class="line"><span class="language-javascript">     <span class="keyword">if</span> (a.<span class="property">innerHTML</span>===<span class="string">&#x27;Swift&#x27;</span>||a.<span class="property">innerHTML</span>===<span class="string">&#x27;ANSI C&#x27;</span>||a.<span class="property">innerHTML</span>===<span class="string">&#x27;DirectX&#x27;</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">         list.<span class="title function_">removeChild</span>(a);</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// i--;</span></span></span><br><span class="line"><span class="language-javascript">         &#125;;</span></span><br><span class="line"><span class="language-javascript">     i++;</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&#x27;button&#x27;</span> <span class="attr">onclick</span>=<span class="string">remove(</span>&quot;<span class="attr">test-list1</span>&quot;)&gt;</span>remove<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">&lt;!-- HTML结构 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">id</span>=<span class="string">&quot;test-list1&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>JavaScript<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>Swift<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>HTML<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>ANSI C<span class="tag">&lt;/<span class="name">li</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>CSS<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>DirectX<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&#x27;button&#x27;</span> <span class="attr">onclick</span>=<span class="string">remove(</span>&quot;<span class="attr">test-list2</span>&quot;)&gt;</span>remove<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- HTML结构 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">id</span>=<span class="string">&quot;test-list2&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>JavaScript<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>Swift<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>HTML<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>ANSI C<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>DirectX<span class="tag">&lt;/<span class="name">li</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>CSS<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Learn note </category>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript学习笔记-添加DOM元素</title>
      <link href="/blog/learnote/js-dom-insert/"/>
      <url>/blog/learnote/js-dom-insert/</url>
      
        <content type="html"><![CDATA[<ul><li>appenChild</li><li>insertBefore<br> <code> parentElement.insertBefore(newElement, referenceElement);</code></li><li>createElement</li><li>setAttribute</li></ul><p>试验：</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!Doctype&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">meta</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>js test<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">function</span> <span class="title function_">change</span>(<span class="params">id,is</span>)&#123;</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">var</span> js=<span class="variable language_">document</span>.<span class="title function_">getElementById</span>(id);</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">var</span> ls=<span class="variable language_">document</span>.<span class="title function_">getElementById</span>(is);</span></span><br><span class="line"><span class="language-javascript">    ls.<span class="title function_">appendChild</span>(js)</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">function</span> <span class="title function_">append</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">var</span> list=<span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;list&quot;</span>);</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">var</span> haskell=<span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;p&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">haskell.<span class="property">id</span>=<span class="string">&#x27;haskell&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">haskell.<span class="property">innerText</span>=<span class="string">&#x27;Haskell&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">list.<span class="title function_">appendChild</span>(haskell)</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">function</span> <span class="title function_">insert</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">var</span> list=<span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;list&quot;</span>);</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">var</span> py=<span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;python&quot;</span>);</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">var</span> haskell=<span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;p&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">haskell.<span class="property">id</span>=<span class="string">&#x27;haskell&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">haskell.<span class="property">innerText</span>=<span class="string">&#x27;Haskell&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">list.<span class="title function_">insertBefore</span>(haskell,py)</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">function</span> <span class="title function_">stylle</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">var</span> d = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;style&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">d.<span class="title function_">setAttribute</span>(<span class="string">&#x27;type&#x27;</span>, <span class="string">&#x27;text/css&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">d.<span class="property">innerHTML</span> = <span class="string">&#x27;p &#123; color: red &#125;&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript"><span class="variable language_">document</span>.<span class="title function_">getElementsByTagName</span>(<span class="string">&#x27;head&#x27;</span>)[<span class="number">0</span>].<span class="title function_">appendChild</span>(d);</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">function</span> <span class="title function_">sortt</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">var</span></span></span><br><span class="line"><span class="language-javascript">     i, c, j, z</span></span><br><span class="line"><span class="language-javascript">     list = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;list&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; list.<span class="property">children</span>.<span class="property">length</span>-<span class="number">1</span>; i++) &#123;  </span></span><br><span class="line"><span class="language-javascript">    c=list.<span class="property">children</span>[i];</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">for</span> (j = i+<span class="number">1</span>; j &lt;list.<span class="property">children</span>.<span class="property">length</span>; j++) &#123;        </span></span><br><span class="line"><span class="language-javascript">          z=list.<span class="property">children</span>[j];</span></span><br><span class="line"><span class="language-javascript">         <span class="keyword">if</span>(c.<span class="property">innerHTML</span> &gt; z.<span class="property">innerHTML</span>)&#123;            </span></span><br><span class="line"><span class="language-javascript">            [c.<span class="property">innerHTML</span>,z.<span class="property">innerHTML</span>]=[z.<span class="property">innerHTML</span>,c.<span class="property">innerHTML</span>];         </span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&#x27;button&#x27;</span> <span class="attr">onclick</span>=<span class="string">change(</span>&#x27;<span class="attr">js</span>&#x27;,&#x27;<span class="attr">list</span>&#x27;)&gt;</span>click me<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&#x27;button&#x27;</span> <span class="attr">onclick</span>=<span class="string">append()</span>&gt;</span>append haskell<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&#x27;button&#x27;</span> <span class="attr">onclick</span>=<span class="string">insert()</span>&gt;</span>insert haskell<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&#x27;button&#x27;</span> <span class="attr">onclick</span>=<span class="string">stylle()</span>&gt;</span>change style<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&#x27;button&#x27;</span> <span class="attr">onclick</span>=<span class="string">sortt()</span>&gt;</span>sort<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">&quot;js&quot;</span>&gt;</span>JavaScript<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;list&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">&quot;python&quot;</span>&gt;</span>Python<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">&quot;scheme&quot;</span>&gt;</span>Scheme<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">&quot;java&quot;</span>&gt;</span>Java<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Learn note </category>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript学习笔记-更改DOM元素</title>
      <link href="/blog/learnote/js-dom-update/"/>
      <url>/blog/learnote/js-dom-update/</url>
      
        <content type="html"><![CDATA[<h2 id="更新DOM"><a href="#更新DOM" class="headerlink" title="更新DOM"></a>更新DOM</h2><p>修改节点的文本，方法有两种：  </p><ol><li>修改innerHTML属性<br>这个方式非常强大，不但可以修改一个DOM节点的文本内容，还可以直接通过HTML片段修改DOM节点内部的子树：</li></ol><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 获取&lt;p id=&quot;p-id&quot;&gt;...&lt;/p&gt;</span></span><br><span class="line"><span class="keyword">var</span> p = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;p-id&#x27;</span>);</span><br><span class="line"><span class="comment">// 设置文本为abc:</span></span><br><span class="line">p.<span class="property">innerHTML</span> = <span class="string">&#x27;ABC&#x27;</span>; <span class="comment">// &lt;p id=&quot;p-id&quot;&gt;ABC&lt;/p&gt;</span></span><br><span class="line"><span class="comment">// 设置HTML:</span></span><br><span class="line">p.<span class="property">innerHTML</span> = <span class="string">&#x27;ABC &lt;span style=&quot;color:red&quot;&gt;RED&lt;/span&gt; XYZ&#x27;</span>;</span><br><span class="line"><span class="comment">// &lt;p&gt;...&lt;/p&gt;的内部结构已修改</span></span><br></pre></td></tr></table></figure><ol start="2"><li>修改innerText或textContent属性<br>这样可以自动对字符串进行HTML编码，保证无法设置任何HTML标签：<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 获取&lt;p id=&quot;p-id&quot;&gt;...&lt;/p&gt;</span></span><br><span class="line"><span class="keyword">var</span> p = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;p-id&#x27;</span>);</span><br><span class="line"><span class="comment">// 设置文本:</span></span><br><span class="line">p.<span class="property">innerText</span> = <span class="string">&#x27;&lt;script&gt;alert(&quot;Hi&quot;)&lt;/script&gt;&#x27;</span>;</span><br><span class="line"><span class="comment">// HTML被自动编码，无法设置一个&lt;script&gt;节点:</span></span><br><span class="line"><span class="comment">// &lt;p id=&quot;p-id&quot;&gt;&amp;lt;script&amp;gt;alert(&quot;Hi&quot;)&amp;lt;/script&amp;gt;&lt;/p&gt;</span></span><br></pre></td></tr></table></figure></li></ol><p><em>两者的区别在于读取属性时，innerText不返回隐藏元素的文本，而textContent返回所有文本。</em></p><ol start="3"><li>修改CSS</li></ol><p>DOM节点的style属性对应所有的CSS，可以直接获取或设置。<br>因为CSS允许font-size这样的名称，但它并非JavaScript有效的属性名，所以需要在JavaScript中改写为驼峰式命名fontSize：</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- HTML结构 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;test-div&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">&quot;test-js&quot;</span>&gt;</span>javascript<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>Java<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 获取&lt;p&gt;javascript&lt;/p&gt;节点:</span></span><br><span class="line"><span class="keyword">var</span> js = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;test-js&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 修改文本为JavaScript:</span></span><br><span class="line"> js.<span class="property">innerHTML</span>=<span class="string">&#x27;JavaScript&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 修改CSS为: color: #ff0000, font-weight: bold</span></span><br><span class="line"> js.<span class="property">style</span>.<span class="property">color</span> = <span class="string">&#x27;#ff0000&#x27;</span>;</span><br><span class="line"> js.<span class="property">style</span>.<span class="property">fontWeight</span> = <span class="string">&#x27;bold&#x27;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="试验"><a href="#试验" class="headerlink" title="试验"></a>试验</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!Doctype&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">meta</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>js test<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">function</span> <span class="title function_">change</span>(<span class="params">clas</span>)&#123;</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">var</span> js=<span class="variable language_">document</span>.<span class="title function_">getElementById</span>(clas);</span></span><br><span class="line"><span class="language-javascript">js.<span class="property">innerHTML</span>=js.<span class="property">innerHTML</span>.<span class="title function_">toUpperCase</span>();</span></span><br><span class="line"><span class="language-javascript">js.<span class="property">style</span>.<span class="property">color</span>=<span class="string">&#x27;#f00&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">js.<span class="property">style</span>.<span class="property">fontSize</span>= <span class="number">50</span>;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">function</span> <span class="title function_">changecolor</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="language-javascript">&#123;</span></span><br><span class="line"><span class="language-javascript">element=<span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;test-js&quot;</span>)</span></span><br><span class="line"><span class="language-javascript">element.<span class="property">innerHTML</span>=element.<span class="property">innerHTML</span>.<span class="title function_">toLowerCase</span>();</span></span><br><span class="line"><span class="language-javascript">element.<span class="property">style</span>.<span class="property">color</span>=<span class="string">&#x27;#000&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">element.<span class="property">style</span>.<span class="property">fontSize</span>= <span class="number">20</span>;</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;test-div&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">&quot;test-js&quot;</span> <span class="attr">onclick</span>=<span class="string">changecolor()</span>&gt;</span>javascript<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>Java<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  </span><br><span class="line">  <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&#x27;button&#x27;</span> <span class="attr">onclick</span>=<span class="string">change(</span>&#x27;<span class="attr">test-js</span>&#x27;)&gt;</span>click me<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Learn note </category>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript学习笔记-操作DOM</title>
      <link href="/blog/learnote/js-dom/"/>
      <url>/blog/learnote/js-dom/</url>
      
        <content type="html"><![CDATA[<p>DOM 节点选择<br><code>document.getElementById()</code><br><code>document.getElementsByTagName()</code><br><code>document.getElementsByClassName()</code></p><p>由于ID在HTML文档中是唯一的，所以document.getElementById()可以直接定位唯一的一个DOM节点。document.getElementsByTagName()和document.getElementsByClassName()总是返回一组DOM节点。要精确地选择DOM，可以先定位父节点，再从父节点开始选择，以缩小范围。  </p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 返回ID为&#x27;test&#x27;的节点：</span></span><br><span class="line"><span class="keyword">var</span> test = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;test&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 先定位ID为&#x27;test-table&#x27;的节点，再返回其内部所有tr节点：</span></span><br><span class="line"><span class="keyword">var</span> trs = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;test-table&#x27;</span>).<span class="title function_">getElementsByTagName</span>(<span class="string">&#x27;tr&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 先定位ID为&#x27;test-div&#x27;的节点，再返回其内部所有class包含red的节点：</span></span><br><span class="line"><span class="keyword">var</span> reds = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;test-div&#x27;</span>).<span class="title function_">getElementsByClassName</span>(<span class="string">&#x27;red&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取节点test下的所有直属子节点:</span></span><br><span class="line"><span class="keyword">var</span> cs = test.<span class="property">children</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取节点test下第一个、最后一个子节点：</span></span><br><span class="line"><span class="keyword">var</span> first = test.<span class="property">firstElementChild</span>;</span><br><span class="line"><span class="keyword">var</span> last = test.<span class="property">lastElementChild</span>;</span><br></pre></td></tr></table></figure><p>使用querySelector()和querySelectorAll()，需要了解selector语法，然后使用条件来获取节点，更加方便：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 通过querySelector获取ID为q1的节点：</span></span><br><span class="line"><span class="keyword">var</span> q1 = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;#q1&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 通过querySelectorAll获取q1节点内的符合条件的所有节点：</span></span><br><span class="line"><span class="keyword">var</span> ps = q1.<span class="title function_">querySelectorAll</span>(<span class="string">&#x27;div.highlighted &gt; p&#x27;</span>);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Learn note </category>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript学习笔记- window对象</title>
      <link href="/blog/learnote/js-window-obj/"/>
      <url>/blog/learnote/js-window-obj/</url>
      
        <content type="html"><![CDATA[<h3 id="windows"><a href="#windows" class="headerlink" title="windows"></a>windows</h3><p>get the inner size of browser:<br><code>windows.innerWidth</code><br><code>windows.innerHeight</code>  </p><p>get the global size of browser:<br><code>windows.outerWidth</code><br><code>windows.outerHeight</code>  </p><h3 id="navigator"><a href="#navigator" class="headerlink" title="navigator"></a>navigator</h3><p>get information of browser<br>navigator.appName:浏览器名称；<br>navigator.appVersion:浏览器版本；<br>navigator.language:浏览器设置的语言；<br>navigator.platform:操作系统类型；<br>navigator.userAgent:浏览器设定的User-Agent字符串。</p><h3 id="screen"><a href="#screen" class="headerlink" title="screen"></a>screen</h3><p>use <code>screen</code> to get screen information:<br>screen.width:<br>screen.height:<br>screen.colorDepth:</p><h3 id="location"><a href="#location" class="headerlink" title="location"></a>location</h3><p>for a <code>url=http://www.example.com:8080/path/index.html?a=1&amp;b=2#TOP</code>   </p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">location.href : get the current url;  </span><br><span class="line">location.protocol; // &#x27;http&#x27;</span><br><span class="line">location.host; // &#x27;www.example.com&#x27;</span><br><span class="line">location.port; // &#x27;8080&#x27;</span><br><span class="line">location.pathname; // &#x27;/path/index.html&#x27;</span><br><span class="line">location.search; // &#x27;?a=1&amp;b=2&#x27;</span><br><span class="line">location.hash; // &#x27;TOP&#x27;</span><br></pre></td></tr></table></figure><p>加载一个新页面，可以调用<code>location.assign()</code>。如果要重新加载当前页面，调用location.reload()方法非常方便  </p><h3 id="document"><a href="#document" class="headerlink" title="document"></a>document</h3><p>document对象表示当前页面。由于HTML在浏览器中以DOM形式表示为树形结构，document对象就是整个DOM树的根节点<br>document的title属性是从HTML文档中的<title>xxx</title>读取的，但是可以动态改变：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">document.title = &#x27;努力学习JavaScript!&#x27;;</span><br></pre></td></tr></table></figure><p>用document对象提供的getElementById()和getElementsByTagName()可以按ID获得一个DOM节点和按Tag名称获得一组DOM节点</p>]]></content>
      
      
      <categories>
          
          <category> Learn note </category>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript学习笔记-Class(ES6)</title>
      <link href="/blog/learnote/js-class/"/>
      <url>/blog/learnote/js-class/</url>
      
        <content type="html"><![CDATA[<p>之前的原型继承关系可以看出，JS在实现继承时还是很麻烦的，需要大量代码。<br>但是，class出现了。</p><h2 id="class"><a href="#class" class="headerlink" title="class"></a>class</h2><p>class从ES6开始正式被引入到JavaScript中,目的就是让定义类更简单。</p><p>先前的类方法：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">Student</span>(<span class="params">name</span>)&#123;</span><br><span class="line"><span class="variable language_">this</span>.<span class="property">name</span>=name;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title class_">Student</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">hello</span>= <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line"><span class="title function_">alert</span>(<span class="string">&quot;Hello, &quot;</span>+<span class="variable language_">this</span>.<span class="property">name</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>用class 构建：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Student</span>&#123;</span><br><span class="line"><span class="title function_">constructor</span>(<span class="params">name</span>)&#123;</span><br><span class="line"><span class="variable language_">this</span>.<span class="property">name</span>=name;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_">hello</span>(<span class="params"></span>)&#123;</span><br><span class="line"><span class="title function_">alert</span>(<span class="string">&#x27;Hello, &#x27;</span>+<span class="variable language_">this</span>.<span class="property">name</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>实例化：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> xiaoming = <span class="keyword">new</span> <span class="title class_">Student</span>(<span class="string">&#x27;小明&#x27;</span>);</span><br><span class="line">xiaoming.<span class="title function_">hello</span>();</span><br></pre></td></tr></table></figure><h2 id="class继承"><a href="#class继承" class="headerlink" title="class继承"></a>class继承</h2><p>利用class继承非常方便，直接通过<code> extends</code> 来实现：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">PrimaryStudent</span> <span class="keyword">extends</span> <span class="title class_ inherited__">Student</span>&#123;</span><br><span class="line"><span class="title function_">constructor</span>(<span class="params">name,name</span>)&#123;</span><br><span class="line"><span class="title function_">supper</span>(name);</span><br><span class="line"><span class="variable language_">this</span>.<span class="property">grade</span>=grade;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_">myGrade</span>(<span class="params"></span>)&#123;</span><br><span class="line"><span class="title function_">alert</span>(<span class="variable language_">this</span>.<span class="property">name</span>+<span class="string">&quot; your grade is &quot;</span>+<span class="variable language_">this</span>.<span class="property">grade</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注意<code> PrimaryStudent</code> 的定义也是<code> class</code> 关键字实现的，而<code> extends</code> 则表示原型链对象来自<code> Student</code> 。<br>子类的构造函数可能会与父类不太相同，例如，<code> PrimaryStudent</code> 需要<code> name</code> 和<code> grade</code> 两个参数，并且需要通过<code> super(name)</code> 来调用父类的构造函数，否则父类的<code> name</code> 属性无法正常初始化。</p><p><code> PrimaryStudent</code> 已经自动获得了父类<code> Student</code> 的<code> hello</code> 方法，我们又在子类中定义了新的<code> myGrade</code> 方法。</p><p>for python:</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">PrimaryStudent</span>(<span class="title class_ inherited__">Student</span>):</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self,name,grade</span>):</span><br><span class="line"><span class="built_in">super</span>(PrimaryStudent,self).__init__(name)</span><br><span class="line">self.grade=grade</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">hello</span>(<span class="params">self</span>):</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;hello, &quot;</span>,self.name)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Learn note </category>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript学习笔记-Inherits</title>
      <link href="/blog/learnote/js-inherits/"/>
      <url>/blog/learnote/js-inherits/</url>
      
        <content type="html"><![CDATA[<h2 id="原型继承"><a href="#原型继承" class="headerlink" title="原型继承"></a>原型继承</h2><p>c++,python,java继承的本质是扩展一个已有的Class，并生成新的Subclass。JavaScript由于采用原型继承，我们无法直接扩展一个Class，因为根本不存在Class这种类型。</p><p><code> JavaScript</code> 的原型继承实现方式：</p><ul><li><p>定义新的构造函数，并在内部用<code> call()</code> 调用希望<code>“继承”</code>的构造函数，并绑定<code> this</code> ；</p></li><li><p>借助中间函数<code> F</code> 实现原型链继承，最好通过封装的<code> inherits</code> 函数完成；</p></li><li><p>继续在新的构造函数的原型上定义新方法。</p></li></ul><h3 id="inherits-方法构造"><a href="#inherits-方法构造" class="headerlink" title="inherits 方法构造"></a>inherits 方法构造</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">inherits</span>(<span class="params">Child,Parent</span>)&#123;</span><br><span class="line"><span class="keyword">var</span> F=<span class="keyword">function</span>(<span class="params"></span>)&#123;&#125;;</span><br><span class="line">F.<span class="property"><span class="keyword">prototype</span></span>=<span class="title class_">Parent</span>.<span class="property"><span class="keyword">prototype</span></span>;</span><br><span class="line"><span class="title class_">Child</span>.<span class="property"><span class="keyword">prototype</span></span>=<span class="keyword">new</span> <span class="title function_">F</span>();</span><br><span class="line"></span><br><span class="line"><span class="title class_">Child</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">constructor</span>=<span class="title class_">Child</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//实例</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">Student</span>(<span class="params">props</span>)&#123;</span><br><span class="line"><span class="variable language_">this</span>.<span class="property">name</span>=props.<span class="property">name</span> || <span class="string">&#x27;unnamed&#x27;</span>;</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="title class_">Student</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">Hello</span>=<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line"><span class="title function_">alert</span>( <span class="string">&quot;Hello &quot;</span>+<span class="variable language_">this</span>.<span class="property">name</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">primaryStudent</span>(<span class="params">props</span>)&#123;</span><br><span class="line">call <span class="title class_">Student</span>(<span class="variable language_">this</span>,props);</span><br><span class="line"><span class="variable language_">this</span>.<span class="property">grade</span>=props.<span class="property">grade</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_">inherits</span>(primaryStudent,<span class="title class_">Student</span>);</span><br><span class="line"></span><br><span class="line">primaryStudent.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">getgrade</span>=<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">grade</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Learn note </category>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript学习笔记-JSON</title>
      <link href="/blog/learnote/js-json/"/>
      <url>/blog/learnote/js-json/</url>
      
        <content type="html"><![CDATA[<h2 id="json"><a href="#json" class="headerlink" title="json"></a>json</h2><p>JSON是<code>JavaScript Object Notation</code>的缩写，它是一种数据交换格式。<br>2002年，雅虎的高级架构师道格拉斯·克罗克福特（Douglas Crockford）发明了<code>JSON</code>这种超轻量级的数据交换格式。  </p><h3 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h3><ul><li><code>number</code>：和JavaScript的 <code>number</code>完全一致；</li><li><code>boolean</code>：就是JavaScript的 <code>true</code>或 <code>false</code>；</li><li><code>string</code>：就是JavaScript的 <code>string</code>；</li><li><code>null</code>：就是JavaScript的 <code>null</code>；</li><li><code>array</code>：就是JavaScript的Array表示方式——<code>[]</code>；</li><li><code>object</code>：就是JavaScript的 <code>&#123; ... &#125;</code>表示方式。</li></ul><p>and …  </p><ul><li>字符集必须是 <code>UTF-8</code>;</li><li><code>JSON</code> 的字符串规定必须用双引号 <code>&quot;&quot;</code>，<code>Object</code> 的键也必须用双引号 <code>&quot;&quot;</code>。</li></ul><h2 id="序列化"><a href="#序列化" class="headerlink" title="序列化"></a>序列化</h2><p>使用<code>JSON.stringify()</code>方法。<br>把任何JavaScript对象变成JSON，就是把这个对象序列化成一个JSON格式的字符串，这样才能够通过网络传递给其他计算机。</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> xm=&#123;</span><br><span class="line"><span class="attr">name</span>: <span class="string">&#x27;xiaoming&#x27;</span>,</span><br><span class="line"><span class="attr">age</span>:<span class="number">14</span>,</span><br><span class="line"><span class="attr">gender</span>:<span class="string">&#x27;M&#x27;</span>,</span><br><span class="line"><span class="attr">marriage</span>: <span class="literal">false</span>,</span><br><span class="line"><span class="attr">grade</span>: <span class="literal">null</span>,</span><br><span class="line"><span class="attr">skills</span>:[<span class="string">&#x27;js&#x27;</span>,<span class="string">&#x27;cpp&#x27;</span>,<span class="string">&#x27;ncl&#x27;</span>,<span class="string">&#x27;python&#x27;</span>]</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> s=<span class="title class_">JSON</span>.<span class="title function_">stringify</span>(xm);</span><br><span class="line"><span class="title function_">alert</span>(s); </span><br><span class="line"><span class="comment">//&quot;&#123;&quot;name&quot;:&quot;xiaoming&quot;,&quot;age&quot;:14,&quot;gender&quot;:&quot;M&quot;,&quot;marriage&quot;:false,&quot;grade&quot;:null,&quot;skills&quot;:[&quot;js&quot;,&quot;cpp&quot;,&quot;ncl&quot;,&quot;python&quot;]&#125;&quot;</span></span><br></pre></td></tr></table></figure><p>按缩进输出：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="title class_">JSON</span>.<span class="title function_">stringify</span>(xm, <span class="literal">null</span>, <span class="string">&#x27;  &#x27;</span>);<span class="comment">//设置缩进</span></span><br><span class="line"><span class="comment">//results</span></span><br><span class="line"><span class="string">&quot;&#123;</span></span><br><span class="line"><span class="string">  &quot;</span>name<span class="string">&quot;: &quot;</span>xiaoming<span class="string">&quot;,</span></span><br><span class="line"><span class="string">  &quot;</span>age<span class="string">&quot;: 14,</span></span><br><span class="line"><span class="string">  &quot;</span>gender<span class="string">&quot;: &quot;</span>M<span class="string">&quot;,</span></span><br><span class="line"><span class="string">  &quot;</span>marriage<span class="string">&quot;: false,</span></span><br><span class="line"><span class="string">  &quot;</span>grade<span class="string">&quot;: null,</span></span><br><span class="line"><span class="string">  &quot;</span>skills<span class="string">&quot;: [</span></span><br><span class="line"><span class="string">    &quot;</span>js<span class="string">&quot;,</span></span><br><span class="line"><span class="string">    &quot;</span>cpp<span class="string">&quot;,</span></span><br><span class="line"><span class="string">    &quot;</span>ncl<span class="string">&quot;,</span></span><br><span class="line"><span class="string">    &quot;</span>python<span class="string">&quot;</span></span><br><span class="line"><span class="string">  ]</span></span><br><span class="line"><span class="string">&#125;&quot;</span></span><br></pre></td></tr></table></figure><p>第二个参数用于控制如何筛选对象的键值，如果我们只想输出指定的属性，可以传入 <code>Array</code>：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="title class_">JSON</span>.<span class="title function_">stringify</span>(xm, [<span class="string">&#x27;name&#x27;</span>, <span class="string">&#x27;skills&#x27;</span>], <span class="string">&#x27;  &#x27;</span>);<span class="comment">//指定返回属性，默认null返回全部</span></span><br><span class="line"><span class="comment">//results</span></span><br><span class="line"><span class="string">&quot;&#123;</span></span><br><span class="line"><span class="string">  &quot;</span>name<span class="string">&quot;: &quot;</span>xiaoming<span class="string">&quot;,</span></span><br><span class="line"><span class="string">  &quot;</span>skills<span class="string">&quot;: [</span></span><br><span class="line"><span class="string">    &quot;</span>js<span class="string">&quot;,</span></span><br><span class="line"><span class="string">    &quot;</span>cpp<span class="string">&quot;,</span></span><br><span class="line"><span class="string">    &quot;</span>ncl<span class="string">&quot;,</span></span><br><span class="line"><span class="string">    &quot;</span>python<span class="string">&quot;</span></span><br><span class="line"><span class="string">  ]</span></span><br><span class="line"><span class="string">&#125;&quot;</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">convert</span>(<span class="params">key,value</span>)&#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">typeof</span> value===<span class="string">&#x27;string&#x27;</span>)&#123;</span><br><span class="line"><span class="keyword">return</span> value.<span class="title function_">toUpperCase</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> value;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title class_">JSON</span>.<span class="title function_">stringify</span>(xm,convert,<span class="string">&#x27; &#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//results</span></span><br><span class="line"><span class="string">&quot;&#123;</span></span><br><span class="line"><span class="string"> &quot;</span>name<span class="string">&quot;: &quot;</span><span class="variable constant_">XIAOMING</span><span class="string">&quot;,</span></span><br><span class="line"><span class="string"> &quot;</span>age<span class="string">&quot;: 14,</span></span><br><span class="line"><span class="string"> &quot;</span>gender<span class="string">&quot;: &quot;</span>M<span class="string">&quot;,</span></span><br><span class="line"><span class="string"> &quot;</span>marriage<span class="string">&quot;: false,</span></span><br><span class="line"><span class="string"> &quot;</span>grade<span class="string">&quot;: null,</span></span><br><span class="line"><span class="string"> &quot;</span>skills<span class="string">&quot;: [</span></span><br><span class="line"><span class="string">  &quot;</span><span class="variable constant_">JS</span><span class="string">&quot;,</span></span><br><span class="line"><span class="string">  &quot;</span><span class="variable constant_">CPP</span><span class="string">&quot;,</span></span><br><span class="line"><span class="string">  &quot;</span><span class="variable constant_">NCL</span><span class="string">&quot;,</span></span><br><span class="line"><span class="string">  &quot;</span><span class="variable constant_">PYTHON</span><span class="string">&quot;</span></span><br><span class="line"><span class="string"> ]</span></span><br><span class="line"><span class="string">&#125;&quot;</span></span><br></pre></td></tr></table></figure><p>可以给xiaoming定义一个toJSON()的方法，直接返回JSON应该序列化的数据:</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> xm=&#123;</span><br><span class="line"><span class="attr">name</span>:<span class="string">&#x27;xiaoming&#x27;</span>,</span><br><span class="line"><span class="attr">age</span>:<span class="number">14</span>,</span><br><span class="line"><span class="attr">gender</span>:<span class="string">&#x27;M&#x27;</span>,</span><br><span class="line"><span class="attr">marriage</span>: <span class="literal">false</span>,</span><br><span class="line"><span class="attr">grade</span>: <span class="literal">null</span>,</span><br><span class="line"><span class="attr">skills</span>: [<span class="string">&#x27;js&#x27;</span>,<span class="string">&#x27;cpp&#x27;</span>,<span class="string">&#x27;ncl&#x27;</span>,<span class="string">&#x27;python&#x27;</span>],</span><br><span class="line"></span><br><span class="line"><span class="attr">toJSON</span>: <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line"><span class="keyword">return</span> &#123;<span class="string">&quot;name&quot;</span>: <span class="variable language_">this</span>.<span class="property">name</span>,</span><br><span class="line"><span class="string">&quot;age&quot;</span>:<span class="variable language_">this</span>.<span class="property">age</span>,</span><br><span class="line"><span class="string">&quot;skill&quot;</span>:<span class="variable language_">this</span>.<span class="property">skills</span></span><br><span class="line">&#125;;</span><br><span class="line">&#125;</span><br><span class="line">    &#125;;</span><br><span class="line"><span class="title class_">JSON</span>.<span class="title function_">stringify</span>(xm);</span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="string">&quot;&#123;&quot;</span>name<span class="string">&quot;:&quot;</span>xiaoming<span class="string">&quot;,&quot;</span>age<span class="string">&quot;:14,&quot;</span>skill<span class="string">&quot;:[&quot;</span>js<span class="string">&quot;,&quot;</span>cpp<span class="string">&quot;,&quot;</span>ncl<span class="string">&quot;,&quot;</span>python<span class="string">&quot;]&#125;&quot;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="反序列化"><a href="#反序列化" class="headerlink" title="反序列化"></a>反序列化</h2><p>如果我们收到一个JSON格式的字符串，只需要把它反序列化成一个JavaScript对象，就可以在JavaScript中直接使用这个对象了。</p><p>拿到一个JSON格式的字符串，我们直接用JSON.parse()把它变成一个JavaScript对象：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="title class_">JSON</span>.<span class="title function_">parse</span>(<span class="string">&#x27;[1,2,3,true]&#x27;</span>); <span class="comment">// [1, 2, 3, true]</span></span><br><span class="line"><span class="title class_">JSON</span>.<span class="title function_">parse</span>(<span class="string">&#x27;&#123;&quot;name&quot;:&quot;小明&quot;,&quot;age&quot;:14&#125;&#x27;</span>); <span class="comment">// Object &#123;name: &#x27;小明&#x27;, age: 14&#125;</span></span><br><span class="line"><span class="title class_">JSON</span>.<span class="title function_">parse</span>(<span class="string">&#x27;true&#x27;</span>); <span class="comment">// true</span></span><br><span class="line"><span class="title class_">JSON</span>.<span class="title function_">parse</span>(<span class="string">&#x27;123.45&#x27;</span>); <span class="comment">// 123.45</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> s=<span class="string">&#x27;&#123;&quot;name&quot;: &quot;XIAOMING&quot;,&quot;age&quot;: 14,&quot;gender&quot;: &quot;M&quot;,&quot;marriage&quot;: false,&quot;grade&quot;: null,&quot;skills&quot;: [&quot;JS&quot;,&quot;CPP&quot;,&quot;NCL&quot;,&quot;PYTHON&quot;]&#125;&#x27;</span></span><br><span class="line"><span class="title class_">JSON</span>.<span class="title function_">parse</span>(s);<span class="comment">//Object &#123;name: &quot;XIAOMING&quot;, age: 14, gender: &quot;M&quot;, marriage: false, grade: null…&#125;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Learn note </category>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript学习笔记-prototype</title>
      <link href="/blog/learnote/js-prototype/"/>
      <url>/blog/learnote/js-prototype/</url>
      
        <content type="html"><![CDATA[<h2 id="原型-prototype"><a href="#原型-prototype" class="headerlink" title="原型 prototype"></a>原型 prototype</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> <span class="title class_">Student</span>=&#123;</span><br><span class="line"><span class="attr">name</span>:<span class="string">&#x27;robort&#x27;</span>,</span><br><span class="line"><span class="attr">height</span>:<span class="number">1.2</span>,</span><br><span class="line"><span class="attr">run</span>:<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>.<span class="property">name</span>+<span class="string">&quot; is running...&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> xm=<span class="title class_">Object</span>.<span class="title function_">create</span>(<span class="title class_">Student</span>);</span><br><span class="line">xm.<span class="property">name</span>=<span class="string">&#x27;xiaoming&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">xm.<span class="property">name</span><span class="comment">//&quot;xiaoming&quot;</span></span><br><span class="line">xm.<span class="title function_">run</span>()<span class="comment">//&quot;xiaoming is running...&quot;</span></span><br><span class="line">xm.<span class="property">height</span><span class="comment">//1.2</span></span><br><span class="line">xm.<span class="property">__proto__</span>===<span class="title class_">Student</span>; <span class="comment">//true</span></span><br></pre></td></tr></table></figure><h2 id="构造prototype"><a href="#构造prototype" class="headerlink" title="构造prototype"></a>构造prototype</h2><p>除了直接用{ … }创建一个对象外，JavaScript还可以用一种构造函数的方法来创建对象。<br>它的用法是，先定义一个构造函数：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">Student</span>(<span class="params">name,age</span>)&#123;</span><br><span class="line"><span class="variable language_">this</span>.<span class="property">name</span>=name;</span><br><span class="line"><span class="variable language_">this</span>.<span class="property">age</span>=age;</span><br><span class="line"><span class="variable language_">this</span>.<span class="property">hello</span>=<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line"><span class="title function_">alert</span>(<span class="string">&quot;hello &quot;</span>+<span class="variable language_">this</span>.<span class="property">name</span>+<span class="string">&quot; you are &quot;</span>+<span class="variable language_">this</span>.<span class="property">age</span>);</span><br><span class="line">&#125;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//用关键字new来调用这个函数，并返回一个对象：</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> xm=<span class="keyword">new</span> <span class="title class_">Student</span>(<span class="string">&#x27;xiaoming&#x27;</span>,<span class="number">18</span>);</span><br><span class="line">xm.<span class="property">name</span>;<span class="comment">//&quot;xiaomming&quot;</span></span><br><span class="line">xm.<span class="title function_">hello</span>();<span class="comment">//&quot;hello xiaoming you are 18&quot;</span></span><br><span class="line"></span><br><span class="line">xm <span class="keyword">instanceof</span> <span class="title class_">Student</span>; <span class="comment">// true</span></span><br></pre></td></tr></table></figure><p>注意，如果不写<code>new</code>，这就是一个普通函数，它返回<code>undefined</code>。但是，如果写了<code>new</code>，它就变成了一个构造函数，它绑定的<code>this</code>指向新创建的对象，并默认返回<code>this</code>，也就是说，不需要在最后写<code>return this</code>;。</p><p>类似于<code>python</code> 的构造方法：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Student</span>():</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self,name,age</span>):</span><br><span class="line">self.name=name</span><br><span class="line">self.age=age</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">hello</span>(<span class="params">self</span>):</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;hello &quot;</span>+self.name+<span class="string">&quot; you are &quot;</span>,self.age)</span><br><span class="line"></span><br><span class="line">xm=Student(<span class="string">&#x27;xiaoming&#x27;</span>,<span class="number">18</span>)</span><br><span class="line"><span class="built_in">print</span>(xm.hello())</span><br></pre></td></tr></table></figure><h2 id="共享方法"><a href="#共享方法" class="headerlink" title="共享方法"></a>共享方法</h2><p>如果我们通过new Student()创建了很多对象，这些对象的hello函数实际上只需要共享同一个函数就可以了，这样可以节省很多内存。</p><p>要让创建的对象共享一个hello函数，根据对象的属性查找原则，我们只要把hello函数移动到xiaoming、xiaohong这些对象共同的原型上就可以了，也就是Student.prototype：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">Student</span>(<span class="params">name</span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">name</span> = name;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title class_">Student</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">hello</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="title function_">alert</span>(<span class="string">&#x27;Hello, &#x27;</span> + <span class="variable language_">this</span>.<span class="property">name</span> + <span class="string">&#x27;!&#x27;</span>);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Learn note </category>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript学习笔记-Regular Expression</title>
      <link href="/blog/learnote/js-regexp/"/>
      <url>/blog/learnote/js-regexp/</url>
      
        <content type="html"><![CDATA[<h2 id="JS-正则"><a href="#JS-正则" class="headerlink" title="JS 正则"></a>JS 正则</h2><ul><li><p><code>\d</code>  可以匹配一个数字</p></li><li><p><code>\w</code>  可以匹配一个字母或数字</p></li><li><p><code>\s</code>  可以匹配一个空格</p></li><li><p><code>.</code>   可以匹配任意字符</p></li><li><p><code>*</code>   表示任意个字符（包括 0 个）</p></li><li><p><code>+</code>   表示至少一个字符</p></li><li><p><code>?</code>   表示 0 个或 1 个字符</p></li><li><p><code>&#123;n&#125;</code>  表示 n 个字符  </p></li><li><p><code>&#123;n,m&#125;</code>  表示 n-m 个字符    </p></li><li><p><code>[]</code> 表示范围     </p><ul><li><code>[0-9a-zA-Z\_]</code>   可以匹配一个数字、字母或者下划线  </li><li><code>[0-9a-zA-Z\_]+</code>   可以匹配至少由一个数字、字母或者下划线组成的字符串，比如’a100’，’0_Z’，’js2015’等等；</li><li><code>[a-zA-Z\_\$][0-9a-zA-Z\_\$]*</code>   可以匹配由字母或下划线、$开头，后接任意个由一个数字、字母或者下划线、$组成的字符串，也就是JavaScript允许的变量名；</li><li><code>[a-zA-Z\_\$][0-9a-zA-Z\_\$]&#123;0, 19&#125;</code>   更精确地限制了变量的长度是1-20个字符（前面1个字符+后面最多19个字符）。</li></ul></li><li><p><code>A|B</code>可以匹配A或B，所以<code>(J|j)ava(S|s)cript</code>可以匹配’JavaScript’、’Javascript’、’javaScript’或者’javascript’</p></li></ul><h2 id="RegExp"><a href="#RegExp" class="headerlink" title="RegExp"></a>RegExp</h2><p>JavaScript有两种方式创建一个正则表达式：</p><ol><li>直接通过<code>/正则表达式/</code>写出来</li><li>通过<code>new RegExp(&#39;正则表达式&#39;)</code>创建一个<code>RegExp</code>对象。</li></ol><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> re1 = <span class="regexp">/ABC\-001/</span>;</span><br><span class="line"><span class="keyword">var</span> re2 = <span class="keyword">new</span> <span class="title class_">RegExp</span>(<span class="string">&#x27;ABC\\-001&#x27;</span>);</span><br><span class="line"></span><br><span class="line">re1; <span class="comment">// /ABC\-001/</span></span><br><span class="line">re2; <span class="comment">// /ABC\-001/</span></span><br></pre></td></tr></table></figure><p>RegExp对象的test()方法用于测试给定的字符串是否符合条件。</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> re = <span class="regexp">/^\d&#123;3&#125;\-\d&#123;3,8&#125;$/</span>;</span><br><span class="line">re.<span class="title function_">test</span>(<span class="string">&#x27;010-12345&#x27;</span>); <span class="comment">// true</span></span><br><span class="line">re.<span class="title function_">test</span>(<span class="string">&#x27;010-1234x&#x27;</span>); <span class="comment">// false</span></span><br><span class="line">re.<span class="title function_">test</span>(<span class="string">&#x27;010 12345&#x27;</span>); <span class="comment">// false</span></span><br></pre></td></tr></table></figure><h2 id="切分字符串"><a href="#切分字符串" class="headerlink" title="切分字符串"></a>切分字符串</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="string">&#x27;a b   c&#x27;</span>.<span class="title function_">split</span>(<span class="string">&#x27; &#x27;</span>); <span class="comment">// [&#x27;a&#x27;, &#x27;b&#x27;, &#x27;&#x27;, &#x27;&#x27;, &#x27;c&#x27;]  不彻底</span></span><br><span class="line"><span class="string">&#x27;a b   c&#x27;</span>.<span class="title function_">split</span>(<span class="regexp">/\s+/</span>); <span class="comment">// [&#x27;a&#x27;, &#x27;b&#x27;, &#x27;c&#x27;]</span></span><br><span class="line"><span class="string">&#x27;a,b, c  d&#x27;</span>.<span class="title function_">split</span>(<span class="regexp">/[\s\,]+/</span>); <span class="comment">// [&#x27;a&#x27;, &#x27;b&#x27;, &#x27;c&#x27;, &#x27;d&#x27;]</span></span><br><span class="line"><span class="string">&#x27;a,b;; c  d&#x27;</span>.<span class="title function_">split</span>(<span class="regexp">/[\s\,\;]+/</span>); <span class="comment">// [&#x27;a&#x27;, &#x27;b&#x27;, &#x27;c&#x27;, &#x27;d&#x27;]</span></span><br></pre></td></tr></table></figure><h2 id="分组"><a href="#分组" class="headerlink" title="分组"></a>分组</h2><p>用()表示的就是要提取的分组（Group）。比如：  </p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> re = <span class="regexp">/^(\d&#123;3&#125;)-(\d&#123;3,8&#125;)$/</span>;</span><br><span class="line">re.<span class="title function_">exec</span>(<span class="string">&#x27;010-12345&#x27;</span>); <span class="comment">// [&#x27;010-12345&#x27;, &#x27;010&#x27;, &#x27;12345&#x27;]</span></span><br><span class="line">re.<span class="title function_">exec</span>(<span class="string">&#x27;010 12345&#x27;</span>); <span class="comment">// null</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> re = <span class="regexp">/^[0-9a-zA-Z\.]+@[0-9a-zA-Z]+\.[0-9a-zA-Z]+$/</span>;  <span class="comment">//验证Email地址的正则表达式 &#x27;bill.gates@microsoft.com&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> re = <span class="regexp">/^&lt;([\w\s]+)&gt;\s(\w+\.?\w*@\w+\.\w&#123;3&#125;)$/</span>;  <span class="comment">//验证并提取出带名字的Email地址</span></span><br><span class="line"><span class="keyword">var</span> r = re.<span class="title function_">exec</span>(<span class="string">&#x27;&lt;Tom Paris&gt; tom@voyager.org&#x27;</span>);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Learn note </category>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript学习笔记-变量作用域与解构赋值</title>
      <link href="/blog/learnote/js-action-scope/"/>
      <url>/blog/learnote/js-action-scope/</url>
      
        <content type="html"><![CDATA[<h2 id="变量作用域"><a href="#变量作用域" class="headerlink" title="变量作用域"></a>变量作用域</h2><ul><li>如果一个变量在函数体内部申明，则该变量的作用域为整个函数体，在函数体外不可引用该变量;  </li><li>如果两个不同的函数各自申明了同一个变量，那么该变量只在各自的函数体内起作用。换句话说，不同函数内部的同名变量互相独立，互不影响;</li><li>JavaScript的函数可以嵌套，此时，内部函数可以访问外部函数定义的变量，反过来则不行;  </li><li>JavaScript的函数在查找变量时从自身函数定义开始，从“内”向“外”查找。如果内部函数定义了与外部函数重名的变量，则内部函数的变量将“屏蔽”外部函数的变量。</li></ul><h3 id="变量提升"><a href="#变量提升" class="headerlink" title="变量提升"></a>变量提升</h3><p>JavaScript的函数定义有个特点，它会先扫描整个函数体的语句，把所有申明的变量“提升”到函数顶部</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="meta">&#x27;use strict&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">foo</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> x = <span class="string">&#x27;Hello, &#x27;</span> + y;</span><br><span class="line">    <span class="title function_">alert</span>(x);</span><br><span class="line">    <span class="keyword">var</span> y = <span class="string">&#x27;Bob&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_">foo</span>();</span><br></pre></td></tr></table></figure><p>虽然是strict模式，但语句var x &#x3D; ‘Hello, ‘ + y;并不报错，原因是变量y在稍后申明了。但是alert显示Hello, undefined，说明变量y的值为<code>undefined</code>。<br>这正是因为JavaScript引擎自动提升了变量y的声明，但不会提升变量y的赋值。<br>请严格遵守“在函数内部首先申明所有变量”这一规则。<br>最常见的做法是用一个var申明函数内部用到的所有变量:  </p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">foo</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">var</span></span><br><span class="line">        x = <span class="number">1</span>, <span class="comment">// x初始化为1</span></span><br><span class="line">        y = x + <span class="number">1</span>, <span class="comment">// y初始化为2</span></span><br><span class="line">        z, i; <span class="comment">// z和i为undefined</span></span><br><span class="line">    <span class="comment">// 其他语句:</span></span><br><span class="line">    <span class="keyword">for</span> (i=<span class="number">0</span>; i&lt;<span class="number">100</span>; i++) &#123;</span><br><span class="line">        ...</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="string">``</span><span class="string">`  </span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">### 全局作用域  </span></span><br><span class="line"><span class="string">不在任何函数内定义的变量就具有全局作用域。实际上，JavaScript默认有一个全局对象window，全局作用域的变量实际上被绑定到window的一个属性:  </span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">`</span><span class="string">``</span><span class="title class_">JavaScript</span></span><br><span class="line"><span class="meta">&#x27;use strict&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> course = <span class="string">&#x27;Learn JavaScript&#x27;</span>;</span><br><span class="line"><span class="title function_">alert</span>(course); <span class="comment">// &#x27;Learn JavaScript&#x27;</span></span><br><span class="line"><span class="title function_">alert</span>(<span class="variable language_">window</span>.<span class="property">course</span>); <span class="comment">// &#x27;Learn JavaScript&#x27;</span></span><br></pre></td></tr></table></figure><p>以变量方式var foo &#x3D; function () {}定义的函数实际上也是一个全局变量，因此，顶层函数的定义也被视为一个全局变量，并绑定到window对象：  </p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="meta">&#x27;use strict&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">foo</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="title function_">alert</span>(<span class="string">&#x27;foo&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_">foo</span>(); <span class="comment">// 直接调用foo()</span></span><br><span class="line"><span class="variable language_">window</span>.<span class="title function_">foo</span>(); <span class="comment">// 通过window.foo()调用</span></span><br></pre></td></tr></table></figure><p>JavaScript实际上只有一个全局作用域。任何变量（函数也视为变量），如果没有在当前函数作用域中找到，就会继续往上查找，最后如果在全局作用域中也没有找到，则报ReferenceError错误。</p><h3 id="名字空间"><a href="#名字空间" class="headerlink" title="名字空间"></a>名字空间</h3><p>全局变量会绑定到window上，不同的JavaScript文件如果使用了相同的全局变量，或者定义了相同名字的顶层函数，都会造成命名冲突，并且很难被发现。  </p><p>减少冲突的一个方法是把自己的所有变量和函数全部绑定到一个全局变量中。例如：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 唯一的全局变量MYAPP:</span></span><br><span class="line"><span class="keyword">var</span> <span class="variable constant_">MYAPP</span> = &#123;&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 其他变量:</span></span><br><span class="line"><span class="variable constant_">MYAPP</span>.<span class="property">name</span> = <span class="string">&#x27;myapp&#x27;</span>;</span><br><span class="line"><span class="variable constant_">MYAPP</span>.<span class="property">version</span> = <span class="number">1.0</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 其他函数:</span></span><br><span class="line"><span class="variable constant_">MYAPP</span>.<span class="property">foo</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;foo&#x27;</span>;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>把自己的代码全部放入唯一的名字空间MYAPP中，会大大减少全局变量冲突的可能。<br>许多著名的JavaScript库都是这么干的：jQuery，YUI，underscore等等。</p><h3 id="let-和-var的区别"><a href="#let-和-var的区别" class="headerlink" title="let 和 var的区别"></a>let 和 var的区别</h3><p>JavaScript的变量作用域实际上是函数内部，我们在for循环等语句块中是无法定义具有局部作用域的变量的</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="meta">&#x27;use strict&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">foo</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i=<span class="number">0</span>; i&lt;<span class="number">100</span>; i++) &#123;</span><br><span class="line">        <span class="comment">//</span></span><br><span class="line">    &#125;</span><br><span class="line">    i += <span class="number">100</span>; <span class="comment">// 仍然可以引用变量i</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>为了解决块级作用域，ES6引入了新的关键字let，用let替代var可以申明一个块级作用域的变量：  </p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="meta">&#x27;use strict&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">foo</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> sum = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i=<span class="number">0</span>; i&lt;<span class="number">100</span>; i++) &#123;</span><br><span class="line">        sum += i;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    i += <span class="number">1</span>;<span class="comment">// SyntaxError:</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="常量"><a href="#常量" class="headerlink" title="常量"></a>常量</h3><p>ES6标准引入了新的关键字const来定义常量，const与let都具有块级作用域：  </p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="meta">&#x27;use strict&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="variable constant_">PI</span> = <span class="number">3.14</span>;</span><br><span class="line"><span class="variable constant_">PI</span> = <span class="number">3</span>; <span class="comment">// 某些浏览器不报错，但是无效果！</span></span><br><span class="line"><span class="variable constant_">PI</span>; <span class="comment">// 3.14</span></span><br></pre></td></tr></table></figure><hr><h2 id="解构赋值"><a href="#解构赋值" class="headerlink" title="解构赋值"></a>解构赋值</h2><p>从ES6开始，JavaScript引入了解构赋值，可以同时对一组变量进行赋值。</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> [x, y, z] = [<span class="string">&#x27;hello&#x27;</span>, <span class="string">&#x27;JavaScript&#x27;</span>, <span class="string">&#x27;ES6&#x27;</span>];</span><br><span class="line"><span class="keyword">let</span> [x, [y, z]] = [<span class="string">&#x27;hello&#x27;</span>, [<span class="string">&#x27;JavaScript&#x27;</span>, <span class="string">&#x27;ES6&#x27;</span>]];</span><br><span class="line"><span class="keyword">let</span> [, , z] = [<span class="string">&#x27;hello&#x27;</span>, <span class="string">&#x27;JavaScript&#x27;</span>, <span class="string">&#x27;ES6&#x27;</span>]; <span class="comment">// 忽略前两个元素，只对z赋值第三个元素</span></span><br><span class="line">z; <span class="comment">// &#x27;ES6&#x27;</span></span><br></pre></td></tr></table></figure><p>如果数组本身还有嵌套，也可以通过下面的形式进行解构赋值，注意嵌套层次和位置要保持一致  </p><p>可行的申明方法：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> i, rest = [];</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span></span><br><span class="line">        x = <span class="number">1</span>, <span class="comment">// x初始化为1</span></span><br><span class="line">        y = x + <span class="number">1</span>, <span class="comment">// y初始化为2</span></span><br><span class="line">        z, i; <span class="comment">// z和i为undefined</span></span><br></pre></td></tr></table></figure><p>对于object  </p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="meta">&#x27;use strict&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> person = &#123;</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&#x27;小明&#x27;</span>,</span><br><span class="line">    <span class="attr">age</span>: <span class="number">20</span>,</span><br><span class="line">    <span class="attr">gender</span>: <span class="string">&#x27;male&#x27;</span>,</span><br><span class="line">    <span class="attr">passport</span>: <span class="string">&#x27;G-12345678&#x27;</span>,</span><br><span class="line">    <span class="attr">school</span>: <span class="string">&#x27;No.4 middle school&#x27;</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">var</span> &#123;name, age, passport&#125; = person;</span><br><span class="line"></span><br><span class="line"><span class="title function_">alert</span>(<span class="string">&#x27;name = &#x27;</span> + name + <span class="string">&#x27;, age = &#x27;</span> + age + <span class="string">&#x27;, passport = &#x27;</span> + passport);</span><br><span class="line"><span class="comment">//name = 小明, age = 20, passport = G-12345678</span></span><br></pre></td></tr></table></figure><p>嵌套object </p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> person = &#123;</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&#x27;小明&#x27;</span>,</span><br><span class="line">    <span class="attr">age</span>: <span class="number">20</span>,</span><br><span class="line">    <span class="attr">gender</span>: <span class="string">&#x27;male&#x27;</span>,</span><br><span class="line">    <span class="attr">passport</span>: <span class="string">&#x27;G-12345678&#x27;</span>,</span><br><span class="line">    <span class="attr">school</span>: <span class="string">&#x27;No.4 middle school&#x27;</span>,</span><br><span class="line">    <span class="attr">address</span>: &#123;</span><br><span class="line">        <span class="attr">city</span>: <span class="string">&#x27;Beijing&#x27;</span>,</span><br><span class="line">        <span class="attr">street</span>: <span class="string">&#x27;No.1 Road&#x27;</span>,</span><br><span class="line">        <span class="attr">zipcode</span>: <span class="string">&#x27;100001&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">var</span> &#123;name, <span class="attr">address</span>: &#123;city, zip&#125;&#125; = person;</span><br><span class="line">name; <span class="comment">// &#x27;小明&#x27;</span></span><br><span class="line">city; <span class="comment">// &#x27;Beijing&#x27;</span></span><br><span class="line">zip; <span class="comment">// undefined, 因为属性名是zipcode而不是zip</span></span><br><span class="line"><span class="comment">// 注意: address不是变量，而是为了让city和zip获得嵌套的address对象的属性:</span></span><br><span class="line">address; <span class="comment">// Uncaught ReferenceError: address is not defined</span></span><br><span class="line"><span class="string">``</span><span class="string">`  </span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">使用解构赋值对对象属性进行赋值时，如果对应的属性不存在，变量将被赋值为undefined，这和引用一个不存在的属性获得undefined是一致的。如果要使用的变量名和属性名不一致，可以用下面的语法获取：  </span></span><br><span class="line"><span class="string">`</span><span class="string">``</span><span class="title class_">JavaScript</span></span><br><span class="line"><span class="keyword">var</span> person = &#123;</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&#x27;小明&#x27;</span>,</span><br><span class="line">    <span class="attr">age</span>: <span class="number">20</span>,</span><br><span class="line">    <span class="attr">gender</span>: <span class="string">&#x27;male&#x27;</span>,</span><br><span class="line">    <span class="attr">passport</span>: <span class="string">&#x27;G-12345678&#x27;</span>,</span><br><span class="line">    <span class="attr">school</span>: <span class="string">&#x27;No.4 middle school&#x27;</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 把passport属性赋值给变量id:</span></span><br><span class="line"><span class="keyword">let</span> &#123;name, <span class="attr">passport</span>:id&#125; = person;</span><br><span class="line">name; <span class="comment">// &#x27;小明&#x27;</span></span><br><span class="line">id; <span class="comment">// &#x27;G-12345678&#x27;</span></span><br><span class="line"><span class="comment">// 注意: passport不是变量，而是为了让变量id获得passport属性:</span></span><br><span class="line">passport; <span class="comment">// Uncaught ReferenceError: passport is not defined</span></span><br></pre></td></tr></table></figure><p>交换两个变量x和y的值，可以这么写，不再需要临时变量：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> x=<span class="number">1</span>, y=<span class="number">2</span>;</span><br><span class="line">[x, y] = [y, x]</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Learn note </category>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript学习笔记-Function</title>
      <link href="/blog/learnote/js-function/"/>
      <url>/blog/learnote/js-function/</url>
      
        <content type="html"><![CDATA[<h2 id="定义函数"><a href="#定义函数" class="headerlink" title="定义函数"></a>定义函数</h2><h3 id="方法1"><a href="#方法1" class="headerlink" title="方法1"></a><em>方法1</em></h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">abs</span>(<span class="params">x</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (x &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> x;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> -x;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><code>function</code>指出这是一个函数定义；</li><li><code>abs</code>是函数的名称；  </li><li><code>(x)</code>括号内列出函数的参数，多个参数以,分隔；</li><li><code>&#123; ... &#125;</code>之间的代码是函数体，可以包含若干语句，甚至可以没有任何语句。</li></ul><p>函数体内部的语句在执行时，一旦执行到return时，函数就执行完毕，并将结果返回。<br>因此，函数内部通过条件判断和循环可以实现非常复杂的逻辑。</p><ul><li>如果没有return语句，函数执行完毕后也会返回结果，只是结果为<code>undefined</code>。</li></ul><h3 id="方法2"><a href="#方法2" class="headerlink" title="方法2"></a><em>方法2</em></h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> abs = <span class="keyword">function</span> (<span class="params">x</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (x &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> x;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> -x;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>和第一种形式等价，末尾要加 <code>;</code>。<br>在这种方式下，<code>function (x) &#123; ... &#125;</code>是一个匿名函数，它没有函数名。<br>但是，这个匿名函数赋值给了变量<code>abs</code>，所以，通过变量abs就可以调用该函数。</p><hr><h2 id="调用函数"><a href="#调用函数" class="headerlink" title="调用函数"></a>调用函数</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="title function_">abs</span>(<span class="number">9</span>)<span class="comment">//9</span></span><br><span class="line"><span class="title function_">abs</span>(-<span class="number">10</span>)<span class="comment">//10</span></span><br></pre></td></tr></table></figure><p>传入多余的参数也不会报错</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="title function_">abs</span>(<span class="number">9</span>,<span class="string">&#x27;hjh&#x27;</span>)<span class="comment">//9</span></span><br><span class="line"><span class="title function_">abs</span>()<span class="comment">//NaN</span></span><br></pre></td></tr></table></figure><p>对于缺少参数，此时<code>abs(x)</code>函数的参数x将收到<code>undefined</code>，计算结果为<code>NaN</code>。</p><h3 id="arguments"><a href="#arguments" class="headerlink" title="arguments"></a>arguments</h3><p>在函数内部获取参数列表，即使存在多余参数。</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">foo</span>(<span class="params">x</span>) &#123;</span><br><span class="line">    <span class="title function_">alert</span>(<span class="string">&#x27;x = &#x27;</span> + x); <span class="comment">// 10</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i=<span class="number">0</span>; i&lt;<span class="variable language_">arguments</span>.<span class="property">length</span>; i++) &#123;</span><br><span class="line">        <span class="title function_">alert</span>(<span class="string">&#x27;arg &#x27;</span> + i + <span class="string">&#x27; = &#x27;</span> + <span class="variable language_">arguments</span>[i]); <span class="comment">// 10, 20, 30</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">foo</span>(<span class="number">10</span>, <span class="number">20</span>, <span class="number">30</span>);</span><br></pre></td></tr></table></figure><p>结果是：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">x = 10</span><br><span class="line">arg 0 = 10</span><br><span class="line">arg 1 = 20</span><br><span class="line">arg 2 = 30</span><br></pre></td></tr></table></figure><p>利用arguments，你可以获得调用者传入的所有参数。<br>也就是说，即使函数不定义任何参数，还是可以拿到参数的值：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">abs</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable language_">arguments</span>.<span class="property">length</span> === <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">var</span> x = <span class="variable language_">arguments</span>[<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">return</span> x &gt;= <span class="number">0</span> ? x : -x;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_">abs</span>(); <span class="comment">// 0</span></span><br><span class="line"><span class="title function_">abs</span>(<span class="number">10</span>); <span class="comment">// 10</span></span><br><span class="line"><span class="title function_">abs</span>(-<span class="number">9</span>); <span class="comment">// 9</span></span><br></pre></td></tr></table></figure><h3 id="rest"><a href="#rest" class="headerlink" title="rest"></a>rest</h3><p>ES6标准引入了rest参数，获取除了已定义参数之外的参数</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">foo</span>(<span class="params">a, b, ...rest</span>) &#123;</span><br><span class="line">    <span class="title function_">alert</span>(<span class="string">&#x27;a = &#x27;</span> + a);</span><br><span class="line">    <span class="title function_">alert</span>(<span class="string">&#x27;b = &#x27;</span> + b);</span><br><span class="line">    <span class="title function_">alert</span>(rest);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_">foo</span>(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>);</span><br><span class="line"><span class="comment">// 结果:</span></span><br><span class="line"><span class="comment">// a = 1</span></span><br><span class="line"><span class="comment">// b = 2</span></span><br><span class="line"><span class="comment">// Array [ 3, 4, 5 ]</span></span><br><span class="line"></span><br><span class="line"><span class="title function_">foo</span>(<span class="number">1</span>);</span><br><span class="line"><span class="comment">// 结果:</span></span><br><span class="line"><span class="comment">// a = 1</span></span><br><span class="line"><span class="comment">// b = undefined</span></span><br><span class="line"><span class="comment">// Array []</span></span><br></pre></td></tr></table></figure><p>rest参数只能写在最后，前面用…标识，从运行结果可知，传入的参数先绑定a、b，多余的参数以数组形式交给变量rest，<br>  所以，不再需要arguments我们就获取了全部参数。<br>如果传入的参数连正常定义的参数都没填满，也不要紧，rest参数会接收一个空数组（注意不是<code>undefined</code>）。  </p><h3 id="tips"><a href="#tips" class="headerlink" title="tips"></a>tips</h3><p>一个<code>return</code>语句的坑需要注意 ,JavaScript在编译时会自动加上<code>;</code>。 </p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">foo</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="comment">// 自动添加了分号，相当于return undefined;</span></span><br><span class="line">        &#123; <span class="attr">name</span>: <span class="string">&#x27;foo&#x27;</span> &#125;; <span class="comment">// 这行语句已经没法执行到了</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>正确写法：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">foo</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123; <span class="comment">// 这里不会自动加分号，因为&#123;表示语句尚未结束</span></span><br><span class="line">        <span class="attr">name</span>: <span class="string">&#x27;foo&#x27;</span></span><br><span class="line">    &#125;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h3 id="exercise"><a href="#exercise" class="headerlink" title="exercise"></a>exercise</h3><p>1.求任意长度数组的和  </p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">sum</span>(<span class="params">...rest</span>) &#123;</span><br><span class="line"><span class="keyword">var</span> sum=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">var</span> i <span class="keyword">in</span> rest)&#123;</span><br><span class="line">sum=sum+rest[i];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> sum;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2.定义一个计算圆面积的函数area_of_circle()，它有两个参数：</p><ul><li>r: 表示圆的半径；</li><li>pi: 表示π的值，如果不传，则默认3.14</li></ul><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">area_of_circle</span>(<span class="params">r, pi</span>) &#123;</span><br><span class="line"> <span class="keyword">if</span> (<span class="variable language_">arguments</span>.<span class="property">length</span>===<span class="number">2</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> pi*r*r;</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(<span class="variable language_">arguments</span>.<span class="property">length</span>===<span class="number">1</span>)&#123;</span><br><span class="line">    pi=<span class="number">3.14</span>;</span><br><span class="line">    <span class="keyword">return</span> pi*r*r;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">   <span class="keyword">return</span> <span class="literal">undefined</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Learn note </category>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript学习笔记-Map&amp;Reduce</title>
      <link href="/blog/learnote/js-map-reduce/"/>
      <url>/blog/learnote/js-map-reduce/</url>
      
        <content type="html"><![CDATA[<h2 id="高阶函数"><a href="#高阶函数" class="headerlink" title="高阶函数"></a>高阶函数</h2><p>一个函数就可以接收另一个函数作为参数，这种函数就称之为高阶函数。  </p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">add</span>(<span class="params">x, y, f</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">f</span>(x) + <span class="title function_">f</span>(y);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> x = <span class="title function_">add</span>(-<span class="number">5</span>, <span class="number">6</span>, <span class="title class_">Math</span>.<span class="property">abs</span>); <span class="comment">// 11</span></span><br><span class="line"><span class="title function_">alert</span>(x);</span><br><span class="line"></span><br><span class="line"><span class="comment">//等价于</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> x = <span class="title class_">Math</span>.<span class="title function_">abs</span>(-<span class="number">5</span>)+ <span class="title class_">Math</span>.<span class="title function_">abs</span>(<span class="number">6</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="map"><a href="#map" class="headerlink" title="map"></a>map</h2><p>由于map()方法定义在JavaScript的Array中，我们调用Array的map()方法，传入我们自己的函数，就得到了一个新的Array作为结果：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> arr=[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">f</span>(<span class="params">x</span>)&#123;</span><br><span class="line">         <span class="keyword">return</span> x*x&#125;;</span><br><span class="line"><span class="keyword">var</span> xx=arr.<span class="title function_">map</span>(f); <span class="comment">//[1, 4, 9, 16, 25, 36]</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//等价于</span></span><br><span class="line"><span class="keyword">var</span> f = <span class="keyword">function</span> (<span class="params">x</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> x * x;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> arr = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>];</span><br><span class="line"><span class="keyword">var</span> result = [];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i=<span class="number">0</span>; i&lt;arr.<span class="property">length</span>; i++) &#123;</span><br><span class="line">    result.<span class="title function_">push</span>(<span class="title function_">f</span>(arr[i]));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>for python</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">f</span>(<span class="params">x</span>):</span><br><span class="line"><span class="keyword">return</span> x*x</span><br><span class="line"></span><br><span class="line">arr=[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>]</span><br><span class="line">xx=<span class="built_in">list</span>(<span class="built_in">map</span>(f,arr)) //[<span class="number">1</span>, <span class="number">4</span>, <span class="number">9</span>, <span class="number">16</span>, <span class="number">25</span>, <span class="number">36</span>]</span><br><span class="line"></span><br><span class="line">//<span class="keyword">or</span></span><br><span class="line"></span><br><span class="line">xx=<span class="built_in">list</span>(<span class="built_in">map</span>(<span class="keyword">lambda</span> x:x*x,arr)) //[<span class="number">1</span>, <span class="number">4</span>, <span class="number">9</span>, <span class="number">16</span>, <span class="number">25</span>, <span class="number">36</span>]</span><br></pre></td></tr></table></figure><p>f()可以是任意函数，比如，把Array的所有数字转为字符串：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>];</span><br><span class="line">arr.<span class="title function_">map</span>(<span class="title class_">String</span>); <span class="comment">// [&#x27;1&#x27;, &#x27;2&#x27;, &#x27;3&#x27;, &#x27;4&#x27;, &#x27;5&#x27;, &#x27;6&#x27;, &#x27;7&#x27;, &#x27;8&#x27;, &#x27;9&#x27;]</span></span><br></pre></td></tr></table></figure><h2 id="reduce"><a href="#reduce" class="headerlink" title="reduce"></a>reduce</h2><p>Array的reduce()把一个函数作用在这个Array的[x1, x2, x3…]上，这个函数必须接收两个参数，reduce()把结果继续和序列的下一个元素做累积计算，其效果就是：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">[x1, x2, x3, x4].<span class="title function_">reduce</span>(f) = <span class="title function_">f</span>(<span class="title function_">f</span>(<span class="title function_">f</span>(x1, x2), x3), x4)</span><br></pre></td></tr></table></figure><p>数列求和：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">f</span>(<span class="params">x,y</span>)&#123;</span><br><span class="line"><span class="keyword">return</span> x+y&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> arr=[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>]; </span><br><span class="line">arr.<span class="title function_">reduce</span>(f)<span class="comment">//10</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//f(f(f(1,2),3),4)</span></span><br></pre></td></tr></table></figure><p>for python</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">f</span>(<span class="params">x,y</span>):</span><br><span class="line"><span class="keyword">return</span> x+y</span><br><span class="line"></span><br><span class="line">arr=[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>]</span><br><span class="line">reduce(f,arr)//<span class="number">10</span></span><br><span class="line"></span><br><span class="line">//<span class="keyword">or</span></span><br><span class="line">reduce(<span class="keyword">lambda</span> x,y:x+y,arr)//<span class="number">10</span></span><br></pre></td></tr></table></figure><p>利用reduce()求积：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="meta">&#x27;use strict&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">product</span>(<span class="params">arr</span>) &#123;</span><br><span class="line"><span class="keyword">var</span> f=<span class="keyword">function</span>(<span class="params">x,y</span>)&#123;<span class="keyword">return</span> x*y&#125;;</span><br><span class="line"><span class="keyword">return</span> arr.<span class="title function_">reduce</span>(f);</span><br><span class="line"></span><br><span class="line"><span class="comment">//return arr.reduce(function(x,y)&#123;return x*y&#125;);</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>利用map和reduce操作实现一个string2int()函数：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="meta">&#x27;use strict&#x27;</span>;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">string2int</span>(<span class="params">s</span>) &#123;</span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">str2array</span>(<span class="params">x</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> x - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">array2int</span>(<span class="params">x, y</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> x * <span class="number">10</span> + y;</span><br><span class="line">    &#125;</span><br><span class="line">    arr = []</span><br><span class="line">    <span class="keyword">for</span> (k <span class="keyword">of</span> s) &#123;</span><br><span class="line">    arr.<span class="title function_">push</span>(k);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> arr.<span class="title function_">map</span>(str2array).<span class="title function_">reduce</span>(array2int);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Learn note </category>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript学习笔记-对象的方法</title>
      <link href="/blog/learnote/js-method-object/"/>
      <url>/blog/learnote/js-method-object/</url>
      
        <content type="html"><![CDATA[<h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>给xiaoming绑定一个age()方法:  </p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&gt;<span class="keyword">var</span> xiaoming=&#123;</span><br><span class="line">     <span class="attr">name</span>:<span class="string">&#x27;xiaoming&#x27;</span>,</span><br><span class="line">     <span class="attr">birth</span>:<span class="number">1990</span>,</span><br><span class="line">     <span class="attr">age</span>: <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">          <span class="keyword">var</span> y= <span class="keyword">new</span> <span class="title class_">Date</span>().<span class="title function_">getFullYear</span>() <span class="comment">//</span></span><br><span class="line">          <span class="keyword">return</span> y-<span class="variable language_">this</span>.<span class="property">birth</span></span><br><span class="line">          &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&gt;xiaoming.<span class="property">age</span></span><br><span class="line"><span class="comment">//function()&#123;</span></span><br><span class="line"><span class="comment">//var y= new Date().getFullYear()</span></span><br><span class="line"><span class="comment">//return y-this.birth</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"></span><br><span class="line">&gt;xiaoming.<span class="title function_">age</span>() <span class="comment">//28</span></span><br></pre></td></tr></table></figure><p>方法内部，this是一个特殊变量，它始终指向当前对象，也就是xiaoming这个变量。<br>所以，this.birth可以拿到xiaoming的birth属性。<br><strong>类似于python class 方法中的 self 参数</strong>  </p><p>看一些例子：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">getAge</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> y = <span class="keyword">new</span> <span class="title class_">Date</span>().<span class="title function_">getFullYear</span>();</span><br><span class="line">    <span class="keyword">return</span> y - <span class="variable language_">this</span>.<span class="property">birth</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> xiaoming = &#123;</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&#x27;小明&#x27;</span>,</span><br><span class="line">    <span class="attr">birth</span>: <span class="number">1990</span>,</span><br><span class="line">    <span class="attr">age</span>: getAge</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">xiaoming.<span class="title function_">age</span>(); <span class="comment">// 28, 正常结果</span></span><br><span class="line"><span class="title function_">getAge</span>(); <span class="comment">// NaN</span></span><br></pre></td></tr></table></figure><ul><li>如果以对象的方法形式调用，比如 <code>xiaoming.age()</code>，该函数的 <code>this</code> 指向被调用的对象，也就是 <code>xiaoming</code>，这是符合我们预期的。</li><li>单独调用函数 <code>getAge()</code> 返回 <code>NaN</code>，比如 <code>getAge()</code>，此时，该函数的 <code>this</code> 指向全局对象，也就是 <code>window</code>。</li></ul><p>要保证this指向正确，必须用obj.xxx()的形式调用！</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> fn = xiaoming.<span class="property">age</span>; <span class="comment">// 先拿到xiaoming的age函数</span></span><br><span class="line"><span class="title function_">fn</span>(); <span class="comment">// NaN</span></span><br></pre></td></tr></table></figure><p>方法重构一下:</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="meta">&#x27;use strict&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> xiaoming = &#123;</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&#x27;小明&#x27;</span>,</span><br><span class="line">    <span class="attr">birth</span>: <span class="number">1990</span>,</span><br><span class="line">    <span class="attr">age</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">function</span> <span class="title function_">getAgeFromBirth</span>(<span class="params"></span>) &#123;</span><br><span class="line">            <span class="keyword">var</span> y = <span class="keyword">new</span> <span class="title class_">Date</span>().<span class="title function_">getFullYear</span>();</span><br><span class="line">            <span class="keyword">return</span> y - <span class="variable language_">this</span>.<span class="property">birth</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="title function_">getAgeFromBirth</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">xiaoming.<span class="title function_">age</span>(); <span class="comment">// Uncaught TypeError: Cannot read property &#x27;birth&#x27; of undefined</span></span><br></pre></td></tr></table></figure><p>结果又报错了！原因是this指针只在age方法的函数内指向xiaoming，在函数内部定义的函数，this又指向undefined了！（在非strict模式下，它重新指向全局对象window！）</p><h2 id="修复的办法也不是没有，我们用一个that变量首先捕获this："><a href="#修复的办法也不是没有，我们用一个that变量首先捕获this：" class="headerlink" title="修复的办法也不是没有，我们用一个that变量首先捕获this："></a>修复的办法也不是没有，我们用一个that变量首先捕获this：<br><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="meta">&#x27;use strict&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> xiaoming = &#123;</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&#x27;小明&#x27;</span>,</span><br><span class="line">    <span class="attr">birth</span>: <span class="number">1990</span>,</span><br><span class="line">    <span class="attr">age</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> that = <span class="variable language_">this</span>; <span class="comment">// 在方法内部一开始就捕获this</span></span><br><span class="line">        <span class="keyword">function</span> <span class="title function_">getAgeFromBirth</span>(<span class="params"></span>) &#123;</span><br><span class="line">            <span class="keyword">var</span> y = <span class="keyword">new</span> <span class="title class_">Date</span>().<span class="title function_">getFullYear</span>();</span><br><span class="line">            <span class="keyword">return</span> y - that.<span class="property">birth</span>; <span class="comment">// 用that而不是this</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="title function_">getAgeFromBirth</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">xiaoming.<span class="title function_">age</span>(); <span class="comment">// 28</span></span><br></pre></td></tr></table></figure></h2><h3 id="apply-和-call"><a href="#apply-和-call" class="headerlink" title="apply 和 call"></a>apply 和 call</h3><p>要指定函数的this指向哪个对象，可以用函数本身的apply方法，它接收两个参数，第一个参数就是需要绑定的this变量，第二个参数是Array，表示函数本身的参数。</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">getAge</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> y = <span class="keyword">new</span> <span class="title class_">Date</span>().<span class="title function_">getFullYear</span>();</span><br><span class="line">    <span class="keyword">return</span> y - <span class="variable language_">this</span>.<span class="property">birth</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> xiaoming = &#123;</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&#x27;小明&#x27;</span>,</span><br><span class="line">    <span class="attr">birth</span>: <span class="number">1990</span>,</span><br><span class="line">    <span class="attr">age</span>: getAge</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">xiaoming.<span class="title function_">age</span>(); <span class="comment">// 25</span></span><br><span class="line">getAge.<span class="title function_">apply</span>(xiaoming, []); <span class="comment">// 25, this指向xiaoming, 参数为空</span></span><br></pre></td></tr></table></figure><ul><li>apply()把参数打包成Array再传入；</li><li>call()把参数按顺序传入。<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="title class_">Math</span>.<span class="property">max</span>.<span class="title function_">apply</span>(<span class="literal">null</span>, [<span class="number">3</span>, <span class="number">5</span>, <span class="number">4</span>]); <span class="comment">// 5</span></span><br><span class="line"><span class="title class_">Math</span>.<span class="property">max</span>.<span class="title function_">call</span>(<span class="literal">null</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">4</span>); <span class="comment">// 5</span></span><br></pre></td></tr></table></figure>对普通函数调用，我们通常把this绑定为null。</li></ul><hr>]]></content>
      
      
      <categories>
          
          <category> Learn note </category>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript学习笔记-Array</title>
      <link href="/blog/learnote/js-arr/"/>
      <url>/blog/learnote/js-arr/</url>
      
        <content type="html"><![CDATA[<h2 id="基本操作"><a href="#基本操作" class="headerlink" title="基本操作"></a>基本操作</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&gt;<span class="keyword">var</span> arr=[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="string">&#x27;hjh&#x27;</span>]</span><br><span class="line"><span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="string">&quot;hjh&quot;</span></span><br><span class="line">&gt;arr.<span class="property">length</span></span><br><span class="line"><span class="number">4</span></span><br><span class="line">&gt;arr.<span class="title function_">indexOf</span>(<span class="number">3</span>)</span><br><span class="line"><span class="number">2</span></span><br><span class="line">&gt;arr.<span class="title function_">indexOf</span>(<span class="string">&#x27;no&#x27;</span>)   <span class="comment">//不存在返回-1</span></span><br><span class="line">-<span class="number">1</span></span><br></pre></td></tr></table></figure><p>可以通过索引把对应的元素修改为新的值，因此，对Array的索引进行赋值会直接修改这个Array：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;C&#x27;</span>];</span><br><span class="line">arr[<span class="number">1</span>] = <span class="number">99</span>;</span><br><span class="line">arr; <span class="comment">// arr现在变为[&#x27;A&#x27;, 99, &#x27;C&#x27;]</span></span><br><span class="line">arr[<span class="number">5</span>] = <span class="string">&#x27;x&#x27;</span>;</span><br><span class="line">arr; <span class="comment">// arr变为[&#x27;A&#x27;, 99, &#x27;C&#x27;, undefined, undefined, &#x27;x&#x27;]</span></span><br></pre></td></tr></table></figure><p>大多数其他编程语言不允许直接改变数组的大小，越界访问索引会报错。然而，JavaScript的Array却不会有任何错误。在编写代码时，不建议直接修改Array的大小，访问索引时要确保索引不会越界。  </p><p>直接给Array的length赋一个新的值会导致Array大小的变化</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>];</span><br><span class="line">arr.<span class="property">length</span>; <span class="comment">// 3</span></span><br><span class="line">arr.<span class="property">length</span> = <span class="number">6</span>;</span><br><span class="line">arr; <span class="comment">// arr变为[1, 2, 3, undefined, undefined, undefined]</span></span><br><span class="line">arr.<span class="property">length</span> = <span class="number">2</span>;</span><br><span class="line">arr; <span class="comment">// arr变为[1, 2]</span></span><br></pre></td></tr></table></figure><h2 id="slice-方法切片"><a href="#slice-方法切片" class="headerlink" title="slice()方法切片"></a>slice()方法切片</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;C&#x27;</span>, <span class="string">&#x27;D&#x27;</span>, <span class="string">&#x27;E&#x27;</span>, <span class="string">&#x27;F&#x27;</span>, <span class="string">&#x27;G&#x27;</span>];</span><br><span class="line">arr.<span class="title function_">slice</span>(<span class="number">0</span>, <span class="number">3</span>); <span class="comment">// 从索引0开始，到索引3结束，但不包括索引3: [&#x27;A&#x27;, &#x27;B&#x27;, &#x27;C&#x27;]</span></span><br><span class="line">arr.<span class="title function_">slice</span>(<span class="number">3</span>); <span class="comment">// 从索引3开始到结束: [&#x27;D&#x27;, &#x27;E&#x27;, &#x27;F&#x27;, &#x27;G&#x27;]</span></span><br><span class="line">arr.<span class="title function_">slice</span>(); <span class="comment">// [&#x27;A&#x27;, &#x27;B&#x27;, &#x27;C&#x27;, &#x27;D&#x27;, &#x27;E&#x27;, &#x27;F&#x27;, &#x27;G&#x27;]</span></span><br></pre></td></tr></table></figure><h2 id="push-方法添加"><a href="#push-方法添加" class="headerlink" title="push()方法添加"></a>push()方法添加</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&gt;arr.<span class="title function_">push</span>(<span class="string">&quot;push&quot;</span>)</span><br><span class="line"><span class="number">5</span></span><br><span class="line">&gt;arr</span><br><span class="line">[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="string">&quot;hjh&quot;</span>, <span class="string">&quot;push&quot;</span>]</span><br><span class="line">&gt;arr.<span class="title function_">push</span>(<span class="string">&quot;a&quot;</span>,<span class="string">&quot;push&quot;</span>)</span><br><span class="line"><span class="number">7</span></span><br><span class="line">&gt;arr</span><br><span class="line">[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="string">&quot;hjh&quot;</span>, <span class="string">&quot;push&quot;</span>,<span class="string">&quot;a&quot;</span>,<span class="string">&quot;push&quot;</span>]</span><br></pre></td></tr></table></figure><h2 id="pop"><a href="#pop" class="headerlink" title="pop()"></a>pop()</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&gt;arr.<span class="title function_">pop</span>()</span><br><span class="line"><span class="string">&quot;push&quot;</span></span><br><span class="line">&gt;arr.<span class="title function_">pop</span>()</span><br><span class="line"><span class="string">&quot;a&quot;</span></span><br><span class="line">&gt;arr</span><br><span class="line">[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="string">&quot;hjh&quot;</span>, <span class="string">&quot;push&quot;</span>]</span><br></pre></td></tr></table></figure><h2 id="unshift和shift"><a href="#unshift和shift" class="headerlink" title="unshift和shift"></a>unshift和shift</h2><p>如果要往Array的头部添加若干元素，使用unshift()方法，shift()方法则把Array的第一个元素删掉  </p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="number">1</span>, <span class="number">2</span>];</span><br><span class="line">arr.<span class="title function_">unshift</span>(<span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;B&#x27;</span>); <span class="comment">// 返回Array新的长度: 4</span></span><br><span class="line">arr; <span class="comment">// [&#x27;A&#x27;, &#x27;B&#x27;, 1, 2]</span></span><br><span class="line">arr.<span class="title function_">shift</span>(); <span class="comment">// &#x27;A&#x27;</span></span><br><span class="line">arr; <span class="comment">// [&#x27;B&#x27;, 1, 2]</span></span><br><span class="line">arr.<span class="title function_">shift</span>(); arr.<span class="title function_">shift</span>(); arr.<span class="title function_">shift</span>(); <span class="comment">// 连续shift 3次</span></span><br><span class="line">arr; <span class="comment">// []</span></span><br><span class="line">arr.<span class="title function_">shift</span>(); <span class="comment">// 空数组继续shift不会报错，而是返回undefined</span></span><br><span class="line">arr; <span class="comment">// []</span></span><br></pre></td></tr></table></figure><h2 id="sort"><a href="#sort" class="headerlink" title="sort"></a>sort</h2><p>可以对当前Array进行排序，它会直接<strong>修改</strong>当前Array的元素位置，直接调用时，按照默认顺序排序：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;C&#x27;</span>, <span class="string">&#x27;A&#x27;</span>];</span><br><span class="line">arr.<span class="title function_">sort</span>();</span><br><span class="line">arr; <span class="comment">// [&#x27;A&#x27;, &#x27;B&#x27;, &#x27;C&#x27;]</span></span><br></pre></td></tr></table></figure><h2 id="reverse"><a href="#reverse" class="headerlink" title="reverse"></a>reverse</h2><p>reverse()把整个Array的元素给掉个个，也就是反转：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="string">&#x27;one&#x27;</span>, <span class="string">&#x27;two&#x27;</span>, <span class="string">&#x27;three&#x27;</span>];</span><br><span class="line">arr.<span class="title function_">reverse</span>(); </span><br><span class="line">arr; <span class="comment">// [&#x27;three&#x27;, &#x27;two&#x27;, &#x27;one&#x27;]</span></span><br></pre></td></tr></table></figure><h2 id="splice"><a href="#splice" class="headerlink" title="splice"></a>splice</h2><p>splice()方法是修改Array的“万能方法”，它可以从指定的索引开始删除若干元素，然后再从该位置添加若干元素：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="string">&#x27;Microsoft&#x27;</span>, <span class="string">&#x27;Apple&#x27;</span>, <span class="string">&#x27;Yahoo&#x27;</span>, <span class="string">&#x27;AOL&#x27;</span>, <span class="string">&#x27;Excite&#x27;</span>, <span class="string">&#x27;Oracle&#x27;</span>];</span><br><span class="line"><span class="comment">// 从索引2开始删除3个元素,然后再添加两个元素:</span></span><br><span class="line">arr.<span class="title function_">splice</span>(<span class="number">2</span>, <span class="number">3</span>, <span class="string">&#x27;Google&#x27;</span>, <span class="string">&#x27;Facebook&#x27;</span>); <span class="comment">// 返回删除的元素 [&#x27;Yahoo&#x27;, &#x27;AOL&#x27;, &#x27;Excite&#x27;]</span></span><br><span class="line">arr; <span class="comment">// [&#x27;Microsoft&#x27;, &#x27;Apple&#x27;, &#x27;Google&#x27;, &#x27;Facebook&#x27;, &#x27;Oracle&#x27;]</span></span><br><span class="line"><span class="comment">// 只删除,不添加:</span></span><br><span class="line">arr.<span class="title function_">splice</span>(<span class="number">2</span>, <span class="number">2</span>); <span class="comment">// [&#x27;Google&#x27;, &#x27;Facebook&#x27;]</span></span><br><span class="line">arr; <span class="comment">// [&#x27;Microsoft&#x27;, &#x27;Apple&#x27;, &#x27;Oracle&#x27;]</span></span><br><span class="line"><span class="comment">// 只添加,不删除:</span></span><br><span class="line">arr.<span class="title function_">splice</span>(<span class="number">2</span>, <span class="number">0</span>, <span class="string">&#x27;Google&#x27;</span>, <span class="string">&#x27;Facebook&#x27;</span>); <span class="comment">// 返回[],因为没有删除任何元素</span></span><br><span class="line">arr; <span class="comment">// [&#x27;Microsoft&#x27;, &#x27;Apple&#x27;, &#x27;Google&#x27;, &#x27;Facebook&#x27;, &#x27;Oracle&#x27;]</span></span><br></pre></td></tr></table></figure><h2 id="join"><a href="#join" class="headerlink" title="join"></a>join</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;C&#x27;</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>];</span><br><span class="line">arr.<span class="title function_">join</span>(<span class="string">&#x27;-&#x27;</span>); <span class="comment">// &#x27;A-B-C-1-2-3&#x27;</span></span><br><span class="line">arr<span class="comment">//[&#x27;A&#x27;, &#x27;B&#x27;, &#x27;C&#x27;, 1, 2, 3]</span></span><br><span class="line">arr.<span class="title function_">join</span>(<span class="string">&#x27;&#x27;</span>); <span class="comment">// &#x27;ABC123&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="多维数组"><a href="#多维数组" class="headerlink" title="多维数组"></a>多维数组</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&gt;<span class="keyword">var</span> arr = [[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>], [<span class="number">400</span>, <span class="number">500</span>, <span class="number">600</span>], <span class="string">&#x27;-&#x27;</span>];<span class="comment">//[Array[3], Array[3], &quot;-&quot;]</span></span><br><span class="line">&gt;<span class="keyword">var</span> x = arr[<span class="number">1</span>][<span class="number">1</span>];</span><br><span class="line"><span class="number">500</span></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&gt;var arr = [&#x27;小明&#x27;, &#x27;小红&#x27;, &#x27;大军&#x27;, &#x27;阿黄&#x27;];</span><br><span class="line">&gt;`欢迎 $&#123;arr.slice(0,arr.length-1)&#125;和$&#123;arr[arr.length-1]&#125;同学!`</span><br><span class="line">欢迎 小明,小红,大军和阿黄同学!</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Learn note </category>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript学习笔记-For&amp; While</title>
      <link href="/blog/learnote/js-doloop/"/>
      <url>/blog/learnote/js-doloop/</url>
      
        <content type="html"><![CDATA[<h2 id="for"><a href="#for" class="headerlink" title="for"></a>for</h2><p>for循环，通过初始条件、结束条件和递增条件来循环执行语句块</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> x = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">var</span> i;</span><br><span class="line"><span class="keyword">for</span> (i=<span class="number">1</span>; i&lt;=<span class="number">10000</span>; i++) &#123;</span><br><span class="line">    x = x + i;</span><br><span class="line">&#125;</span><br><span class="line">x; <span class="comment">// 50005000</span></span><br></pre></td></tr></table></figure><p>遍历数组:</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="string">&#x27;Apple&#x27;</span>, <span class="string">&#x27;Google&#x27;</span>, <span class="string">&#x27;Microsoft&#x27;</span>];</span><br><span class="line"><span class="keyword">var</span> i, x;</span><br><span class="line"><span class="keyword">for</span> (i=<span class="number">0</span>; i&lt;arr.<span class="property">length</span>; i++) &#123;</span><br><span class="line">    x = arr[i];</span><br><span class="line">    <span class="title function_">alert</span>(x);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="for-…-in"><a href="#for-…-in" class="headerlink" title="for … in"></a>for … in</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="string">&#x27;Apple&#x27;</span>, <span class="string">&#x27;Google&#x27;</span>, <span class="string">&#x27;Microsoft&#x27;</span>];</span><br><span class="line"><span class="keyword">var</span> i, x;</span><br><span class="line"><span class="keyword">for</span> (i <span class="keyword">in</span> arr) &#123;</span><br><span class="line">    x = arr[i]; <span class="comment">//i遍历的是索引</span></span><br><span class="line">    <span class="title function_">alert</span>(x);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>or</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> o = &#123;</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&#x27;Jack&#x27;</span>,</span><br><span class="line">    <span class="attr">age</span>: <span class="number">20</span>,</span><br><span class="line">    <span class="attr">city</span>: <span class="string">&#x27;Beijing&#x27;</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> key <span class="keyword">in</span> o) &#123;</span><br><span class="line">   <span class="title function_">alert</span>(key); <span class="comment">// &#x27;name&#x27;, &#x27;age&#x27;, &#x27;city&#x27;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="break-控制语句"><a href="#break-控制语句" class="headerlink" title="break 控制语句"></a>break 控制语句</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> x = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (;;) &#123; <span class="comment">// 将无限循环下去</span></span><br><span class="line">    <span class="keyword">if</span> (x &gt; <span class="number">100</span>) &#123;</span><br><span class="line">        <span class="keyword">break</span>; <span class="comment">// 通过if判断来退出循环</span></span><br><span class="line">    &#125;</span><br><span class="line">    x ++;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="while"><a href="#while" class="headerlink" title="while"></a>while</h2><p>while循环只有一个判断条件，条件满足，就不断循环，条件不满足时则退出循环。  </p><p>比如我们要计算100以内所有奇数之和，可以用while循环实现：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> x = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">var</span> n = <span class="number">99</span>;</span><br><span class="line"><span class="keyword">while</span> (n &gt; <span class="number">0</span>) &#123;</span><br><span class="line">    x = x + n;</span><br><span class="line">    n = n - <span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line">x; <span class="comment">// 2500</span></span><br></pre></td></tr></table></figure><h2 id="do-…-while"><a href="#do-…-while" class="headerlink" title="do … while"></a>do … while</h2><p>它和while循环的唯一区别在于，不是在每次循环开始的时候判断条件，而是在每次循环完成的时候判断条件</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">do &#123; ... &#125; while()</span><br></pre></td></tr></table></figure><p>用<code>do &#123; ... &#125; while()</code>循环要小心，循环体会至少执行1次，而<code>for</code>和<code>while</code>循环则可能一次都不执行。</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> n = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">do</span> &#123;</span><br><span class="line">    n = n + <span class="number">1</span>;</span><br><span class="line">&#125; <span class="keyword">while</span> (n &lt; <span class="number">100</span>);</span><br><span class="line">n; <span class="comment">// 100</span></span><br></pre></td></tr></table></figure><h3 id="exercise"><a href="#exercise" class="headerlink" title="exercise"></a>exercise</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="meta">&#x27;use strict&#x27;</span>;  <span class="comment">//先声明再使用</span></span><br><span class="line"><span class="keyword">var</span> arr = [<span class="string">&#x27;Bart&#x27;</span>, <span class="string">&#x27;Lisa&#x27;</span>, <span class="string">&#x27;Adam&#x27;</span>];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i <span class="keyword">in</span> arr)&#123;</span><br><span class="line"><span class="title function_">alert</span>(<span class="string">&#x27;hello&#x27;</span>+<span class="string">&#x27;arr[i]);</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">//or</span></span><br><span class="line"><span class="string">for (var i=arr.length-1;i&gt;=0;i--)&#123;</span></span><br><span class="line"><span class="string">alert(&#x27;</span>hello <span class="string">&#x27;+arr[i]);</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">//or</span></span><br><span class="line"><span class="string">for (var i=0;i&lt;arr.length;i++)&#123;</span></span><br><span class="line"><span class="string">alert(&#x27;</span>hello <span class="string">&#x27;+arr[i]);</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">// or</span></span><br><span class="line"><span class="string">var i=0;</span></span><br><span class="line"><span class="string">while(i&lt;=arr.length)&#123;</span></span><br><span class="line"><span class="string">alert(&#x27;</span>hello <span class="string">&#x27;+arr[i]);</span></span><br><span class="line"><span class="string">i++;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">// or</span></span><br><span class="line"><span class="string">var i=arr.length-1;</span></span><br><span class="line"><span class="string">do&#123;</span></span><br><span class="line"><span class="string">alert(&#x27;</span>hello <span class="string">&#x27;+arr[i]);</span></span><br><span class="line"><span class="string">i--;</span></span><br><span class="line"><span class="string">&#125;while(i&gt;=0);</span></span><br><span class="line"><span class="string"></span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Learn note </category>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript学习笔记-If-else</title>
      <link href="/blog/learnote/js-if-else/"/>
      <url>/blog/learnote/js-if-else/</url>
      
        <content type="html"><![CDATA[<h2 id="if-clause"><a href="#if-clause" class="headerlink" title="if clause"></a>if clause</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> () &#123;</span><br><span class="line">... </span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">... </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>e.g. judge the teenager</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> age = <span class="number">20</span>;</span><br><span class="line"><span class="keyword">if</span> (age &gt;= <span class="number">18</span>) &#123; </span><br><span class="line">    <span class="title function_">alert</span>(<span class="string">&#x27;adult&#x27;</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123; </span><br><span class="line">    <span class="title function_">alert</span>(<span class="string">&#x27;teenager&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//or 单行情况下</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> age = <span class="number">20</span>;</span><br><span class="line"><span class="keyword">if</span> (age &gt;= <span class="number">18</span>)  </span><br><span class="line">    <span class="title function_">alert</span>(<span class="string">&#x27;adult&#x27;</span>);</span><br><span class="line"> <span class="keyword">else</span>  </span><br><span class="line">    <span class="title function_">alert</span>(<span class="string">&#x27;teenager&#x27;</span>);</span><br></pre></td></tr></table></figure><h2 id="多重判断"><a href="#多重判断" class="headerlink" title="多重判断"></a>多重判断</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> () &#123;</span><br><span class="line">... </span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> ()</span><br><span class="line">&#123;</span><br><span class="line">...</span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">... </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>e.g.</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> age = <span class="number">3</span>;</span><br><span class="line"><span class="keyword">if</span> (age &gt;= <span class="number">18</span>) &#123;</span><br><span class="line">    <span class="title function_">alert</span>(<span class="string">&#x27;adult&#x27;</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (age &gt;= <span class="number">10</span>) &#123;</span><br><span class="line">    <span class="title function_">alert</span>(<span class="string">&#x27;teenager&#x27;</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="title function_">alert</span>(<span class="string">&#x27;kid&#x27;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>以及嵌套用法</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> age = <span class="number">3</span>;</span><br><span class="line"><span class="keyword">if</span> (age &gt;= <span class="number">18</span>) &#123;</span><br><span class="line">    <span class="title function_">alert</span>(<span class="string">&#x27;adult&#x27;</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (age &gt;= <span class="number">10</span>) &#123;</span><br><span class="line">        <span class="title function_">alert</span>(<span class="string">&#x27;teenager&#x27;</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="title function_">alert</span>(<span class="string">&#x27;kid&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> s = <span class="string">&#x27;123&#x27;</span>;</span><br><span class="line"><span class="keyword">if</span> (s.<span class="property">length</span>) &#123; <span class="comment">// 条件计算结果为3</span></span><br><span class="line">    <span class="comment">//</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>JavaScript把<code>null、undefined、0、NaN和空字符串&#39;&#39;</code>视为false，其他值一概视为true，因此上述代码条件判断的结果是true。</p><h2 id="exercise"><a href="#exercise" class="headerlink" title="exercise"></a>exercise</h2><p>小明身高1.75，体重80.5kg。请根据BMI公式（体重除以身高的平方）帮小明计算他的BMI指数，并根据BMI指数：  </p><ul><li>低于18.5：过轻  </li><li>18.5-25：正常  </li><li>25-28：过重  </li><li>28-32：肥胖  </li><li>高于32：严重肥胖</li></ul><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> height = <span class="built_in">parseFloat</span>(<span class="title function_">prompt</span>(<span class="string">&#x27;请输入身高(m):&#x27;</span>));</span><br><span class="line"><span class="keyword">var</span> weight = <span class="built_in">parseFloat</span>(<span class="title function_">prompt</span>(<span class="string">&#x27;请输入体重(kg):&#x27;</span>));</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> bmi = weight / (height * height);</span><br><span class="line"></span><br><span class="line"><span class="title function_">alert</span>(<span class="string">&quot;bmi=&quot;</span>+bmi);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (bmi)&#123;</span><br><span class="line"><span class="keyword">if</span>(bmi &lt; <span class="number">18.5</span>)&#123;</span><br><span class="line">    <span class="title function_">alert</span>(<span class="string">&quot;太轻&quot;</span>);</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(bmi &lt;= <span class="number">25</span>)&#123;</span><br><span class="line">    <span class="title function_">alert</span>(<span class="string">&quot;正常&quot;</span>);</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(bmi &lt;= <span class="number">28</span>)&#123;</span><br><span class="line">    <span class="title function_">alert</span>(<span class="string">&quot;过重&quot;</span>);</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(bmi &lt;= <span class="number">32</span>)&#123;</span><br><span class="line">    <span class="title function_">alert</span>(<span class="string">&quot;肥胖&quot;</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_">alert</span>(<span class="string">&quot;严重肥胖&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;<span class="keyword">else</span></span><br><span class="line"><span class="title function_">alert</span>(<span class="string">&quot;invaild input&quot;</span>)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Learn note </category>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript学习笔记-Iterable</title>
      <link href="/blog/learnote/js-iterable/"/>
      <url>/blog/learnote/js-iterable/</url>
      
        <content type="html"><![CDATA[<h2 id="iterable类型"><a href="#iterable类型" class="headerlink" title="iterable类型"></a>iterable类型</h2><p>遍历Array可以采用下标循环，遍历Map和Set就无法使用下标。<br>ES6标准引入了新的<code>iterable</code>类型，Array、Map和Set都属于iterable类型。<br><code>iterable</code>类型可以用<code>for ... of</code>循环来遍历。</p><hr><h3 id="for…of…"><a href="#for…of…" class="headerlink" title="for…of…"></a>for…of…</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> a = [<span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;C&#x27;</span>];</span><br><span class="line"><span class="keyword">var</span> s = <span class="keyword">new</span> <span class="title class_">Set</span>([<span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;C&#x27;</span>]);</span><br><span class="line"><span class="keyword">var</span> m = <span class="keyword">new</span> <span class="title class_">Map</span>([[<span class="number">1</span>, <span class="string">&#x27;x&#x27;</span>], [<span class="number">2</span>, <span class="string">&#x27;y&#x27;</span>], [<span class="number">3</span>, <span class="string">&#x27;z&#x27;</span>]]);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> x <span class="keyword">of</span> a) &#123; <span class="comment">// 遍历Array</span></span><br><span class="line">    <span class="title function_">alert</span>(x);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> x <span class="keyword">of</span> s) &#123; <span class="comment">// 遍历Set</span></span><br><span class="line">    <span class="title function_">alert</span>(x);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> x <span class="keyword">of</span> m) &#123; <span class="comment">// 遍历Map</span></span><br><span class="line">    <span class="title function_">alert</span>(x[<span class="number">0</span>] + <span class="string">&#x27;=&#x27;</span> + x[<span class="number">1</span>]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h3 id="forEach-方法"><a href="#forEach-方法" class="headerlink" title="forEach 方法"></a>forEach 方法</h3><p>它接收一个函数，每次迭代就自动回调该函数</p><p><strong>for Array</strong></p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> a = [<span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;C&#x27;</span>];</span><br><span class="line">a.<span class="title function_">forEach</span>(<span class="keyword">function</span> (<span class="params">element, index, array</span>) &#123;</span><br><span class="line">    <span class="comment">// element: 指向当前元素的值</span></span><br><span class="line">    <span class="comment">// index: 指向当前索引</span></span><br><span class="line">    <span class="comment">// array: 指向Array对象本身</span></span><br><span class="line">    <span class="title function_">alert</span>(element + <span class="string">&#x27;, index = &#x27;</span> + index);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">A, index = <span class="number">0</span></span><br><span class="line">B, index = <span class="number">1</span></span><br><span class="line">C, index = <span class="number">2</span></span><br></pre></td></tr></table></figure><p><strong>for Set</strong><br>Set没有索引，因此回调函数的前两个参数都是元素本身:</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> s = <span class="keyword">new</span> <span class="title class_">Set</span>([<span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;C&#x27;</span>]);</span><br><span class="line">s.<span class="title function_">forEach</span>(<span class="keyword">function</span> (<span class="params">element, sameElement, set</span>) &#123;</span><br><span class="line">    <span class="title function_">alert</span>(element);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p><strong>for Map</strong><br>Map的回调函数参数依次为value、key和map本身：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> m = <span class="keyword">new</span> <span class="title class_">Map</span>([[<span class="number">1</span>, <span class="string">&#x27;x&#x27;</span>], [<span class="number">2</span>, <span class="string">&#x27;y&#x27;</span>], [<span class="number">3</span>, <span class="string">&#x27;z&#x27;</span>]]);</span><br><span class="line">m.<span class="title function_">forEach</span>(<span class="keyword">function</span> (<span class="params">value, key, map</span>) &#123;</span><br><span class="line">    <span class="title function_">alert</span>(value);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><hr><p><strong>tips</strong><br>forEach的参数名字是不固定，但是位置是固定的，如果只关心element，那么给forEach一个参数就可以，如果需要index，那么就要给两个参数，如果需要array，就要给三个，也就是这三个参数的含义是定好的。</p><p>如果对某些参数不感兴趣，由于JavaScript的函数调用不要求参数必须一致，因此可以忽略它们。例如，只需要获得Array的element：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> a = [<span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;C&#x27;</span>];</span><br><span class="line">a.<span class="title function_">forEach</span>(<span class="keyword">function</span> (<span class="params">element</span>) &#123;</span><br><span class="line">    <span class="title function_">alert</span>(element);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Learn note </category>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript学习笔记-Map&amp; Set</title>
      <link href="/blog/learnote/js-mapset/"/>
      <url>/blog/learnote/js-mapset/</url>
      
        <content type="html"><![CDATA[<h2 id="Map"><a href="#Map" class="headerlink" title="Map"></a>Map</h2><p>ES6标准引进的<code>key-value</code>数据类型，相当于python中的dictionary<br>增加查找速度，本质上是将键值利用<code>哈希算法</code>类似变量存储。</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> m = <span class="keyword">new</span> <span class="title class_">Map</span>([[<span class="string">&#x27;Michael&#x27;</span>, <span class="number">95</span>], [<span class="string">&#x27;Bob&#x27;</span>, <span class="number">75</span>], [<span class="string">&#x27;Tracy&#x27;</span>, <span class="number">85</span>]]);<span class="comment">//初始化Map需要一个二维数组</span></span><br><span class="line">m.<span class="title function_">get</span>(<span class="string">&#x27;Michael&#x27;</span>); <span class="comment">// 95</span></span><br></pre></td></tr></table></figure><p>或者直接初始化一个空Map。Map具有以下方法</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> m = <span class="keyword">new</span> <span class="title class_">Map</span>(); <span class="comment">// 空Map</span></span><br><span class="line">m.<span class="title function_">set</span>(<span class="string">&#x27;Adam&#x27;</span>, <span class="number">67</span>); <span class="comment">// 添加新的key-value</span></span><br><span class="line">m.<span class="title function_">set</span>(<span class="string">&#x27;Bob&#x27;</span>, <span class="number">59</span>);</span><br><span class="line">m.<span class="title function_">has</span>(<span class="string">&#x27;Adam&#x27;</span>); <span class="comment">// 是否存在key &#x27;Adam&#x27;: true</span></span><br><span class="line">m.<span class="title function_">get</span>(<span class="string">&#x27;Adam&#x27;</span>); <span class="comment">// 67</span></span><br><span class="line">m.<span class="title function_">delete</span>(<span class="string">&#x27;Adam&#x27;</span>); <span class="comment">// 删除key &#x27;Adam&#x27;</span></span><br><span class="line">m.<span class="title function_">get</span>(<span class="string">&#x27;Adam&#x27;</span>); <span class="comment">// undefined</span></span><br></pre></td></tr></table></figure><p>由于一个key只能对应一个value，所以，多次对一个key放入value，后面的值会把前面的值覆盖。  </p><h2 id="Set"><a href="#Set" class="headerlink" title="Set"></a>Set</h2><p>Set和Map类似，也是一组key的集合，但不存储value。由于key不能重复，所以，在Set中，没有重复的key。  </p><p>要创建一个Set，需要提供一个Array作为输入，或者直接创建一个空Set：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> s1 = <span class="keyword">new</span> <span class="title class_">Set</span>(); <span class="comment">// 空Set</span></span><br><span class="line"><span class="keyword">var</span> s2 = <span class="keyword">new</span> <span class="title class_">Set</span>([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]); <span class="comment">// 含1, 2, 3</span></span><br></pre></td></tr></table></figure><p>重复元素在Set中自动被过滤：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> s = <span class="keyword">new</span> <span class="title class_">Set</span>([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">3</span>, <span class="string">&#x27;3&#x27;</span>]);</span><br><span class="line">s; <span class="comment">// Set &#123;1, 2, 3, &quot;3&quot;&#125;</span></span><br><span class="line"><span class="comment">//注意数字3和字符串&#x27;3&#x27;是不同的元素。</span></span><br></pre></td></tr></table></figure><p>通过add(key)方法可以添加元素到Set中，可以重复添加，但不会有效果：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">s.<span class="title function_">add</span>(<span class="number">4</span>);</span><br><span class="line">s; <span class="comment">// Set &#123;1, 2, 3, 4&#125;</span></span><br><span class="line">s.<span class="title function_">add</span>(<span class="number">4</span>);</span><br><span class="line">s; <span class="comment">// 仍然是 Set &#123;1, 2, 3, 4&#125;</span></span><br></pre></td></tr></table></figure><p>通过delete(key)方法可以删除元素：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> s = <span class="keyword">new</span> <span class="title class_">Set</span>([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]);</span><br><span class="line">s; <span class="comment">// Set &#123;1, 2, 3&#125;</span></span><br><span class="line">s.<span class="title function_">delete</span>(<span class="number">3</span>);</span><br><span class="line">s; <span class="comment">// Set &#123;1, 2&#125;</span></span><br></pre></td></tr></table></figure><p>相当于逻辑上的<strong>集合</strong>概念并且可以<strong>子交并补</strong>运算</p>]]></content>
      
      
      <categories>
          
          <category> Learn note </category>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript学习笔记-Object</title>
      <link href="/blog/learnote/js-object/"/>
      <url>/blog/learnote/js-object/</url>
      
        <content type="html"><![CDATA[<h2 id="对象"><a href="#对象" class="headerlink" title="对象"></a>对象</h2><p>javaScript的对象是一种无序的集合数据类型，它由若干键值对组成</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> xiaoming = &#123;</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&#x27;小明&#x27;</span>,</span><br><span class="line">    <span class="attr">birth</span>: <span class="number">1990</span>,</span><br><span class="line">    <span class="string">&#x27;middle-school&#x27;</span>: <span class="string">&#x27;No.1 Middle School&#x27;</span>,</span><br><span class="line">    <span class="attr">height</span>: <span class="number">1.70</span>,</span><br><span class="line">    <span class="attr">weight</span>: <span class="number">65</span>,</span><br><span class="line">    <span class="attr">score</span>: <span class="literal">null</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>注意，最后一个键值对不需要在末尾加,，如果加了，有的浏览器（如低版本的IE）将报错。</p><h2 id="使用属性"><a href="#使用属性" class="headerlink" title="使用属性"></a>使用属性</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&gt;xiaoming.<span class="property">name</span>; </span><br><span class="line"><span class="string">&#x27;小明&#x27;</span></span><br><span class="line">&gt;xiaoming[<span class="string">&#x27;name&#x27;</span>]; </span><br><span class="line"><span class="string">&#x27;小明&#x27;</span></span><br><span class="line">&gt;xiaoming.<span class="property">birth</span>;</span><br><span class="line"> <span class="number">1990</span></span><br><span class="line">&gt;xiaoming[<span class="string">&#x27;middle-school&#x27;</span>]; </span><br><span class="line"><span class="string">&#x27;No.1 Middle School&#x27;</span></span><br></pre></td></tr></table></figure><p>属性名middle-school不是一个有效的变量，就需要用’’括起来。访问这个属性也无法使用.操作符，必须用[‘xxx’]来访问</p><p>访问不存在的属性<strong>不报错</strong>，而是返回<code>undefined</code>:</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&gt;xiaoming.<span class="property">hjh</span>;</span><br><span class="line"><span class="literal">undefined</span></span><br></pre></td></tr></table></figure><p>JavaScript的对象是<strong>动态类型</strong>，你可以自由地给一个对象添加或删除属性</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> xiaoming = &#123;</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&#x27;小明&#x27;</span></span><br><span class="line">&#125;;</span><br><span class="line">xiaoming.<span class="property">age</span>; <span class="comment">// undefined</span></span><br><span class="line">xiaoming.<span class="property">age</span> = <span class="number">18</span>; <span class="comment">// 新增一个age属性</span></span><br><span class="line">xiaoming.<span class="property">age</span>; <span class="comment">// 18</span></span><br><span class="line"><span class="keyword">delete</span> xiaoming.<span class="property">age</span>; <span class="comment">// 删除age属性</span></span><br><span class="line">xiaoming.<span class="property">age</span>; <span class="comment">// undefined</span></span><br><span class="line"><span class="keyword">delete</span> xiaoming[<span class="string">&#x27;name&#x27;</span>]; <span class="comment">// 删除name属性</span></span><br><span class="line">xiaoming.<span class="property">name</span>; <span class="comment">// undefined</span></span><br><span class="line"><span class="keyword">delete</span> xiaoming.<span class="property">school</span>; <span class="comment">// 删除一个不存在的school属性也不会报错</span></span><br></pre></td></tr></table></figure><h2 id="in"><a href="#in" class="headerlink" title="in"></a>in</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="string">&#x27;name&#x27;</span> <span class="keyword">in</span> xiaoming; <span class="comment">// true</span></span><br><span class="line"><span class="string">&#x27;grade&#x27;</span> <span class="keyword">in</span> xiaoming; <span class="comment">// false</span></span><br></pre></td></tr></table></figure><p>如果in判断一个属性存在，这个属性不一定是xiaoming的，它可能是xiaoming继承得到的<br>要判断一个属性是否是xiaoming自身拥有的，而不是继承得到的，可以用hasOwnProperty()方法</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">xiaoming.<span class="title function_">hasOwnProperty</span>(<span class="string">&#x27;name&#x27;</span>); <span class="comment">// true</span></span><br><span class="line">xiaoming.<span class="title function_">hasOwnProperty</span>(<span class="string">&#x27;toString&#x27;</span>); <span class="comment">// false</span></span><br></pre></td></tr></table></figure><h2 id="exercise"><a href="#exercise" class="headerlink" title="exercise"></a>exercise</h2><p>输出对象中的所有属性</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = &#123;</span><br><span class="line">    <span class="string">&#x27;name&#x27;</span> : <span class="string">&#x27;zxt&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;age&#x27;</span> : <span class="number">18</span>,</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">alert</span>(<span class="title class_">JSON</span>.<span class="title function_">stringify</span>(arr));</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">....<span class="property">key</span>就是属性啊</span><br><span class="line"><span class="keyword">var</span> xiaoming = &#123;</span><br><span class="line">     <span class="attr">name</span>:<span class="string">&#x27;xiaoming&#x27;</span>,</span><br><span class="line">    <span class="attr">age</span>:<span class="string">&#x27;18&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(key <span class="keyword">in</span> xiaoming)&#123;</span><br><span class="line">  <span class="title function_">alert</span>(key+<span class="string">&#x27;:&#x27;</span>+xiaoming[key]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Learn note </category>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>倒腾Pelican - Elegant Set Sidebar</title>
      <link href="/blog/blog/pelican/blog-elegant-sidebar-set/"/>
      <url>/blog/blog/pelican/blog-elegant-sidebar-set/</url>
      
        <content type="html"><![CDATA[<div class="note warning no-icon flat"><p>依然是初期的一些乱七八糟倒腾系列。不过让我接触了Git，Markdown，静态页面，部署，等等。</p></div><h2 id="Default-sidebar-options"><a href="#Default-sidebar-options" class="headerlink" title="Default sidebar options"></a>Default sidebar options</h2><p>According to the metadata in your articles，sidebar shows：<br><img src="/blog/%7Bfilename%7D/images/sidebar.old.jpg" alt="sidebar.old">  </p><p><em><strong>1.</strong></em> You can activate <code>Pushlish date</code>, <code>Modification date</code>, <code>Category</code>, <code>Tags</code> functions by specify optional meta data variables <code>Date</code>, <code>Modified</code>, <code>Category</code> and <code>Tags</code> when editing your articles.  </p><p><em><strong>2.</strong></em> <code>Social links</code> is set in your ‘pelicanconfig.py’, just add your links to the Dictionary   </p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Social widget</span></span><br><span class="line">SOCIAL = ((<span class="string">&#x27;GitHub&#x27;</span>,    <span class="string">&#x27;https://....&#x27;</span>),</span><br><span class="line">          (<span class="string">&#x27;YouTube&#x27;</span>,   <span class="string">&#x27;https://....&#x27;</span>),</span><br><span class="line">          (<span class="string">&#x27;Instagram&#x27;</span>, <span class="string">&#x27;https://....&#x27;</span>),</span><br><span class="line">          (<span class="string">&#x27;Twitter&#x27;</span>,   <span class="string">&#x27;https://....&#x27;</span>),</span><br><span class="line">          (<span class="string">&#x27;FaceBook&#x27;</span>,  <span class="string">&#x27;https://....&#x27;</span>),)</span><br></pre></td></tr></table></figure><p><em><strong>3.</strong></em> To set your <code>Mailchimp subscribe box</code>, just refer to article <a href="%7Bfilename%7D/blog-mailchimp.md">Mailchimp subscribe</a>.  </p><hr><h2 id="Add-more-options"><a href="#Add-more-options" class="headerlink" title="Add more options"></a>Add more options</h2><p>You can do some modification to the elagant themes source code to show more informations on your right sidebar.<br>Let’s what can we get:</p><h3 id="“Author”"><a href="#“Author”" class="headerlink" title="“Author”"></a>“Author”</h3><p>Remember that we have specified <code>author</code> meta in our articles, but elegant theme does not support showing this on sidebar.<br><em><strong>step 1.</strong></em>  Add <code>author.html</code> under path <code>pelican-elegant/templates/_includes/</code>, don’t worry about the source code of this file, your can copy <code>_includes/last_updated.html</code> and make some modifications:<br>Details of these two files: </p><p><code>author.html </code>:  </p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--  modified by Jiheng Hu --&gt;</span></span><br><span class="line">&#123;% if article.author %&#125;</span><br><span class="line"><span class="tag">&lt;<span class="name">h4</span>&gt;</span>Edited By<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;author&quot;</span>&gt;</span>&#123;&#123; article.author &#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure><p><code>last_updated.html </code>：</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">&#123;#  Check which version of Pelican user is using.</span><br><span class="line">If it is &lt;=3.3  than modified is a string</span><br><span class="line">If it is &gt;3.3 than modified is a datetime object</span><br><span class="line">#&#125;</span><br><span class="line">&#123;% if article.locale_modified and article.modified %&#125;</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">h4</span>&gt;</span>Last Updated<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line">&#123;% set day = article.modified.strftime(&#x27;%d&#x27;)|int %&#125;</span><br><span class="line"><span class="tag">&lt;<span class="name">time</span> <span class="attr">datetime</span>=<span class="string">&quot;&#123;&#123; article.modified.isoformat() &#125;&#125;&quot;</span>&gt;</span>&#123;&#123; article.modified.strftime(&#x27;%b&#x27;) &#125;&#125; &#123;&#123; day &#125;&#125; &#123;&#123;- article.modified.strftime(&#x27;, %Y&#x27;) &#125;&#125;<span class="tag">&lt;/<span class="name">time</span>&gt;</span></span><br><span class="line"></span><br><span class="line">&#123;% elif article.modified %&#125;</span><br><span class="line"><span class="tag">&lt;<span class="name">h4</span>&gt;</span>Last Updated<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;last-updated&quot;</span>&gt;</span>&#123;&#123; article.modified &#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure><p><em><strong>step 2.</strong></em>  Modify <code>pelican-elegant/templates/article.html</code><br>Find the following parts:  </p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">&#123;% include &#x27;_includes/last_updated.html&#x27; %&#125;</span><br></pre></td></tr></table></figure><p>Add the following line to after it:    </p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">&#123;% include &#x27;_includes/author.html&#x27; %&#125;  <span class="comment">&lt;!-- added by Jiheng Huso is file &quot;_include/author.html&quot;  --&gt;</span> </span><br></pre></td></tr></table></figure><p><em><strong>step 3.</strong></em>  Add <code>author</code> as a meta in your articles and update your blog, you can see the author is attached to to sidebar.  </p><hr><h3 id="“multi-parts”-plugin"><a href="#“multi-parts”-plugin" class="headerlink" title="“multi_parts” plugin"></a>“multi_parts” plugin</h3><p>The elegant theme support <code>Multi-parts</code> plugin to label posts as parts of a series, the series list is located on sidebar。<br>You can add ‘multi-parts’ to <code>PLUGINS</code> list in <code>pelicanconfig.py</code>:</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">PLUGINS = [<span class="string">u&quot;neighbors&quot;</span>,<span class="string">u&quot;related_posts&quot;</span>,<span class="string">&quot;tag_cloud&quot;</span>,<span class="string">&quot;share_post&quot;</span>,<span class="string">&quot;sitemap&quot;</span>,<span class="string">&quot;extract_toc&quot;</span>,<span class="string">&quot;multi_part&quot;</span>]</span><br></pre></td></tr></table></figure><p>Add in your markdown articles of the same serie:</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">parts:  Serie name</span><br></pre></td></tr></table></figure><p>You can see a list on sidebar. </p><p>See also <a href="https://github.com/getpelican/pelican-plugins/tree/master/multi_part">multi_part</a>.  </p><p><img src="/blog/%7Bfilename%7D/images/multip.effect.jpg" alt="multip"></p><hr><h3 id="“series”-plugin"><a href="#“series”-plugin" class="headerlink" title="“series” plugin"></a>“series” plugin</h3><p>The <code>series</code> plugin is a substitution of <code>multi_part</code>, the reasons we choose the formal one are that:<br><em><strong>1.</strong></em> Expand <code>PLUGINS</code> with <code>&#39;multi_part&#39;</code> will bring in a warning:  </p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">WARNING: multi_part plugin: this plugin has been deprecated.</span><br><span class="line">  | The &#x27;series&#x27; plugin provides better support for multi part articles.</span><br></pre></td></tr></table></figure><p><em><strong>2.</strong></em> We can specify the part index for each parts and <code>series</code> will list them in the order of indices, while <code>multi_part</code> can not make it.    </p><p>However, elegant do not support <code>series</code> plugin, we need to modify <code>&#39;pelican-elegant/templates/article.html&#39;</code> again.   </p><p><em><strong>step 1.</strong></em> Add a <code>author.html</code> under path <code>pelican-elegant/templates/_includes/</code>, the souce code comes from <a href="https://github.com/getpelican/pelican-plugins/tree/master/series">Github</a>.  </p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">&#123;% if article.series %&#125;</span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>This post is part &#123;&#123; article.series.index &#125;&#125; of the &quot;&#123;&#123; article.series.name &#125;&#125;&quot; series:<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ol</span> <span class="attr">class</span>=<span class="string">&quot;parts&quot;</span>&gt;</span></span><br><span class="line">        &#123;% for part_article in article.series.all %&#125;</span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> &#123;% <span class="attr">if</span> <span class="attr">part_article</span> == <span class="string">article</span> %&#125;<span class="attr">class</span>=<span class="string">&quot;active&quot;</span>&#123;% <span class="attr">endif</span> %&#125;&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&#x27;&#123;&#123; SITEURL &#125;&#125;/&#123;&#123; part_article.url &#125;&#125;&#x27;</span>&gt;</span>&#123;&#123; part_article.title &#125;&#125;<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        &#123;% endfor %&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure><p><em><strong>step 2.</strong></em> Add a <code>if conditional clauses</code> to <code>multi_part</code> in <code>&#39;pelican-elegant/templates/article.html&#39;</code>.      </p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">&#123;% if &#x27;multi_part&#x27; in PLUGINS %&#125;      <span class="comment">&lt;!-- added by Jiheng Hu --&gt;</span></span><br><span class="line">&#123;% include &#x27;_includes/multi_parts.html&#x27; %&#125; <span class="comment">&lt;!-- origin code --&gt;</span></span><br><span class="line">&#123;% endif %&#125;                           <span class="comment">&lt;!-- added by Jiheng Hu --&gt;</span></span><br></pre></td></tr></table></figure><h2 id="step-3-Add-following-after-step-2-code-also-with-a-if-conditional-clauses-step-5-Use-meta-data-in-your-articles-See-also-series"><a href="#step-3-Add-following-after-step-2-code-also-with-a-if-conditional-clauses-step-5-Use-meta-data-in-your-articles-See-also-series" class="headerlink" title="step 3. Add following after step 2 code, also with a if conditional clauses.step 5. Use meta data in your articles.See also series.     "></a><em><strong>step 3.</strong></em> Add following after step 2 code, also with a <code>if conditional clauses</code>.<br><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">&#123;% if &#x27;series&#x27; in PLUGINS %&#125;           <span class="comment">&lt;!-- added by Jiheng Hu   --&gt;</span></span><br><span class="line">&#123;% include &#x27;_includes/series.html&#x27; %&#125;  <span class="comment">&lt;!-- added by Jiheng Hu, so is file &quot;_include/series.html&quot;  --&gt;</span></span><br><span class="line">&#123;% endif %&#125;                            <span class="comment">&lt;!-- added by Jiheng Hu --&gt;</span></span><br><span class="line">```  </span><br><span class="line">***step 4.*** Expand `PLUGINS` list with `&#x27;series&#x27;`, meantime, remove `&#x27;multi-parts&#x27;` for the list, otherwise you will get two series list on sidebar.  </span><br><span class="line">```python </span><br><span class="line">PLUGINS = [u&quot;neighbors&quot;,u&quot;related_posts&quot;,&quot;tag_cloud&quot;,&quot;share_post&quot;,&quot;sitemap&quot;,&quot;extract_toc&quot;,&quot;series&quot;]#,&quot;multi_part&quot;]  </span><br></pre></td></tr></table></figure><br><em><strong>step 5.</strong></em> Use meta data in your articles.<br><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">series: series name</span><br><span class="line">series<span class="emphasis">_index: 1</span></span><br></pre></td></tr></table></figure><br>See also <a href="https://github.com/getpelican/pelican-plugins/tree/master/series">series</a>.     </h2><p>The effect of above setting<br><img src="/blog/%7Bfilename%7D/images/sidebar.jpg" alt="sidebar">  </p><p>Tip: you can customize the order of sidebar elements by adjusting their quote orders in <code>article.html</code>.</p>]]></content>
      
      
      <categories>
          
          <category> Blog </category>
          
          <category> Pelican </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Pelican </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>倒腾Pelican - Collapse does not work</title>
      <link href="/blog/blog/pelican/blog-fix-collapse/"/>
      <url>/blog/blog/pelican/blog-fix-collapse/</url>
      
        <content type="html"><![CDATA[<div class="note warning no-icon flat"><p>这里发现了一个叫Elegent的主题，现在不知道还有没有，那时候这里面的特色，使用折叠效果来展示文章分类。<br>貌似是因为jQuery依赖出了问题，这个动效不生效，所以一顿修改。那时候连jQuery，Bootstrap，HTML都不懂，就凭借着常年debug的技能去修改。</p></div><h2 id="Issue"><a href="#Issue" class="headerlink" title="Issue"></a>Issue</h2><p>This happens with the file <code>elegant/templates/base.html</code>, which rules the element of every pages<br>at around line 97 , there is a quote： </p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;http://code.jquery.com/jquery.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span>  </span><br></pre></td></tr></table></figure><p>it seems the <code>http</code> request is nolonger credited in this case, and a potential consequence is that:<br>The following collapse funtion in <code>elegant/templates/category.html</code> reports an error <code>&quot;$&quot; undefined</code>,<br>the collapse effect in <code>Categories</code> page does not work.   </p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>  <span class="attr">language</span>=<span class="string">&quot;javascript&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">function</span> <span class="title function_">uncollapse</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            $(<span class="variable language_">window</span>.<span class="property">location</span>.<span class="property">hash</span>).<span class="title function_">collapse</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">toggle</span>: <span class="literal">true</span></span></span><br><span class="line"><span class="language-javascript">            &#125;)</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><p>just modify the file <code>elegant/templates/base.html</code>   </p><hr><h4 id="Method-1-Remove-‘http-’"><a href="#Method-1-Remove-‘http-’" class="headerlink" title="Method 1. Remove ‘http:’"></a>Method 1. Remove ‘http:’</h4><p>remove prefix in the js&#x2F;html template files. “http:&#x2F;&#x2F;“ -&gt; “&#x2F;&#x2F;“<br>i.e. change   </p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;http://code.jquery.com/jquery.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span>  </span><br></pre></td></tr></table></figure><p>to </p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;//code.jquery.com/jquery.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span>  </span><br><span class="line">```  </span><br><span class="line">this is highly recommended on Github, see elegant issues [#167](https://github.com/talha131/pelican-elegant/issues/166) and [#153](https://github.com/talha131/pelican-elegant/pull/153)   </span><br><span class="line">this is quite simple, but I didnot adopt this solution, sence haven&#x27;t noticed these pages.  </span><br><span class="line"></span><br><span class="line">---</span><br><span class="line">#### Method 2. JS function `document.write`  </span><br><span class="line"></span><br><span class="line">This is what I&#x27;ve actually adopted, </span><br><span class="line"></span><br><span class="line">```html</span><br><span class="line"><span class="comment">&lt;!--     协议过旧，不信任，注释</span></span><br><span class="line"><span class="comment">        &lt;script src=&quot;http://code.jquery.com/jquery.min.js&quot;&gt;&lt;/script&gt;</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">var</span> prot = ((<span class="string">&quot;https:&quot;</span> == <span class="variable language_">document</span>.<span class="property">location</span>.<span class="property">protocol</span>) ? <span class="string">&quot;https://&quot;</span> : <span class="string">&quot;http://&quot;</span>);</span></span><br><span class="line"><span class="language-javascript"><span class="variable language_">document</span>.<span class="title function_">write</span>(<span class="built_in">unescape</span>(<span class="string">&quot;%3Cscript src=&#x27;&quot;</span> + prot + <span class="string">&quot;code.jquery.com/jquery.min.js&#x27; type=&#x27;text/javascript&#x27; %3E%3C/script%3E&quot;</span>));</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>this bring  in a warning massage (press <code>F12</code> in your browser,see <code>console</code>):<br><img src="/blog/%7Bfilename%7D/images/warning.jpg" alt="warning massage"><br>but this works well, I stopt debugging.  </p><p>This solution comes from a smilar github issue <a href="https://github.com/nextflow-io/nextflow/issues/127">#127</a> of netflow, see pditommaso’s comment on 6 Apr 2016.  </p>]]></content>
      
      
      <categories>
          
          <category> Blog </category>
          
          <category> Pelican </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Pelican </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>倒腾Pelican - Favicon not recognized</title>
      <link href="/blog/blog/pelican/blog-fix-favicon/"/>
      <url>/blog/blog/pelican/blog-fix-favicon/</url>
      
        <content type="html"><![CDATA[<div class="note warning no-icon flat"><p>这是最初的几篇博客，那时候甚至不懂favicon怎么设置，慢慢的，我还没系统学习前端，这些知识就粗粗了解了。</p></div><h3 id="1-In-‘pelicanconf-py’-set"><a href="#1-In-‘pelicanconf-py’-set" class="headerlink" title="1. In ‘pelicanconf.py’ , set"></a>1. In ‘pelicanconf.py’ , set</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">USE_SHORTCUT_ICONS = <span class="literal">True</span>    </span><br><span class="line">SITELOGO = <span class="string">&#x27;images/favicon.ico&#x27;</span>   </span><br><span class="line">FAVICON = <span class="string">&#x27;images/favicon.ico&#x27;</span>   </span><br><span class="line">SITELOGO_SIZE = <span class="number">15</span>  </span><br><span class="line">```   </span><br><span class="line"><span class="comment">### 2. Put your `favicon.ico` in path `content/images/`   </span></span><br><span class="line"><span class="comment">### 3. In  `elegant/templates/_includes/favicon_links.html`    </span></span><br><span class="line"> </span><br><span class="line"><span class="comment">#### replace following ：</span></span><br><span class="line">```html</span><br><span class="line"> &lt;link rel=<span class="string">&quot;shortcut icon&quot;</span> href=<span class="string">&quot;&#123;&#123; SITEURL &#125;&#125;/theme/images/favicon.ico&quot;</span> <span class="built_in">type</span>=<span class="string">&quot;image/x-icon&quot;</span> <span class="built_in">type</span>=<span class="string">&quot;image/png&quot;</span> /&gt;   </span><br></pre></td></tr></table></figure><h4 id="with"><a href="#with" class="headerlink" title="with"></a>with</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;shortcut icon&quot;</span> <span class="attr">href</span>=<span class="string">&quot;&#123;&#123; SITEURL &#125;&#125;/images/favicon.ico&quot;</span> <span class="attr">type</span>=<span class="string">&quot;image/x-icon&quot;</span> <span class="attr">type</span>=<span class="string">&quot;image/png&quot;</span> /&gt;</span>  </span><br></pre></td></tr></table></figure><h4 id="since-your-favicon-will-be-copied-into-path-output-images-instead-of-output-theme-images"><a href="#since-your-favicon-will-be-copied-into-path-output-images-instead-of-output-theme-images" class="headerlink" title="since your favicon will be copied into path output/images/ instead of output/theme/images/"></a>since your favicon will be copied into path <code>output/images/</code> instead of <code>output/theme/images/</code></h4><p>See also the issue <a href="https://github.com/talha131/pelican-elegant/issues/159">#159</a> of Pelican theme on Github  </p>]]></content>
      
      
      <categories>
          
          <category> Blog </category>
          
          <category> Pelican </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Pelican </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>倒腾Pelican - 博客配置</title>
      <link href="/blog/blog/pelican/blog-pelican-setting/"/>
      <url>/blog/blog/pelican/blog-pelican-setting/</url>
      
        <content type="html"><![CDATA[<h2 id="Latest-set"><a href="#Latest-set" class="headerlink" title="Latest set"></a>Latest set</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*- #</span></span><br><span class="line"><span class="keyword">from</span> __future__ <span class="keyword">import</span> unicode_literals</span><br><span class="line"></span><br><span class="line">AUTHOR = <span class="string">&#x27;Jiheng Hu&#x27;</span></span><br><span class="line">SITENAME = <span class="string">&quot;Jiheng&#x27;s Blog&quot;</span></span><br><span class="line">SITEURL = <span class="string">&#x27;https://jihenghu.github.io&#x27;</span></span><br><span class="line"></span><br><span class="line">PATH = <span class="string">&#x27;content&#x27;</span></span><br><span class="line"></span><br><span class="line">TIMEZONE = <span class="string">&#x27;Asia/Shanghai&#x27;</span></span><br><span class="line"><span class="comment">#DATE_FORMATS = &#123;&#x27;zh&#x27;:&#x27;%Y-%m-%d %H:%M&#x27;&#125;</span></span><br><span class="line">DATE_FORMATS = &#123;<span class="string">&#x27;en&#x27;</span>: <span class="string">&#x27;%a, %d %b %Y %H:%M&#x27;</span>&#125;</span><br><span class="line">THEME = <span class="string">&#x27;pelican-elegant&#x27;</span></span><br><span class="line">DISQUS_SITENAME = <span class="string">&#x27;jihenghu&#x27;</span></span><br><span class="line"></span><br><span class="line">COMMENTS_INTRO = <span class="string">&quot;Disqus isn&#x27;t stable due to poor network,email is highly recommended&quot;</span></span><br><span class="line">DEFAULT_LANG = <span class="string">&#x27;zh&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">##### plugins   </span></span><br><span class="line"><span class="comment">## 插件目录</span></span><br><span class="line">PLUGIN_PATHS = [<span class="string">u&quot;pelican-plugins&quot;</span>]</span><br><span class="line"><span class="comment">#PLUGINS = [u&quot;neighbors&quot;,u&quot;related_posts&quot;,&quot;tag_cloud&quot;,&quot;share_post&quot;,&quot;sitemap&quot;,&quot;tipue_search&quot;,&quot;extract_toc&quot;]#,&quot;multi_part&quot;]</span></span><br><span class="line">PLUGINS = [<span class="string">u&quot;neighbors&quot;</span>,<span class="string">u&quot;related_posts&quot;</span>,<span class="string">&quot;tag_cloud&quot;</span>,<span class="string">&quot;share_post&quot;</span>,<span class="string">&quot;sitemap&quot;</span>,<span class="string">&quot;extract_toc&quot;</span>]<span class="comment">#,&quot;multi_part&quot;]</span></span><br><span class="line"></span><br><span class="line">USE_SHORTCUT_ICONS = <span class="literal">True</span></span><br><span class="line">SITELOGO = <span class="string">&#x27;images/favicon.ico&#x27;</span></span><br><span class="line">FAVICON = <span class="string">&#x27;images/favicon.ico&#x27;</span></span><br><span class="line">SITELOGO_SIZE = <span class="number">15</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#MD_EXTENSIONS = [&#x27;codehilite(css_class=highlight)&#x27;, &#x27;extra&#x27;, &#x27;headerid&#x27;, &#x27;toc&#x27;]</span></span><br><span class="line"><span class="comment"># Markdown extensions to use...</span></span><br><span class="line"><span class="comment"># The following line is deprecated for versions &gt;= 3.7. However, I will leave this in here for backward compatibility for now (since some plugins have not been ported to 3.7.0).</span></span><br><span class="line"><span class="comment">#MD_EXTENSIONS = [&#x27;fenced_code&#x27;, &#x27;codehilite(css_class=highlight, linenums=True)&#x27;, &#x27;toc&#x27;, &#x27;markdown.extensions.abbr&#x27;, &#x27;markdown.extensions.footnotes&#x27;, &#x27;markdown.extensions.tables&#x27;, ]</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># For Pelican version &gt;= 3.7 you will need the following...</span></span><br><span class="line">MARKDOWN = &#123;</span><br><span class="line">    <span class="string">&#x27;extension_configs&#x27;</span> : &#123;</span><br><span class="line">    <span class="string">&#x27;markdown.extensions.codehilite&#x27;</span> : &#123;<span class="string">&#x27;css_class&#x27;</span>: <span class="string">&#x27;highlight&#x27;</span>, <span class="string">&#x27;linenums&#x27;</span>: <span class="literal">True</span>&#125;,</span><br><span class="line">    <span class="string">&#x27;markdown.extensions.abbr&#x27;</span> : &#123;&#125;,</span><br><span class="line">    <span class="string">&#x27;markdown.extensions.footnotes&#x27;</span> : &#123;&#125;,</span><br><span class="line">    <span class="string">&#x27;markdown.extensions.tables&#x27;</span> : &#123;&#125;,</span><br><span class="line">    <span class="string">&#x27;markdown.extensions.toc&#x27;</span> : &#123;<span class="string">&#x27;permalink&#x27;</span>: <span class="literal">True</span>&#125;,</span><br><span class="line">    <span class="string">&#x27;markdown.extensions.fenced_code&#x27;</span> : &#123;&#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">DIRECT_TEMPLATES = ((<span class="string">&#x27;index&#x27;</span>, <span class="string">&#x27;tags&#x27;</span>, <span class="string">&#x27;categories&#x27;</span>,<span class="string">&#x27;archives&#x27;</span>, <span class="string">&#x27;search&#x27;</span>, <span class="string">&#x27;404&#x27;</span>))</span><br><span class="line"></span><br><span class="line">SITESUBTITLE = <span class="string">&#x27;Glory Glory Man. United&#x27;</span></span><br><span class="line"></span><br><span class="line">MAILCHIMP_FORM_ACTION =  <span class="string">&#x27;https://facebook.us17.list-manage.com/subscribe/post?u=c5b98e725c643897fdbd8e8c3&amp;amp;id=248afa8728&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## 配置sitemap 插件</span></span><br><span class="line">SITEMAP = &#123;</span><br><span class="line">    <span class="string">&quot;format&quot;</span>: <span class="string">&quot;xml&quot;</span>,</span><br><span class="line">    <span class="string">&quot;priorities&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;articles&quot;</span>: <span class="number">0.7</span>,</span><br><span class="line">        <span class="string">&quot;indexes&quot;</span>: <span class="number">0.5</span>,</span><br><span class="line">        <span class="string">&quot;pages&quot;</span>: <span class="number">0.3</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">&quot;changefreqs&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;articles&quot;</span>: <span class="string">&quot;monthly&quot;</span>,</span><br><span class="line">        <span class="string">&quot;indexes&quot;</span>: <span class="string">&quot;daily&quot;</span>,</span><br><span class="line">        <span class="string">&quot;pages&quot;</span>: <span class="string">&quot;monthly&quot;</span>,</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">## 设置URL按照日期显示</span></span><br><span class="line"><span class="comment">#ARTICLE_URL = &#x27;categories/&#123;slug&#125;.html&#x27;</span></span><br><span class="line"><span class="comment">#ARTICLE_SAVE_AS = ARTICLE_URL</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## 分页</span></span><br><span class="line">DEFAULT_PAGINATION = <span class="number">10</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## 静态目录设置</span></span><br><span class="line">STATIC_PATHS = [<span class="string">&quot;images&quot;</span>,<span class="string">&quot;extra&quot;</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment">## 顶部菜单项</span></span><br><span class="line"><span class="comment">#MENUITEMS = [(&#x27;archives&#x27;,SITEURL+&#x27;/archives.html&#x27;),]</span></span><br><span class="line"></span><br><span class="line">USE_FOLDER_AS_CATEGORY = <span class="literal">True</span></span><br><span class="line"></span><br><span class="line">ARTICLE_URL = <span class="string">&#x27;&#123;category&#125;/&#123;slug&#125;.html&#x27;</span></span><br><span class="line">ARTICLE_SAVE_AS = ARTICLE_URL</span><br><span class="line">PAGE_URL = <span class="string">&#x27;&#123;slug&#125;.html&#x27;</span></span><br><span class="line">PAGE_SAVE_AS = PAGE_URL</span><br><span class="line"></span><br><span class="line">CATEGORY_URL = <span class="string">&#x27;categories/&#123;slug&#125;.html&#x27;</span></span><br><span class="line">CATEGORY_SAVE_AS = CATEGORY_URL</span><br><span class="line">CATEGORIES_SAVE_AS = <span class="string">&#x27;categories.html&#x27;</span></span><br><span class="line"></span><br><span class="line">TAG_URL = <span class="string">&#x27;tags/&#123;slug&#125;.html&#x27;</span></span><br><span class="line">TAG_SAVE_AS = TAG_URL</span><br><span class="line">TAGS_SAVE_AS = <span class="string">&#x27;tags.html&#x27;</span> </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Feed generation is usually not desired when developing</span></span><br><span class="line">FEED_ALL_ATOM = <span class="literal">None</span></span><br><span class="line">CATEGORY_FEED_ATOM = <span class="literal">None</span></span><br><span class="line">TRANSLATION_FEED_ATOM = <span class="literal">None</span></span><br><span class="line">AUTHOR_FEED_ATOM = <span class="literal">None</span></span><br><span class="line">AUTHOR_FEED_RSS = <span class="literal">None</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Blogroll</span></span><br><span class="line">LINKS = ((<span class="string">&#x27;Pelican&#x27;</span>, <span class="string">&#x27;http://getpelican.com/&#x27;</span>),</span><br><span class="line">         (<span class="string">&#x27;Python.org&#x27;</span>, <span class="string">&#x27;http://python.org/&#x27;</span>),</span><br><span class="line">         (<span class="string">&#x27;Jinja2&#x27;</span>, <span class="string">&#x27;http://jinja.pocoo.org/&#x27;</span>),</span><br><span class="line">         (<span class="string">&#x27;You can modify those links in your config file&#x27;</span>, <span class="string">&#x27;#&#x27;</span>),)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Social widget</span></span><br><span class="line">SOCIAL = ((<span class="string">&#x27;GitHub&#x27;</span>,    <span class="string">&#x27;https://github.com/jihenghu&#x27;</span>),</span><br><span class="line">          (<span class="string">&#x27;YouTube&#x27;</span>,   <span class="string">&#x27;https://www.youtube.com/channel/UCPInVfFat-LA865PCIsgrcA?view_as=subscriber&#x27;</span>),</span><br><span class="line">          (<span class="string">&#x27;Instagram&#x27;</span>, <span class="string">&#x27;https://www.instagram.com/jihenghu/&#x27;</span>),</span><br><span class="line">          (<span class="string">&#x27;Twitter&#x27;</span>,   <span class="string">&#x27;https://twitter.com/hjh18305&#x27;</span>),</span><br><span class="line">          (<span class="string">&#x27;FaceBook&#x27;</span>,  <span class="string">&#x27;https://www.facebook.com/profile.php?id=100010229477330&#x27;</span>),)</span><br><span class="line"></span><br><span class="line"><span class="comment">#SITE_DESCRIPTION = &#x27;I built this static site just for daily record&#x27;</span></span><br><span class="line">GOOGLE_PLUS_PROFILE_URL = <span class="string">&#x27;https://plus.google.com/u/0/105611375860140618313&#x27;</span></span><br><span class="line">TWITTER_USERNAME = <span class="string">&#x27;hjh18305&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">LANDING_PAGE_ABOUT = &#123;<span class="string">&#x27;title&#x27;</span>:<span class="string">&#x27;The leading page&#x27;</span>,</span><br><span class="line">     <span class="string">&#x27;details&#x27;</span>: <span class="string">&#x27;My name is Jiheng Hu. I am jihenghu at Github,you can reach me via hjh18305@gmail.com .&lt;br/&gt;&#x27;</span></span><br><span class="line">     <span class="string">&#x27;\n I am a graduated student of University of Science &amp; Technology of China. &lt;br/&gt;&#x27;</span></span><br><span class="line">     <span class="string">&#x27;\n This is a static website built powered by Pelican&#x27;</span>&#125;</span><br><span class="line">PROJECTS = [&#123;</span><br><span class="line">    <span class="string">&#x27;name&#x27;</span>: <span class="string">&#x27;Logpad + Duration&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;url&#x27;</span>: <span class="string">&#x27;https://github.com/talha131/logpad-plus-duration#logpad--duration&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;description&#x27;</span>: <span class="string">&#x27;Vim plugin to emulate Windows Notepad logging feature,&#x27;</span></span><br><span class="line">    <span class="string">&#x27; and log duration of each entry&#x27;</span>&#125;,</span><br><span class="line">    &#123;<span class="string">&#x27;name&#x27;</span>: <span class="string">&#x27;Elegant Theme for Pelican&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;url&#x27;</span>: <span class="string">&#x27;http://oncrashreboot.com/pelican-elegant&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;description&#x27;</span>: <span class="string">&#x27;A clean and distraction free theme, with search and a&#x27;</span></span><br><span class="line">    <span class="string">&#x27; lot more unique features, using Jinja2 and Bootstrap&#x27;</span>&#125;]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Uncomment following line if you want document-relative URLs when developing</span></span><br><span class="line"><span class="comment">#RELATIVE_URLS = True  </span></span><br></pre></td></tr></table></figure><h2 id="Previous-set"><a href="#Previous-set" class="headerlink" title="Previous set"></a>Previous set</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*- #</span></span><br><span class="line"><span class="keyword">from</span> __future__ <span class="keyword">import</span> unicode_literals</span><br><span class="line"></span><br><span class="line">AUTHOR = <span class="string">&#x27;Jiheng Hu&#x27;</span></span><br><span class="line">SITENAME = <span class="string">&quot;Jiheng&#x27;s Blog&quot;</span></span><br><span class="line">SITEURL = <span class="string">&#x27;https://jihenghu.github.io&#x27;</span>    </span><br><span class="line"></span><br><span class="line">PATH = <span class="string">&#x27;content&#x27;</span></span><br><span class="line"></span><br><span class="line">TIMEZONE = <span class="string">&#x27;Asia/Shanghai&#x27;</span></span><br><span class="line"><span class="comment">#DATE_FORMATS = &#123;&#x27;zh&#x27;:&#x27;%Y-%m-%d %H:%M&#x27;&#125;</span></span><br><span class="line">DATE_FORMATS = &#123;<span class="string">&#x27;en&#x27;</span>: <span class="string">&#x27;%a, %d %b %Y %H:%M&#x27;</span>&#125;</span><br><span class="line">THEME = <span class="string">&#x27;pelican-elegant&#x27;</span></span><br><span class="line">DISQUS_SITENAME = <span class="string">&#x27;jihenghu&#x27;</span></span><br><span class="line"></span><br><span class="line">DEFAULT_LANG = <span class="string">&#x27;zh&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">##### plugins   </span></span><br><span class="line"><span class="comment">## 插件目录</span></span><br><span class="line">PLUGIN_PATHS = [<span class="string">u&quot;pelican-plugins&quot;</span>]</span><br><span class="line"><span class="comment">#PLUGINS = [u&quot;neighbors&quot;,u&quot;related_posts&quot;,&quot;tag_cloud&quot;,&quot;share_post&quot;,&quot;sitemap&quot;,&quot;tipue_search&quot;,&quot;extract_toc&quot;]#,&quot;multi_part&quot;]</span></span><br><span class="line">PLUGINS = [<span class="string">u&quot;neighbors&quot;</span>,<span class="string">u&quot;related_posts&quot;</span>,<span class="string">&quot;tag_cloud&quot;</span>,<span class="string">&quot;share_post&quot;</span>,<span class="string">&quot;sitemap&quot;</span>,<span class="string">&quot;extract_toc&quot;</span>]<span class="comment">#,&quot;multi_part&quot;]</span></span><br><span class="line"></span><br><span class="line">USE_SHORTCUT_ICONS = <span class="literal">True</span></span><br><span class="line">SITELOGO = <span class="string">&#x27;images/favicon.ico&#x27;</span></span><br><span class="line">FAVICON = <span class="string">&#x27;images/favicon.ico&#x27;</span></span><br><span class="line">SITELOGO_SIZE = <span class="number">15</span></span><br><span class="line"></span><br><span class="line">MD_EXTENSIONS = [<span class="string">&#x27;codehilite(css_class=highlight)&#x27;</span>, <span class="string">&#x27;extra&#x27;</span>, <span class="string">&#x27;headerid&#x27;</span>, <span class="string">&#x27;toc&#x27;</span>]</span><br><span class="line">DIRECT_TEMPLATES = ((<span class="string">&#x27;index&#x27;</span>, <span class="string">&#x27;tags&#x27;</span>, <span class="string">&#x27;categories&#x27;</span>,<span class="string">&#x27;archives&#x27;</span>, <span class="string">&#x27;search&#x27;</span>, <span class="string">&#x27;404&#x27;</span>))</span><br><span class="line"></span><br><span class="line">SITESUBTITLE = <span class="string">&#x27;Glory Glory Man. United&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">## 配置sitemap 插件</span></span><br><span class="line">SITEMAP = &#123;</span><br><span class="line">    <span class="string">&quot;format&quot;</span>: <span class="string">&quot;xml&quot;</span>,</span><br><span class="line">    <span class="string">&quot;priorities&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;articles&quot;</span>: <span class="number">0.7</span>,</span><br><span class="line">        <span class="string">&quot;indexes&quot;</span>: <span class="number">0.5</span>,</span><br><span class="line">        <span class="string">&quot;pages&quot;</span>: <span class="number">0.3</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">&quot;changefreqs&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;articles&quot;</span>: <span class="string">&quot;monthly&quot;</span>,</span><br><span class="line">        <span class="string">&quot;indexes&quot;</span>: <span class="string">&quot;daily&quot;</span>,</span><br><span class="line">        <span class="string">&quot;pages&quot;</span>: <span class="string">&quot;monthly&quot;</span>,</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">## 分页</span></span><br><span class="line">DEFAULT_PAGINATION = <span class="number">10</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## 静态目录设置</span></span><br><span class="line">STATIC_PATHS = [<span class="string">&quot;images&quot;</span>,<span class="string">&quot;extra&quot;</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment">## 顶部菜单项</span></span><br><span class="line"><span class="comment">#MENUITEMS = [(&#x27;archives&#x27;,SITEURL+&#x27;/archives.html&#x27;),]</span></span><br><span class="line"></span><br><span class="line">USE_FOLDER_AS_CATEGORY = <span class="literal">True</span></span><br><span class="line"></span><br><span class="line">ARTICLE_URL = <span class="string">&#x27;&#123;category&#125;/&#123;slug&#125;.html&#x27;</span></span><br><span class="line">ARTICLE_SAVE_AS = ARTICLE_URL</span><br><span class="line">PAGE_URL = <span class="string">&#x27;&#123;slug&#125;.html&#x27;</span></span><br><span class="line">PAGE_SAVE_AS = PAGE_URL</span><br><span class="line"></span><br><span class="line">CATEGORY_URL = <span class="string">&#x27;categories/&#123;slug&#125;.html&#x27;</span></span><br><span class="line">CATEGORY_SAVE_AS = CATEGORY_URL</span><br><span class="line">CATEGORIES_SAVE_AS = <span class="string">&#x27;categories.html&#x27;</span></span><br><span class="line"></span><br><span class="line">TAG_URL = <span class="string">&#x27;tags/&#123;slug&#125;.html&#x27;</span></span><br><span class="line">TAG_SAVE_AS = TAG_URL</span><br><span class="line">TAGS_SAVE_AS = <span class="string">&#x27;tags.html&#x27;</span> </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Feed generation is usually not desired when developing</span></span><br><span class="line">FEED_ALL_ATOM = <span class="literal">None</span></span><br><span class="line">CATEGORY_FEED_ATOM = <span class="literal">None</span></span><br><span class="line">TRANSLATION_FEED_ATOM = <span class="literal">None</span></span><br><span class="line">AUTHOR_FEED_ATOM = <span class="literal">None</span></span><br><span class="line">AUTHOR_FEED_RSS = <span class="literal">None</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Blogroll  nouse for elegant</span></span><br><span class="line">LINKS = ((<span class="string">&#x27;Pelican&#x27;</span>, <span class="string">&#x27;http://getpelican.com/&#x27;</span>),</span><br><span class="line">         (<span class="string">&#x27;Python.org&#x27;</span>, <span class="string">&#x27;http://python.org/&#x27;</span>),</span><br><span class="line">         (<span class="string">&#x27;Jinja2&#x27;</span>, <span class="string">&#x27;http://jinja.pocoo.org/&#x27;</span>),</span><br><span class="line">         (<span class="string">&#x27;You can modify those links in your config file&#x27;</span>, <span class="string">&#x27;#&#x27;</span>),)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Social widget</span></span><br><span class="line">SOCIAL = ((<span class="string">&#x27;GitHub&#x27;</span>,    <span class="string">&#x27;https://github.com/jihenghu&#x27;</span>),</span><br><span class="line">          (<span class="string">&#x27;YouTube&#x27;</span>,   <span class="string">&#x27;https://www.youtube.com/channel/UCPInVfFat-LA865PCIsgrcA?view_as=subscriber&#x27;</span>),</span><br><span class="line">          (<span class="string">&#x27;Instagram&#x27;</span>, <span class="string">&#x27;https://www.instagram.com/jihenghu/&#x27;</span>),</span><br><span class="line">          (<span class="string">&#x27;Twitter&#x27;</span>,   <span class="string">&#x27;https://twitter.com/hjh18305&#x27;</span>),</span><br><span class="line">          (<span class="string">&#x27;FaceBook&#x27;</span>,  <span class="string">&#x27;https://www.facebook.com/profile.php?id=100010229477330&#x27;</span>),)</span><br><span class="line"></span><br><span class="line"><span class="comment">#SITE_DESCRIPTION = &#x27;I built this static site just for daily record&#x27;</span></span><br><span class="line">GOOGLE_PLUS_PROFILE_URL = <span class="string">&#x27;https://plus.google.com/u/0/105611375860140618313&#x27;</span></span><br><span class="line">TWITTER_USERNAME = <span class="string">&#x27;hjh18305&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">LANDING_PAGE_ABOUT = &#123;<span class="string">&#x27;title&#x27;</span>:<span class="string">&#x27;The leading page&#x27;</span>,</span><br><span class="line">     <span class="string">&#x27;details&#x27;</span>: <span class="string">&#x27;My name is Jiheng Hu. I am jihenghu at Github,you can reach me via hjh18305@gmail.com .&lt;br/&gt;&#x27;</span></span><br><span class="line">     <span class="string">&#x27;\n I am a graduated student of University of Science &amp; Technology of China. &lt;br/&gt;&#x27;</span></span><br><span class="line">     <span class="string">&#x27;\n This is a static website built powered by Pelican&#x27;</span>&#125;</span><br><span class="line">PROJECTS = [&#123;</span><br><span class="line">    <span class="string">&#x27;name&#x27;</span>: <span class="string">&#x27;Logpad + Duration&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;url&#x27;</span>: <span class="string">&#x27;https://github.com/talha131/logpad-plus-duration#logpad--duration&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;description&#x27;</span>: <span class="string">&#x27;Vim plugin to emulate Windows Notepad logging feature,&#x27;</span></span><br><span class="line">    <span class="string">&#x27; and log duration of each entry&#x27;</span>&#125;,</span><br><span class="line">    &#123;<span class="string">&#x27;name&#x27;</span>: <span class="string">&#x27;Elegant Theme for Pelican&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;url&#x27;</span>: <span class="string">&#x27;http://oncrashreboot.com/pelican-elegant&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;description&#x27;</span>: <span class="string">&#x27;A clean and distraction free theme, with search and a&#x27;</span></span><br><span class="line">    <span class="string">&#x27; lot more unique features, using Jinja2 and Bootstrap&#x27;</span>&#125;]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Uncomment following line if you want document-relative URLs when developing</span></span><br><span class="line"><span class="comment">#RELATIVE_URLS = True</span></span><br></pre></td></tr></table></figure><h2 id="Talha131’s-setting"><a href="#Talha131’s-setting" class="headerlink" title="Talha131’s setting"></a>Talha131’s setting</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">#!/usr/bin/env python</span><br><span class="line"># -*- coding: utf-8 -*- #</span><br><span class="line">from __future__ import unicode_literals</span><br><span class="line"></span><br><span class="line">AUTHOR = u&#x27;Talha Mansoor&#x27;</span><br><span class="line">SITENAME = u&quot;&quot;&quot;<span class="tag">&lt;<span class="name">span</span> <span class="attr">style</span>=<span class="string">&quot;color:black;&quot;</span>&gt;</span>onCrash<span class="tag">&lt;/<span class="name">span</span>&gt;</span> <span class="tag">&lt;<span class="name">span</span> <span class="attr">style</span>=<span class="string">&quot;color:darkblue;&quot;</span>&gt;</span>=<span class="tag">&lt;/<span class="name">span</span>&gt;</span> <span class="tag">&lt;<span class="name">span</span> <span class="attr">style</span>=<span class="string">&quot;color:#AA1032;&quot;</span>&gt;</span>&#x27;reboot();&#x27;<span class="tag">&lt;/<span class="name">span</span>&gt;</span>&quot;&quot;&quot;</span><br><span class="line">SITEURL = &#x27;http://localhost:8000&#x27;</span><br><span class="line"></span><br><span class="line"># Regional Settings</span><br><span class="line">TIMEZONE = &#x27;Asia/Karachi&#x27;</span><br><span class="line">DATE_FORMATS = &#123;&#x27;en&#x27;: &#x27;%b %d, %Y&#x27;&#125;</span><br><span class="line">DEFAULT_LANG = u&#x27;en&#x27;</span><br><span class="line"></span><br><span class="line"># Plugins and extensions</span><br><span class="line">MD_EXTENSIONS = [&#x27;codehilite(css_class=highlight)&#x27;, &#x27;extra&#x27;, &#x27;headerid&#x27;,</span><br><span class="line">                &#x27;toc(permalink=true)&#x27;]</span><br><span class="line">PLUGIN_PATH = &#x27;../pelican-plugins/&#x27;</span><br><span class="line">PLUGINS = [&#x27;sitemap&#x27;, &#x27;extract_toc&#x27;, &#x27;tipue_search&#x27;, &#x27;liquid_tags.img&#x27;,</span><br><span class="line">           &#x27;neighbors&#x27;, &#x27;latex&#x27;, &#x27;related_posts&#x27;, &#x27;assets&#x27;, &#x27;share_post&#x27;,</span><br><span class="line">           &#x27;multi_part&#x27;]</span><br><span class="line">SITEMAP = &#123;</span><br><span class="line">    &#x27;format&#x27;: &#x27;xml&#x27;,</span><br><span class="line">    &#x27;priorities&#x27;: &#123;</span><br><span class="line">        &#x27;articles&#x27;: 0.5,</span><br><span class="line">        &#x27;indexes&#x27;: 0.5,</span><br><span class="line">        &#x27;pages&#x27;: 0.5</span><br><span class="line">    &#125;,</span><br><span class="line">    &#x27;changefreqs&#x27;: &#123;</span><br><span class="line">        &#x27;articles&#x27;: &#x27;monthly&#x27;,</span><br><span class="line">        &#x27;indexes&#x27;: &#x27;daily&#x27;,</span><br><span class="line">        &#x27;pages&#x27;: &#x27;monthly&#x27;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># Appearance</span><br><span class="line">TYPOGRIFY = True</span><br><span class="line">THEME = &#x27;elegant&#x27;</span><br><span class="line">DEFAULT_PAGINATION = False</span><br><span class="line"></span><br><span class="line"># Defaults</span><br><span class="line">DEFAULT_CATEGORY = &#x27;Miscellaneous&#x27;</span><br><span class="line">USE_FOLDER_AS_CATEGORY = False</span><br><span class="line">ARTICLE_URL = u&#x27;&#123;slug&#125;&#x27;</span><br><span class="line">PAGE_URL = u&#x27;&#123;slug&#125;&#x27;</span><br><span class="line">PAGE_SAVE_AS = u&#x27;&#123;slug&#125;.html&#x27;</span><br><span class="line"></span><br><span class="line"># Feeds</span><br><span class="line">FEED_ALL_ATOM = None</span><br><span class="line">CATEGORY_FEED_ATOM = None</span><br><span class="line">TRANSLATION_FEED_ATOM = None</span><br><span class="line"></span><br><span class="line"># Social</span><br><span class="line">SOCIAL = (</span><br><span class="line">        (&#x27;Twitter&#x27;, &#x27;http://twitter.com/talham_&#x27;),</span><br><span class="line">        (&#x27;Github&#x27;, &#x27;http://github.com/talha131&#x27;),</span><br><span class="line">        (&#x27;GitTip&#x27;, &#x27;http://gittip.com/talha131&#x27;),</span><br><span class="line">        (&#x27;Email&#x27;, &#x27;mailto:talha131@gmail.com&#x27;),</span><br><span class="line">          )</span><br><span class="line"></span><br><span class="line"># Elegant theme</span><br><span class="line">STATIC_PATHS = [&#x27;theme/images&#x27;, &#x27;images&#x27;]</span><br><span class="line">DIRECT_TEMPLATES = ((&#x27;index&#x27;, &#x27;tags&#x27;, &#x27;categories&#x27;, &#x27;archives&#x27;, &#x27;search&#x27;, &#x27;404&#x27;))</span><br><span class="line">TAG_SAVE_AS = &#x27;&#x27;</span><br><span class="line">AUTHOR_SAVE_AS = &#x27;&#x27;</span><br><span class="line">CATEGORY_SAVE_AS = &#x27;&#x27;</span><br><span class="line">USE_SHORTCUT_ICONS = True</span><br><span class="line"></span><br><span class="line"># Elegant Labels</span><br><span class="line">SOCIAL_PROFILE_LABEL = u&#x27;Stay in Touch&#x27;</span><br><span class="line">RELATED_POSTS_LABEL = &#x27;Keep Reading&#x27;</span><br><span class="line">SHARE_POST_INTRO = &#x27;Like this post? Share on:&#x27;</span><br><span class="line">COMMENTS_INTRO = u&#x27;So what do you think? Did I miss something? Is any part unclear? Leave your comments below.&#x27;</span><br><span class="line"></span><br><span class="line"># Mailchimp</span><br><span class="line">EMAIL_SUBSCRIPTION_LABEL = u&#x27;Get Monthly Updates&#x27;</span><br><span class="line">EMAIL_FIELD_PLACEHOLDER = u&#x27;Enter your email...&#x27;</span><br><span class="line">SUBSCRIBE_BUTTON_TITLE = u&#x27;Send me Free updates&#x27;</span><br><span class="line">MAILCHIMP_FORM_ACTION = u&#x27;empty&#x27;</span><br><span class="line"></span><br><span class="line"># SMO</span><br><span class="line">TWITTER_USERNAME = u&#x27;talham_&#x27;</span><br><span class="line">FEATURED_IMAGE = SITEURL + &#x27;/theme/images/apple-touch-icon-152x152.png&#x27;</span><br><span class="line"></span><br><span class="line"># Legal</span><br><span class="line">SITE_LICENSE = u&#x27;<span class="tag">&lt;<span class="name">span</span> <span class="attr">xmlns:dct</span>=<span class="string">&quot;http://purl.org/dc/terms/&quot;</span> <span class="attr">property</span>=<span class="string">&quot;dct:title&quot;</span>&gt;</span> onCrash=&quot;Reboot();&quot;<span class="tag">&lt;/<span class="name">span</span>&gt;</span> by <span class="tag">&lt;<span class="name">a</span> <span class="attr">xmlns:cc</span>=<span class="string">&quot;http://creativecommons.org/ns#&quot;</span> <span class="attr">href</span>=<span class="string">&quot;http://oncrashreboot.com&quot;</span> <span class="attr">property</span>=<span class="string">&quot;cc:attributionName&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;cc:attributionURL&quot;</span>&gt;</span>Talha Mansoor<span class="tag">&lt;/<span class="name">a</span>&gt;</span> is licensed under a <span class="tag">&lt;<span class="name">a</span> <span class="attr">rel</span>=<span class="string">&quot;license&quot;</span> <span class="attr">href</span>=<span class="string">&quot;http://creativecommons.org/licenses/by-sa/3.0/deed.en_US&quot;</span>&gt;</span>Creative Commons Attribution-ShareAlike 3.0 Unported License<span class="tag">&lt;/<span class="name">a</span>&gt;</span>.&#x27;</span><br><span class="line"></span><br><span class="line"># SEO</span><br><span class="line">SITE_DESCRIPTION = u&#x27;My name is Talha Mansoor \u2015 a software engineer who gets things done. I am talha131 at Github and @talham_ at twitter. I design and build software products for iOS and OSX. I work on Jump Desktop which is a remote desktop application for iOS, OSX and Android. This is my personal blog.&#x27;</span><br><span class="line"></span><br><span class="line"># Landing Page</span><br><span class="line">PROJECTS = [</span><br><span class="line">        &#123;</span><br><span class="line">            &#x27;name&#x27;: &#x27;Elegant&#x27;,</span><br><span class="line">            &#x27;url&#x27;:</span><br><span class="line">            &#x27;http://oncrashreboot.com/pelican-elegant&#x27;,</span><br><span class="line">            &#x27;description&#x27;: &#x27;A clean and distraction free Pelican theme, with&#x27;</span><br><span class="line">            &#x27; search and a&#x27;</span><br><span class="line">            &#x27; lot more unique features. Built with Jinja2 and Bootstrap&#x27;&#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            &#x27;name&#x27;: &#x27;Logpad + Duration&#x27;,</span><br><span class="line">            &#x27;url&#x27;:</span><br><span class="line">            &#x27;https://github.com/talha131/logpad-plus-duration#logpad--duration&#x27;,</span><br><span class="line">            &#x27;description&#x27;: &#x27;Vim plugin to emulate Windows Notepad logging feature,&#x27;</span><br><span class="line">            &#x27; and log duration of each entry&#x27;&#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            &#x27;name&#x27;: &#x27;Pelican&#x27;,</span><br><span class="line">            &#x27;url&#x27;:</span><br><span class="line">            &#x27;https://github.com/getpelican/pelican/commits?author=talha131&#x27;,</span><br><span class="line">            &#x27;description&#x27;: &#x27;Static site generator that supports Markdown and&#x27;</span><br><span class="line">            &#x27; reST syntax&#x27;&#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            &#x27;name&#x27;: &#x27;Pelican Plugins&#x27;,</span><br><span class="line">            &#x27;url&#x27;:</span><br><span class="line">            &#x27;https://github.com/getpelican/pelican-plugins/commits?author=talha131&#x27;,</span><br><span class="line">            &#x27;description&#x27;: &#x27;Bunch of plugins for Pelican blog engine&#x27;&#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            &#x27;name&#x27;: &#x27;Asana to Github Issues&#x27;,</span><br><span class="line">            &#x27;url&#x27;: &#x27;https://github.com/talha131/AsanaToGithub#asana-to-github&#x27;,</span><br><span class="line">            &#x27;description&#x27;: &#x27;Command-line program to move your tasks from Asana&#x27;</span><br><span class="line">            &#x27; projects to Github issues&#x27;&#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            &#x27;name&#x27;: &#x27;Asana&#x27;,</span><br><span class="line">            &#x27;url&#x27;:</span><br><span class="line">            &#x27;https://github.com/pandemicsyn/asana/commits?author=talha131&#x27;,</span><br><span class="line">            &#x27;description&#x27;: &#x27;Python Asana API bindings&#x27;&#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            &#x27;name&#x27;: &#x27;Ctags&#x27;,</span><br><span class="line">            &#x27;url&#x27;:</span><br><span class="line">            &#x27;https://github.com/fishman/ctags/commits?author=talha131&#x27;,</span><br><span class="line">            &#x27;description&#x27;: &#x27;Exuberant Ctags clone with ObjectiveC and CSS support&#x27;&#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            &#x27;name&#x27;: &#x27;Wasavi&#x27;,</span><br><span class="line">            &#x27;url&#x27;:</span><br><span class="line">            &#x27;https://github.com/akahuku/wasavi/commits?author=talha131&#x27;,</span><br><span class="line">            &#x27;description&#x27;: &#x27;A browser extension that changes textarea element to&#x27;</span><br><span class="line">            &#x27; Vi editor&#x27;</span><br><span class="line">            &#125;]</span><br><span class="line">LANDING_PAGE_ABOUT = &#123;&#x27;title&#x27;: &#x27;I design and build software products for iOS and OSX&#x27;,</span><br><span class="line">        &#x27;details&#x27;: &quot;&quot;&quot;<span class="tag">&lt;<span class="name">div</span> <span class="attr">itemscope</span> <span class="attr">itemtype</span>=<span class="string">&quot;http://schema.org/Person&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>My name</span><br><span class="line">        is <span class="tag">&lt;<span class="name">span</span> <span class="attr">itemprop</span>=<span class="string">&quot;name&quot;</span>&gt;</span>Talha Mansoor<span class="tag">&lt;/<span class="name">span</span>&gt;</span>.</span><br><span class="line">       I am <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://github.com/talha131/&quot;</span> <span class="attr">title</span>=<span class="string">&quot;My Github</span></span></span><br><span class="line"><span class="string"><span class="tag">       profile&quot;</span> <span class="attr">itemprop</span>=<span class="string">&quot;url&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">itemprop</span>=<span class="string">&quot;nickname&quot;</span>&gt;</span>talha131<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span> at Github and <span class="tag">&lt;<span class="name">a</span></span></span><br><span class="line"><span class="tag">       <span class="attr">href</span>=<span class="string">&quot;https://twitter.com/talham_/&quot;</span> <span class="attr">title</span>=<span class="string">&quot;My Twitter</span></span></span><br><span class="line"><span class="string"><span class="tag">       profile&quot;</span> <span class="attr">itemprop</span>=<span class="string">&quot;url&quot;</span>&gt;</span>@talham_<span class="tag">&lt;/<span class="name">a</span>&gt;</span> at twitter. You can also reach me via <span class="tag">&lt;<span class="name">a</span></span></span><br><span class="line"><span class="tag">       <span class="attr">href</span>=<span class="string">&quot;mailto:talha131@gmail.com&quot;</span> <span class="attr">title</span>=<span class="string">&quot;My email</span></span></span><br><span class="line"><span class="string"><span class="tag">       address&quot;</span> <span class="attr">itemprop</span>=<span class="string">&quot;email&quot;</span>&gt;</span>email<span class="tag">&lt;/<span class="name">a</span>&gt;</span>.<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>I work on <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://jumpdesktop.com/&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">title</span>=<span class="string">&quot;Jump Desktop&quot;</span> <span class="attr">itemprop</span>=<span class="string">&quot;affiliation&quot;</span>&gt;</span>Jump Desktop<span class="tag">&lt;/<span class="name">a</span>&gt;</span> which is a remote desktop</span><br><span class="line">       application for iOS, OSX and Android. I play a broad role there - which</span><br><span class="line">       includes research, product design, engineering and deployment. I also</span><br><span class="line">       lend a hand in user support.<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>I try to contribute to society by</span><br><span class="line">       striving to create great software products that make people&#x27;s lives</span><br><span class="line">       easier. I believe software is the most effective way to touch others&#x27;</span><br><span class="line">       lives in our day and time.<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>I mostly work in C, C++ and Objective-C</span><br><span class="line">       on OSX and Linux, I also dabble in Python, Vim-L and JavaScript. I do not</span><br><span class="line">       pigeonhole myself to specific languages or frameworks. A good developer</span><br><span class="line">       is receptive and has the ability to learn new technologies. I also often</span><br><span class="line">       contribute to open source projects and beta test startup</span><br><span class="line">       products.<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>Besides programming, I <span class="tag">&lt;<span class="name">a</span></span></span><br><span class="line"><span class="tag">       <span class="attr">href</span>=<span class="string">&quot;https://www.fitocracy.com/profile/Andrew-Dufresne/&quot;</span> <span class="attr">title</span>=<span class="string">&quot;My</span></span></span><br><span class="line"><span class="string"><span class="tag">       Fitocracy profile&quot;</span> <span class="attr">itemprop</span>=<span class="string">&quot;url&quot;</span>&gt;</span>exercise<span class="tag">&lt;/<span class="name">a</span>&gt;</span> and <span class="tag">&lt;<span class="name">a</span></span></span><br><span class="line"><span class="tag">       <span class="attr">href</span>=<span class="string">&quot;http://www.goodreads.com/talha131&quot;</span> <span class="attr">title</span>=<span class="string">&quot;My GoodReads</span></span></span><br><span class="line"><span class="string"><span class="tag">       profile&quot;</span> <span class="attr">itemprop</span>=<span class="string">&quot;url&quot;</span>&gt;</span>read books<span class="tag">&lt;/<span class="name">a</span>&gt;</span> regularly. To be a stronger and better version of</span><br><span class="line">       myself!<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>English is my second language. I am also learning <span class="tag">&lt;<span class="name">a</span></span></span><br><span class="line"><span class="tag">       <span class="attr">href</span>=<span class="string">&quot;http://www.duolingo.com/talha131&quot;</span> <span class="attr">title</span>=<span class="string">&quot;My Duolingo</span></span></span><br><span class="line"><span class="string"><span class="tag">       profile&quot;</span> <span class="attr">itemprop</span>=<span class="string">&quot;url&quot;</span>&gt;</span>German from Duolingo<span class="tag">&lt;/<span class="name">a</span>&gt;</span>.<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span>&quot;&quot;&quot;&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Blog </category>
          
          <category> Pelican </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Pelican </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>倒腾Pelican - Auto-publish shell script for pelican blog</title>
      <link href="/blog/blog/pelican/blog-auto-publish/"/>
      <url>/blog/blog/pelican/blog-auto-publish/</url>
      
        <content type="html"><![CDATA[<div class="note warning no-icon flat"><p>这是最初的那段时光，啥也不懂，不懂前端，不懂框架。那时候才研究生二年级，脑子里酝酿着转行找工作。先学Python，后学pelican，才慢慢引导我向前端进发。<br>后来如愿拿了一堆offer, 思科，中兴，华为，海康，TPLink，寒武纪。岗位从前端到后端到云计算开发。虽然后来又经历了很多事，但是最初开始学习新鲜东西的情形仍旧历历在目。<br>在寒假的学校，冬雪开始飘着……</p></div><h2 id="First-time-configuration"><a href="#First-time-configuration" class="headerlink" title="First time configuration"></a>First time configuration</h2><p>For the first time commit to you github, you need a local git configuration.<br>Use the commandline:  </p><pre><code class="bash">$ git config --global user.name &quot;your name&quot;$ git config --global user.email johndoe@example.com  </code></pre><p>you can see your global config. using:  </p><pre><code class="bash">$ git config --listuser.name=your nameuser.email=johndoe@example.com</code></pre><p>if use the <code>--global</code> option, the information above will be stored in <code>~/.gitconfig</code><br>More about <a href="https://git-scm.com/book/en/v2/Getting-Started-First-Time-Git-Setup">git configuration</a><br>And <a href="https://git-scm.com/book/en/v2">git document</a>,download provided for <a href="https://github.com/progit/progit2-zh/releases/download/v2.1.1/progit-zh-v2.1.1.pdf">中文版</a> and <a href="https://github.com/progit/progit2/releases/download/2.1.31/progit.pdf">English version</a>. </p><hr><h2 id="Update-blog"><a href="#Update-blog" class="headerlink" title="Update blog"></a>Update blog</h2><p>Our script named <code>update</code>, put under <code>~/blog/</code>, i.e. your blog root path<br>Content of <code>update</code> : </p><pre><code class="shell"> #cp -v ./setting.py content/extra/setting.py  # unnecessarymake html  cd output  echo &quot;git init  &quot; ; git init  echo &quot;git add . &quot; ; git add .   #git remote add origin https://github.com/jihenghu/jihenghu.io   #uncomment this for the first pulish    echo &quot;git commit&quot; ; git commit -m $1  echo &quot;git pull  &quot; ; git pull origin master  echo &quot;git push  &quot; ; git push origin master  </code></pre><hr><h3 id="Use-command-line"><a href="#Use-command-line" class="headerlink" title="Use command line :"></a>Use command line :</h3><pre><code class="bash">~/blog$ chmod +x update  ~/blog$ ./update &quot;comment to be attached to &quot;git commit -m&quot;&quot;  </code></pre><hr><h3 id="Example"><a href="#Example" class="headerlink" title="Example:"></a>Example:</h3><h4 id="Shell-script"><a href="#Shell-script" class="headerlink" title="Shell script:"></a>Shell script:</h4><p><img src="/blog/imgs/autoshell.jpg" alt="autoshell">  </p><h4 id="Cmd-out"><a href="#Cmd-out" class="headerlink" title="Cmd out:"></a>Cmd out:</h4><p><img src="/blog/imgs/autopic.png" alt="autoshell"> </p><h3 id="For-more-about-the-order-of-git-commit-and-git-pull-click-here"><a href="#For-more-about-the-order-of-git-commit-and-git-pull-click-here" class="headerlink" title="For more about the order of git commit and git pull click here"></a>For more about the order of <code>git commit</code> and <code>git pull</code> click <a href="https://segmentfault.com/q/1010000009549291">here</a></h3>]]></content>
      
      
      <categories>
          
          <category> Blog </category>
          
          <category> Pelican </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Pelican </tag>
            
        </tags>
      
    </entry>
    
    
  
  
    
    
    <entry>
      <title>About</title>
      <link href="/blog/about/index.html"/>
      <url>/blog/about/index.html</url>
      
        <content type="html"><![CDATA[<div style="margin-bottom:10px;padding-bottom:30px;background:url(https://cdn.jsdelivr.net/gh/jihenghu/hexo-asset@master/image/erwotingjianxiayudeshengyin.png) center no-repeat;background-height:100% auto">    <div style="width:400px;padding-left:10px; padding-top:10px;margin:0 auto;">    <div style="text-align: center;margin: 0 auto;width:200px;overflow: hidden;">    <img src="https://i.loli.net/2020/08/03/Zg3cmI6wTi8EH1X.jpg" width="100" height="100" style="border-radius: 50%;border: 3px solid #eee;">    <div style="margin: 0 auto;text-align: center;">    <p style="color:#000;padding:0px;margin:0px;font-weight: normal;">Senior Astral Projectionist</p>    <p style="color:#000;padding:0px;margin:0px;font-weight: normal;font-size:12px;">“西郊有密林，助君出重围”</p>    </div>    </div>    </div></div><h2 id="About-me"><a href="#About-me" class="headerlink" title="About me"></a>About me</h2><p>我目前非常热爱科研这回事儿，初涉行星科学的门槛，还不能融汇贯通，作一些数据分析的工作； 我的本行是生态遥感（我觉得是吧），作一些参数反演的内容。<br>做科研最开心的时候是可以按照自己的想法去尝试，非常不喜欢赶DDL。<br>我分享东西的能力很差，更新也很随缘。科研紧张的时候，活动会减少~ </p><h2 id="About-the-site"><a href="#About-the-site" class="headerlink" title="About the site"></a>About the site</h2><p>本站使用HEXO框架，Butterfly主题，托管在学校主页和GHpage上。<br>最开始deploy是在2018年1月，陆续换过很多站点：</p><ul><li>Pelican：2018-2019 -&gt; jihenghu.github.io</li><li>Vuepress: 2019-2020 -&gt; jihenghu.netlify.app</li><li>Hexo: 2020.08 - 2024.05 -&gt; home.ustc.edu.cn&#x2F;~hjh18305&#x2F;space&#x2F;</li><li>Hexo: 2024.07 -  -&gt; public.websites.umich.edu&#x2F;~jihenghu&#x2F;space&#x2F; 校内站点随缘更新</li><li>Hexo: 2025.02 -  -&gt; jihenghu.github.io 主要更新<!--See Also: 我的个人导航页 [Jiheng Navi](http://home.ustc.edu.cn/~hjh18305/) 发现更多有趣的地方。</li></ul><h2 id="GitHub"><a href="#GitHub" class="headerlink" title="GitHub"></a>GitHub</h2><p>活动非常不活跃的用户。</p><p>    <a href="https://github-readme-stats.vercel.app/api?username=jihenghu&amp;show_icons=true&amp;title_color=FFFFFF&amp;icon_color=FFFFFF&amp;text_color=FFFFFF&amp;bg_color=8e8cd8" data-fancybox="group" data-caption="" class="fancybox">    <img src="https://github-readme-stats.vercel.app/api?username=jihenghu&amp;show_icons=true&amp;title_color=FFFFFF&amp;icon_color=FFFFFF&amp;text_color=FFFFFF&amp;bg_color=8e8cd8" alt="">    </a><div class="img-alt is-center"></div></p><p>    <a href="https://ghchart.rshah.org/8e8cd8/jihenghu" data-fancybox="group" data-caption="Github Contribution" class="fancybox"><img src="https://ghchart.rshah.org/8e8cd8/jihenghu" alt="Github Contribution"></a>    <div class="img-alt is-center"></div></p>--><h2 id="访客地图"><a href="#访客地图" class="headerlink" title="访客地图"></a>访客地图</h2><p>(加载失败请刷新)</p><script type="text/javascript" id="mapmyvisitors" src="//mapmyvisitors.com/map.js?d=KgdXqjmPDqIWAZdo6SbcCDe-s_U9NF2UNRwjImTTs1I&cl=ffffff&w=a"></script>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>分类</title>
      <link href="/blog/categories/index.html"/>
      <url>/blog/categories/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>Gallery</title>
      <link href="/blog/gallery/index.html"/>
      <url>/blog/gallery/index.html</url>
      
        <content type="html"><![CDATA[<h2 id="2025"><a href="#2025" class="headerlink" title="2025"></a>2025</h2><div class="gallery-group-main">  <figure class="gallery-group">  <img class="gallery-group-img no-lightbox" src='https://s2.loli.net/2025/05/01/n3v4pgD6GodqhLB.jpg' alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">San Antonio, TX</div>  <p>Juno meeting, River walk, BBQ</p>  <a href='/blog/essays/sanantonio-25/'></a>  </figcaption>  </figure>    <figure class="gallery-group">  <img class="gallery-group-img no-lightbox" src='https://s2.loli.net/2025/08/13/yZ8HkxA9tJRhwDe.jpg' alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">Holland, MI</div>  <p>Tulip, Lake Michigan, Windmill</p>  <a href='/blog/essays/holland-mi-25/'></a>  </figcaption>  </figure>    <figure class="gallery-group">  <img class="gallery-group-img no-lightbox" src='https://s2.loli.net/2025/08/13/9fW4jMvP6m2Fhcu.jpg' alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">Frankenmuth, MI</div>  <p>Doggy Festival, Hot Air Balloon, River Cruise, Memorial Day</p>  <a href='/blog/essays/frankenmuth-mi-25/'></a>  </figcaption>  </figure>  </div><h2 id="2024"><a href="#2024" class="headerlink" title="2024"></a>2024</h2><div class="gallery-group-main">  <figure class="gallery-group">  <img class="gallery-group-img no-lightbox" src='https://s2.loli.net/2025/02/09/YINay6K2SAHfU4b.jpg' alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">Washington D.C.</div>  <p>AGU24 Fall Meeting</p>  <a href='/blog/essays/dc-agu24/'></a>  </figcaption>  </figure>    <figure class="gallery-group">  <img class="gallery-group-img no-lightbox" src='https://s2.loli.net/2025/02/09/xo94mVPBw8b3Ukp.jpg' alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">Mexico</div>  <p>Cancun, Tulum, Chichen Itza</p>  <a href='/blog/essays/mexico_24/'></a>  </figcaption>  </figure>    <figure class="gallery-group">  <img class="gallery-group-img no-lightbox" src='https://s2.loli.net/2025/02/09/94aWR5UIZHqKjwF.jpg' alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">South Korea</div>  <p>AOGS24 PyeongChang</p>  <a href='/blog/essays/skorea-aogs24/'></a>  </figcaption>  </figure>  </div><h2 id="2023"><a href="#2023" class="headerlink" title="2023"></a>2023</h2><div class="gallery-group-main">  <figure class="gallery-group">  <img class="gallery-group-img no-lightbox" src='https://s2.loli.net/2023/12/17/hm7JtLaFUe2v3Hw.jpg' alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">San Francisco, CA</div>  <p>AGU23 Fall Meeting</p>  <a href='/blog/essays/san-francisco-agu23/'></a>  </figcaption>  </figure>    <figure class="gallery-group">  <img class="gallery-group-img no-lightbox" src='https://s2.loli.net/2024/01/14/Sz49VRQW5Cfa1F7.jpg' alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">Ann Arbor, MI</div>  <p>Winter`s Coming</p>  <a href='/blog/essays/winter-in-ann-arbor/'></a>  </figcaption>  </figure>    <figure class="gallery-group">  <img class="gallery-group-img no-lightbox" src='https://s2.loli.net/2023/11/24/Dxl6vBEaj2JNntO.jpg' alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">Ann Arbor, MI</div>  <p>安娜堡的日与夜</p>  <a href='/blog/essays/days-in-ann-arbor/'></a>  </figcaption>  </figure>  </div>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>标签</title>
      <link href="/blog/tags/index.html"/>
      <url>/blog/tags/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>花园墙外</title>
      <link href="/blog/link/index.html"/>
      <url>/blog/link/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>心情和留言</title>
      <link href="/blog/shuoshuo/index.html"/>
      <url>/blog/shuoshuo/index.html</url>
      
        <content type="html"><![CDATA[<script src="https://libs.baidu.com/jquery/2.0.0/jquery.min.js"></script><body><script>$(document).ready(function () {    if(location.href.indexOf("#reloaded")==-1){        location.href=location.href+"#reloaded";        location.reload();    }})var img="https://i.loli.net/2020/08/03/Zg3cmI6wTi8EH1X.jpg";var username="Herrera";var appID="XasjRO2ueYFyfNrgWHUNK0X1-gzGzoHsz";var appKEY="XKBndqTfzjWztL0GPwQRobn8";var placeholder1="写下心情~";var per=5;var lazy=1;var slanguage="zh";var severurl="https://xasjro2u.lc-cn-n1-shared.com";var bgimg="https://cdn.jsdelivr.net/gh/jihenghu/hexo-asset@master/image/place-holder-img-bg.webp";var repo_pt_img="/jihenghu/artitalk-assets/";var repo_pt_mp3="/jihenghu/artitalk-assets/";var repo_pt_mp4="/jihenghu/artitalk-assets/";</script>    <h3><img class="atemoji gallery-group-img loading" src="https://cdn.jsdelivr.net/gh/Artitalk/Artitalk-emoji/彩虹.png" data-ll-status="loading">我用来更新心情和动态的地方</h3>    <div id="artitalk_main"></div>    <script type="text/javascript" src="https://unpkg.com/artitalk"></script></body>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>我的2024</title>
      <link href="/blog/todos/2024.html"/>
      <url>/blog/todos/2024.html</url>
      
        <content type="html"><![CDATA[<p>这里继续记录中要事情和心情：</p><ul><li>元月：<br>今年过完元旦其实就开始新一年的工作了，先前成哥比较忙，我自己做了很多国内的工作，包括静止卫星联合的地表微波发射率反演算法原型。<br>11日开学，逐渐开始新任务，关于juno微波观测的信号处理，一开始我们定的目标是做deconvolution, 涉及到的观测几何方法和相应的deconvolution算法我比较了解。<br>随着工作的展开</li></ul>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>To Do List</title>
      <link href="/blog/todos/index.html"/>
      <url>/blog/todos/index.html</url>
      
        <content type="html"><![CDATA[<h2 id="一些重要的日子"><a href="#一些重要的日子" class="headerlink" title="一些重要的日子"></a>一些重要的日子</h2><ul><li><p>2025</p><ul><li><p>2025-08-25 开始修改RSE, 还有30d, 任务重</p></li><li><p>2025-08-24 投稿North pole，希望能送审</p></li><li><p>2025-08-15 来美国两年第一次买到双汇火腿肠，太难了</p></li><li><p>2025-08-10 闪电相关的工作有了不错的结果，希望冬天可以写一篇短的投出去</p></li><li><p>2025-08-06 North pole稿子开始第二轮Team circulation, 只有一些小的建议，修改了标题，增加了呼应段落</p></li><li><p>2025-08-02 帮忙搬家，作为司机解锁人生第一次V8驾驶体验：U-HAUL !!!</p></li><li><p>2025-07-23 RSE稿件回来了, 2 major, 1 reject, 给了60天Major revision</p></li><li><p>2025-07-12 Blake farm的薰衣草节</p></li><li><p>2025-07-01 Xinyue 和Qiaoqiao加入了CLaSP博后，小伙伴队伍继续壮大</p></li><li><p>2025-06-31 CPC稿件完成写作，但是由于north pole的修改暂停处理</p></li><li><p>2025-06-01 North pole稿子开始在Team 第一轮circulation，收到很多Comments.</p></li><li><p>2025-05-25 Frankenmuth出游，游船，狗狗节，热气球，廊桥，Aerial park</p></li><li><p>2025-05-21 Emissivity稿件投稿到RSE, 3日WE, 七日UR</p></li><li><p>2025-05-15 完成emissivity的稿件，这个工作从23NOV开始写第一行代码，数据达到24T以上</p></li><li><p>2024-05-09 Holland, Grand Rapids两日游：郁金香节，密歇根湖和动物园，见到小麦</p></li><li><p>2025-04-08~11 Juno Mission Science Team Meeting, San Antonio, TX</p></li><li><p>2025-04-04 Michigan Geoscience Union Conference</p></li><li><p>2025-03-31 三月持续写作Emissivity的稿件和CPC的相关分析</p></li><li><p>2025-02-08 开始CPC的稿件</p></li><li><p>2025-01-29 新年到，Juno pole的初稿完成，开始修改</p></li><li><p>2025-01-08 Qiuyan从国内休假回来</p></li></ul></li><li><p>2024</p><ul><li>2024-12-18 假期加班，Juno pole和emissivity两个工作一起赶</li><li>2024-12-08 AGU24, 时隔6年再次来到华盛顿</li><li>2024-11-14 密歇根农场摘苹果、南瓜</li><li>2024-09-18 撞车啦，开刷保险和维修副本</li><li>2024-09-02 提车了，小马转子引擎”zoom~zoom~”</li><li>2024-07-28 搬进新家，在家办公很cozy</li><li>2024-07-06 回到安娜堡，Qiuyan也开始在CLaSP工作，同一个office</li><li>2024-06-29 回国</li><li>2024-06-23 到达平昌，AOGS24会议，Oral presentation</li><li>2024-03-01 Qiuyan也拿到了Postdoc offer, 但是签证check, 入职一再推迟到七月</li><li>2024-02-01~04-20 CDS API基本停止服务，地球上的活停滞</li><li>2024-01-07 新学期，开始Juno的研究</li></ul></li><li><p>2023</p><ul><li>2023-12-10 旧金山参加AGU，Qiuyan找工作</li><li>2023-11-01 开始海外生活，国内辞职</li><li>2023-10-22 💕订婚啦💕</li><li>2023-07-21 虽然很晚，但是拿到了密大的offer</li><li>2023-05-19 博士论文答辩成功</li></ul></li><li><p>More earlier</p><ul><li>2021-09-27 第一篇SCI接收</li><li>2020-09-01 博一啦，加油干</li></ul></li></ul>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>Music</title>
      <link href="/blog/music/index.html"/>
      <url>/blog/music/index.html</url>
      
        <content type="html"><![CDATA[<h3 id="我的歌单"><a href="#我的歌单" class="headerlink" title="我的歌单"></a>我的歌单</h3>    <div id="aplayer-vQNpFdZr" class="aplayer aplayer-tag-marker meting-tag-marker"         data-id="2252932791" data-server="netease" data-type="playlist" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme="#FF4081"    ></div>      <div id="aplayer-BUWsQyho" class="aplayer aplayer-tag-marker meting-tag-marker"         data-id="5048673400" data-server="netease" data-type="playlist" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme="#FF4081"    ></div>      <div id="aplayer-KgxhbEUC" class="aplayer aplayer-tag-marker meting-tag-marker"         data-id="523845661" data-server="netease" data-type="playlist" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme="#FF4081"    ></div>  ]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>TrickBox</title>
      <link href="/blog/trickbox/index.html"/>
      <url>/blog/trickbox/index.html</url>
      
        <content type="html"><![CDATA[<h2 id="emcee"><a href="#emcee" class="headerlink" title="emcee"></a>emcee</h2><p>A Markov Chain Monto Carlo (MCMC) python lib and its docs</p><ul><li>Link: <a href="https://emcee.readthedocs.io/en/stable/tutorials/quickstart/">https://emcee.readthedocs.io/en/stable/tutorials/quickstart/</a><br><img src="https://s2.loli.net/2024/04/16/jrRtI3zkoaX8QsS.png" alt="EMCEE"></li></ul><p>see also: </p><ul><li>MCMC: <a href="https://people.duke.edu/~ccc14/sta-663/MCMC.html">https://people.duke.edu/~ccc14/sta-663/MCMC.html</a></li><li>PyMC3: <a href="https://people.duke.edu/~ccc14/sta-663/PyMC3.html">https://people.duke.edu/~ccc14/sta-663/PyMC3.html</a></li></ul><h2 id="Jovian-Facts-Sheet"><a href="#Jovian-Facts-Sheet" class="headerlink" title="Jovian Facts Sheet"></a>Jovian Facts Sheet</h2><ul><li>Link: <a href="https://nssdc.gsfc.nasa.gov/planetary/factsheet/jupiterfact.html">https://nssdc.gsfc.nasa.gov/planetary/factsheet/jupiterfact.html</a><table><thead><tr><th align="left">-</th><th align="left">Mass (10^24 kg)</th><th align="left">Volume (10^10 km3)</th><th align="left">Equatorial radius (1 bar level) (km)</th><th align="left">Polar radius (km)</th><th align="left">Volumetric mean radius (km)</th><th align="left">Ellipticity</th><th align="left">Mean density (kg&#x2F;m3)</th><th align="left">Gravity (mean, 1 bar) (m&#x2F;s2)</th><th align="left">Acceleration (eq., 1 bar) (m&#x2F;s2)</th><th align="left">Acceleration (pole, 1 bar) (m&#x2F;s2)</th></tr></thead><tbody><tr><td align="left">Jupiter</td><td align="left">1,898.13</td><td align="left">143,128</td><td align="left">71,492</td><td align="left">66,854</td><td align="left">69,911</td><td align="left">0.06487</td><td align="left">1,326</td><td align="left">25.92</td><td align="left">23.12</td><td align="left">27.01</td></tr><tr><td align="left">Earth</td><td align="left">5.9722</td><td align="left">108.321</td><td align="left">6,378.10</td><td align="left">6,356.80</td><td align="left">6,371.00</td><td align="left">0.00335</td><td align="left">5,513</td><td align="left">9.82</td><td align="left">9.78</td><td align="left">9.83</td></tr><tr><td align="left">Ratio(Jupiter&#x2F;Earth)</td><td align="left">317.83</td><td align="left">1321.33</td><td align="left">11.209</td><td align="left">10.517</td><td align="left">10.973</td><td align="left">19.36</td><td align="left">0.241</td><td align="left">2.64</td><td align="left">2.364</td><td align="left">2.748</td></tr></tbody></table></li></ul><img alt="Jupiter facts: NASA official" style="height:300px" src="https://nssdc.gsfc.nasa.gov/planetary/image/jupiter.jpg"><hr><h2 id="JPL-SPICE"><a href="#JPL-SPICE" class="headerlink" title="JPL SPICE"></a>JPL SPICE</h2><p>JPL官方软件，计算天体运行，事件窗口，卫星姿态，观测几何的集大成者</p><ul><li>Link: <a href="https://naif.jpl.nasa.gov/naif/toolkit.html">https://naif.jpl.nasa.gov/naif/toolkit.html</a><br><img src="https://s2.loli.net/2024/02/24/y5lkrC3tTm4ScPs.png" alt="O,Dare Mighty Things!!!"></li></ul><hr><h2 id="Perceptually-Uniform-Colour-Maps"><a href="#Perceptually-Uniform-Colour-Maps" class="headerlink" title="Perceptually Uniform Colour Maps"></a>Perceptually Uniform Colour Maps</h2><p>选择合适的ColorMap，展示数据的全部细节</p><ul><li>Link：<a href="https://colorcet.com/">https://colorcet.com/</a><br><img src="https://s2.loli.net/2024/02/24/m5jfkPrpwA3M48O.png" alt="What difference does this make?"></li></ul><hr><h2 id="WebPlotDigitizer"><a href="#WebPlotDigitizer" class="headerlink" title="WebPlotDigitizer"></a>WebPlotDigitizer</h2><p>挖掘图中的数据</p><ul><li>Link: <a href="https://apps.automeris.io/wpd/">https://apps.automeris.io/wpd/</a><br><img src="https://s2.loli.net/2024/02/24/ncDvPR1CZXW3zUj.png" alt="WebPlotDigitizer"></li></ul><hr><h2 id="Learn-Git-Branching"><a href="#Learn-Git-Branching" class="headerlink" title="Learn Git Branching"></a>Learn Git Branching</h2><p>Learn Git workflow in animation interactive way.</p><ul><li>Link <a href="https://learngitbranching.js.org/">https://learngitbranching.js.org/</a><br><img src="https://s2.loli.net/2024/03/26/txXhfJCRceLlIK9.png" alt="Learn Git Branching"></li></ul><h2 id="Custom-git-command"><a href="#Custom-git-command" class="headerlink" title="Custom git command"></a>Custom git command</h2><p>Work elegantly with Github</p><ul><li>Link：<a href="https://pycanoe.readthedocs.io/en/latest/README-workflow.html">https://pycanoe.readthedocs.io/en/latest/README-workflow.html</a></li></ul><hr><h2 id="GOES-R-Satellite-Latitude-and-Longitude-Grid-Projection"><a href="#GOES-R-Satellite-Latitude-and-Longitude-Grid-Projection" class="headerlink" title="GOES-R Satellite Latitude and Longitude Grid Projection"></a>GOES-R Satellite Latitude and Longitude Grid Projection</h2><p>地球静止卫星的网格、坐标和扫描角度计算</p><ul><li>Link: <a href="https://makersportal.com/blog/2018/11/25/goes-r-satellite-latitude-and-longitude-grid-projection-algorithm">https://makersportal.com/blog/2018/11/25/goes-r-satellite-latitude-and-longitude-grid-projection-algorithm</a><br>Also see section 4.2.8 of Link：<a href="https://www.goes-r.gov/products/docs/PUG-L2+-vol5.pdf">https://www.goes-r.gov/products/docs/PUG-L2+-vol5.pdf</a><br><img src="https://s2.loli.net/2024/02/24/bDwFWeHd2EBPhUG.png" alt="Transfer back and forth"></li></ul><hr><h2 id="timestamp-converter"><a href="#timestamp-converter" class="headerlink" title="timestamp-converter"></a>timestamp-converter</h2><p>快速计算EPOCH Since自定义日期的计算器，如果你经常处理气象卫星数据，这个很有用。</p><ul><li>Link: <a href="https://www.dcode.fr/timestamp-converter">https://www.dcode.fr/timestamp-converter</a><br><img src="https://s2.loli.net/2024/04/16/IMQSxu8qreOHDAB.png" alt="timestamp-converter"></li></ul>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>我的2023</title>
      <link href="/blog/todos/2023-.html"/>
      <url>/blog/todos/2023-.html</url>
      
        <content type="html"><![CDATA[<p>我的2023年，这里说的是农历年的事情，按照我们的工作周期，新的一年按照农历新年开始，应该说是很多年来最丰富的一年，虽说到头来工作上并无实质建树，但是收获了大堆幸福的时刻和重要事件。人生的遭际滚滚向前，不由得人喊一句”慢点来吧!”</p><h2 id="感情："><a href="#感情：" class="headerlink" title="感情："></a>感情：</h2><p>这一年来，最幸福的时刻大部分都是亲爱的TA给的，最难忘的事情就是和燕子师姐订婚领证，值得一生珍藏的回忆。虽然临行前匆匆决定和落实了很多事情，但是丝毫没有冷静下来归于平淡的迷茫感。起码在我的心中，很多事已经早就认定并且有信心经营好两个人未来啦。</p><p>最遗憾的事情就是走的太匆忙了，没有安排一场浪漫的校园求婚，漂亮的照片，也没有一次诚挚的告白，这些我一定会补上。</p><h2 id="和秋秋一起的瞬间"><a href="#和秋秋一起的瞬间" class="headerlink" title="和秋秋一起的瞬间"></a>和秋秋一起的瞬间</h2><p>开车去我家过中秋，打柿子<br>去太和</p><h2 id="家人："><a href="#家人：" class="headerlink" title="家人："></a>家人：</h2><p>老弟的婚礼<br>姐姐请客的路边摊<br>弟弟和弟妹的科大游记<br>姐姐一家来学校玩</p><p>家乡的美景，学校的美景</p><h2 id="毕业啦"><a href="#毕业啦" class="headerlink" title="毕业啦~"></a>毕业啦~</h2><h2 id="海外OFFER"><a href="#海外OFFER" class="headerlink" title="海外OFFER:"></a>海外OFFER:</h2><h2 id="伙伴们："><a href="#伙伴们：" class="headerlink" title="伙伴们："></a>伙伴们：</h2><p>话鸡毛，三番同学会</p><h2 id="旅游："><a href="#旅游：" class="headerlink" title="旅游："></a>旅游：</h2><p>今年因为工作和生活，去了很多地方，粗略列举一些有：</p><ul><li>02.18 九华山两日</li><li>04.06- 04.09 北京：气象局，北大，清华，颐和园，天安门，国博，前门大街…</li><li>04.10 大气所淮南研究院及观测场</li><li>05.07 合肥市巢湖市三瓜公社</li><li>09.08- 09.10 北京密云大气所年会, 天安门，国博，前门大街</li><li>09.25- 09.26 上海，签证面试，南京路，外滩</li><li>09.29- 10.01 太和县，女朋友家，好吃</li><li>10.02- 10.4 四川广元</li><li>10.05- 10.07 西安市，大唐不夜城，钟鼓楼，陕博</li><li>10.14- 10.15 九华山两日</li><li>10.19- 10.22 太和县，订婚</li><li>11.01- 11.02 合肥-广州-洛杉矶-底特律-安娜堡</li><li>12.10- 12.15 旧金山 AGU年会</li></ul><h2 id="工作："><a href="#工作：" class="headerlink" title="工作："></a>工作：</h2><h3 id="和卫星中心的合作"><a href="#和卫星中心的合作" class="headerlink" title="和卫星中心的合作"></a>和卫星中心的合作</h3><h3 id="会议"><a href="#会议" class="headerlink" title="会议"></a>会议</h3><h3 id="大气所年会"><a href="#大气所年会" class="headerlink" title="大气所年会"></a>大气所年会</h3><h3 id="出差考察场地"><a href="#出差考察场地" class="headerlink" title="出差考察场地"></a>出差考察场地</h3><h3 id="算法开发"><a href="#算法开发" class="headerlink" title="算法开发"></a>算法开发</h3><h3 id="文章问题"><a href="#文章问题" class="headerlink" title="文章问题~"></a>文章问题~</h3><h3 id="带师弟师妹"><a href="#带师弟师妹" class="headerlink" title="带师弟师妹"></a>带师弟师妹</h3><h3 id="课题组服务"><a href="#课题组服务" class="headerlink" title="课题组服务"></a>课题组服务</h3><h3 id="熬夜加班写材料"><a href="#熬夜加班写材料" class="headerlink" title="熬夜加班写材料"></a>熬夜加班写材料</h3><h3 id="入职科大博后"><a href="#入职科大博后" class="headerlink" title="入职科大博后"></a>入职科大博后</h3><h3 id="是否去深空探测实验室"><a href="#是否去深空探测实验室" class="headerlink" title="是否去深空探测实验室"></a>是否去深空探测实验室</h3><hr><h3 id="生活"><a href="#生活" class="headerlink" title="生活"></a>生活</h3><p><strong>关于做菜</strong><br>我很喜欢做菜。这一点在我和小秋秋同居隔离的那段时间我就发现了，那时候我只是觉得应该平衡一下工作和生活，我老师、家人、朋友甚至心理老师都这样建议我。后来我发现，成功做一道菜带来的成就感很可观。做菜是一件极其感性的事情，不同于炼丹药和做科研，不只是固定的配方和瓶瓶罐罐，需要加入很多感觉。我料想自己做成什么样子，我会喜欢吃，秋秋师姐会喜欢吃，我妈妈会怎么做，区别在哪，这些都是很感性的问题。我会很开心的备菜，一步步学会合适的剂量，什么酱汁我不喜欢，芹菜会增加鸡的香味，什么佐料不能含糊，什么火候适合下锅，颠锅也很好玩只不过只能右手完成……。<br>我羡慕我老弟菜做的好吃，从素菜到烧肉，小龙虾，我觉得我也想那样，才是生活，所以以后我去新东方学习一下专业的烹饪~ 如今看来，只要你做的多了，不用专门去学，也会慢慢有心得。<br>我的大部分动力来自于如果我老婆和我一起生活，那得顿顿合口并且点赞。而且在安娜堡，我真的很馋啊，两周我就吃够了和中汉堡、披萨、韩国菜和panda了。所以也许我心情不好，但是我也会在做菜中忘掉很多烦恼。<br>分享一些我做的菜，慢慢有心得了：</p><div class="gallery-group-main">  <figure class="gallery-group">  <img class="gallery-group-img no-lightbox" src='https://s2.loli.net/2024/03/01/fHPe1WLySmoEt9R.jpg' alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">Bon Appetite!!</div>  <p>生命体征维持技巧</p>  <a href='/blog/gallery/bon_appetite/'></a>  </figcaption>  </figure>  </div><p><strong>关于睡眠</strong></p><h3 id="关于健身"><a href="#关于健身" class="headerlink" title="关于健身"></a>关于健身</h3><h3 id="关于爱好"><a href="#关于爱好" class="headerlink" title="关于爱好"></a>关于爱好</h3><ul><li>足球：曼联球衣</li><li>橄榄球</li><li>王者荣耀</li><li>ns 塞尔达</li></ul><h3 id="BGM"><a href="#BGM" class="headerlink" title="BGM"></a>BGM</h3><p>今年最爱的书：<br>今年最爱的歌曲：</p><h2 id="安娜堡："><a href="#安娜堡：" class="headerlink" title="安娜堡："></a>安娜堡：</h2><p>我的偶像成哥</p><h2 id="未来："><a href="#未来：" class="headerlink" title="未来："></a>未来：</h2><h2 id="感悟也得说一点…"><a href="#感悟也得说一点…" class="headerlink" title="感悟也得说一点…"></a>感悟也得说一点…</h2><p>关于抉择,出国工作？入职深空探测实验室？留下来做博后？其实是取舍的问题。</p><p><strong>关于心态</strong><br>我一直缺乏信心，两方面原因，一是我读博期间做了很多工程性质的工作，发文章很少，这还是不是问题，问题时长期的琐碎的事务导致安静做科研的时间很少，既缺少研究科学问题的思维，又缺少写作的技巧。另一方面是我作为一个农村长大的孩子来说，胆子还是太小，社恐，不自信，英语口语拉胯。这些在我出国以后更让我感到和别人的差距。实际上，从我的角度看，我已经很努力了，只不过，我的天资有个上限，努力和优秀的差距往往就是那些成长因素差异，有些是我一辈子都弥合不了的。从终身奋斗的角度还说，我还不能轻易认命什么的，人的价值在于自我实现。即使我只是众多到不了自己梦想的一份子，即使我只是比大部分农村娃更敢想，大胆做梦，或者进入了我们陌生的领域，又或者作为普通青年中的一员，我更平衡不好理想、现实和欲望的重量，我依然多多少少比过去的自己强，或者比预期的自己存在一个巨大的变量。</p><p>我超级容易受外界的影响，实际上我会不断试图学习别人的成功过经验（但是我不会看成功学的东西），但是套路永远不是道路，我得找到自己得问题。我常常会觉得，好嘛，为什么很多人可以那么游刃有余，看看自己苦哈哈的样子，只能宽慰一下，其实行不行原不在努力与否，所谓天时地利人和，我本身走的弯路是因为我必须要走弯路才能走到这里，就这么简单的道理。生命在赋予一些额外的意义，我们的赛道本不相同，能走到哪里也是不一样的。</p><p><strong>还有心气吗</strong><br>有的，但是不多了。也许以前放弃过，但是后来学会自我画饼，这很可怕，加上我本身不是很有主见，行差踏错好像只在旦夕之间。我这个固执乐观的人，仍然会比大部分人更悲观，不停地赌上了更多的东西。而且我年纪很大了，成长对我来说是一个倒计时中反复试错的过程。我希望到哪天，我能够兑现处一些价值（虽然我难以说出什么价值所在，目前。），使我有足够的时间活得感性，看更多的书，陪家人。</p><h2 id="Timeline"><a href="#Timeline" class="headerlink" title="Timeline"></a>Timeline</h2><ul><li><p>1-23: 收到Alex Konings教授的拒信，但是很受鼓舞，粘贴如下：</p></li><li><p>3-14 今年过几周的联系维修，我们终于搬进了科大西区青年公寓，地方虽然下，但是很温馨，窗外的景色也绝佳，在家办公很惬意。</p></li></ul>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>Bon Appetite!!</title>
      <link href="/blog/gallery/bon_appetite/index.html"/>
      <url>/blog/gallery/bon_appetite/index.html</url>
      
        <content type="html"><![CDATA[<style>main.hide-aside {    max-width:1300px!important;}</style><div class="gallery">    <div class="fj-gallery  data" data-rowHeight="220" data-limit="10">    <span class="gallery-data">[{"url":"https://s2.loli.net/2024/03/01/pC9SibZKOH87De1.jpg","alt":"216a3e54322f2e534108d9e9a7e062b.jpg"},{"url":"https://s2.loli.net/2024/03/01/BfiCNEeOXGwq7Yo.jpg","alt":"f7d2387434c167997f9088295797474.jpg"},{"url":"https://s2.loli.net/2024/03/01/gOvuGweEfdySNh1.jpg","alt":"0f8c7c0a8f027ac9e8ed6194d7babe7.jpg"},{"url":"https://s2.loli.net/2024/03/01/xX7WCK4IPSliwVH.jpg","alt":"6a4d7c47790b007cf89aa2e16614d6c.jpg"},{"url":"https://s2.loli.net/2024/03/01/DYR62vhiNOyHm9U.jpg","alt":"65f4799b4bdd355252bad70c38278f9.jpg"},{"url":"https://s2.loli.net/2024/03/01/JXRDtNEIryBLi3Q.jpg","alt":"2de67a4d6fc7c548faa43702a4d4360.jpg"},{"url":"https://s2.loli.net/2024/03/01/InRz1vVDSlYbpcf.jpg","alt":"52ad646bc8173d316d566f684d411a6.jpg"},{"url":"https://s2.loli.net/2024/03/01/JPRtCpqjTKxe5l9.jpg","alt":"7507ab56c9933adc009889dc1623cf5.jpg"},{"url":"https://s2.loli.net/2024/03/01/z2q7ZMOjlTupS8E.jpg","alt":"72247ccf4e594bbf7963a04f5c56da4.jpg"}]</span>    </div>    <button class="gallery-load-more"><span>Load More</span><i class="fa-solid fa-arrow-down"></i></button>    </div>]]></content>
      
    </entry>
    
    
  
</search>
